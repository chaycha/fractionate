{"id":"2e0e03c4b4d9879749fd1613331f2d4f","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Permit.sol\";\nimport \"../../../interfaces/IERC5805.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is ERC20Permit, IERC5805 {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(clock()), votes: SafeCast.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/GovernanceToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\n\ncontract GovernanceToken is ERC20Votes {\n    uint256 public s_maxSupply = 1000000000000000000000000;\n\n    constructor()\n        ERC20(\"GovernanceToken\", \"GT\")\n        ERC20Permit(\"GovernanceToken\")\n    {\n        _mint(msg.sender, s_maxSupply);\n    }\n\n    // The functions below are overrides required by Solidity.\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20Votes) {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address to, uint256 amount) internal override(ERC20Votes) {\n        super._mint(to, amount);\n    }\n\n    function _burn(\n        address account,\n        uint256 amount\n    ) internal override(ERC20Votes) {\n        super._burn(account, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"135:132:0","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IVotes","nameLocation":"278:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"291:71:0","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":11,"name":"DelegateChanged","nameLocation":"373:15:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:0","nodeType":"VariableDeclaration","scope":11,"src":"389:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:0","nodeType":"VariableDeclaration","scope":11,"src":"416:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:0","nodeType":"VariableDeclaration","scope":11,"src":"446:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:0"},"src":"367:107:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"480:124:0","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":20,"name":"DelegateVotesChanged","nameLocation":"615:20:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:0","nodeType":"VariableDeclaration","scope":20,"src":"636:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:0","nodeType":"VariableDeclaration","scope":20,"src":"662:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:0","nodeType":"VariableDeclaration","scope":20,"src":"687:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:0"},"src":"609:98:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"713:79:0","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":28,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"account","nameLocation":"823:7:0","nodeType":"VariableDeclaration","scope":28,"src":"815:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28,"src":"855:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:0"},"scope":77,"src":"797:67:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"870:230:0","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":38,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:0","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"account","nameLocation":"1135:7:0","nodeType":"VariableDeclaration","scope":38,"src":"1127:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:0","nodeType":"VariableDeclaration","scope":38,"src":"1144:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38,"src":"1186:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:0"},"scope":77,"src":"1105:90:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1201:481:0","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:0","nodeType":"VariableDeclaration","scope":46,"src":"1715:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"1757:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:0"},"scope":77,"src":"1687:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1772:71:0","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"account","nameLocation":"1875:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1867:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1907:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:0"},"scope":77,"src":"1848:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1922:71:0","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:0","nodeType":"VariableDeclaration","scope":60,"src":"2016:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"2043:0:0"},"scope":77,"src":"1998:46:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2050:67:0","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:0","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:0","nodeType":"VariableDeclaration","scope":76,"src":"2145:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:0","nodeType":"VariableDeclaration","scope":76,"src":"2164:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2179:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"v","nameLocation":"2201:1:0","nodeType":"VariableDeclaration","scope":76,"src":"2195:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"r","nameLocation":"2212:1:0","nodeType":"VariableDeclaration","scope":76,"src":"2204:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":70,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"s","nameLocation":"2223:1:0","nodeType":"VariableDeclaration","scope":76,"src":"2215:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2234:0:0"},"scope":77,"src":"2122:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"268:1969:0","usedErrors":[]}],"src":"110:2128:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[102]},"id":103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":102,"linearizedBaseContracts":[102],"name":"IERC5267","nameLocation":"142:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"157:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":82,"name":"EIP712DomainChanged","nameLocation":"252:19:1","nodeType":"EventDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[],"src":"271:2:1"},"src":"246:28:1"},{"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"280:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":101,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"446:2:1"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"fields","nameLocation":"516:6:1","nodeType":"VariableDeclaration","scope":101,"src":"509:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":85,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"name","nameLocation":"550:4:1","nodeType":"VariableDeclaration","scope":101,"src":"536:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":87,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"version","nameLocation":"582:7:1","nodeType":"VariableDeclaration","scope":101,"src":"568:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":89,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"chainId","nameLocation":"611:7:1","nodeType":"VariableDeclaration","scope":101,"src":"603:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:1","nodeType":"VariableDeclaration","scope":101,"src":"632:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"salt","nameLocation":"679:4:1","nodeType":"VariableDeclaration","scope":101,"src":"671:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"extensions","nameLocation":"714:10:1","nodeType":"VariableDeclaration","scope":101,"src":"697:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":98,"nodeType":"ArrayTypeName","src":"697:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:1"},"scope":102,"src":"425:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":103,"src":"132:605:1","usedErrors":[]}],"src":"107:631:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[111],"IERC6372":[126],"IVotes":[77]},"id":112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":104,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":112,"sourceUnit":78,"src":"132:40:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":112,"sourceUnit":127,"src":"173:24:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":107,"name":"IERC6372","nameLocations":["221:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":126,"src":"221:8:2"},"id":108,"nodeType":"InheritanceSpecifier","src":"221:8:2"},{"baseName":{"id":109,"name":"IVotes","nameLocations":["231:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"231:6:2"},"id":110,"nodeType":"InheritanceSpecifier","src":"231:6:2"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":111,"linearizedBaseContracts":[111,77,126],"name":"IERC5805","nameLocation":"209:8:2","nodeType":"ContractDefinition","nodes":[],"scope":112,"src":"199:41:2","usedErrors":[]}],"src":"107:134:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[126]},"id":127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":113,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":126,"linearizedBaseContracts":[126],"name":"IERC6372","nameLocation":"142:8:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"157:133:3","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":119,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:3","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"309:2:3"},"returnParameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":119,"src":"335:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":116,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:3"},"scope":126,"src":"295:48:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"349:48:3","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":125,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:3","nodeType":"FunctionDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"474:2:3"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":125,"src":"500:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":122,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:3"},"scope":126,"src":"455:60:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":127,"src":"132:385:3","usedErrors":[]}],"src":"107:411:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1780],"ERC20":[713],"IERC20":[791],"IERC20Metadata":[1722]},"id":714,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":128,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":129,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":714,"sourceUnit":792,"src":"130:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":714,"sourceUnit":1723,"src":"153:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":714,"sourceUnit":1781,"src":"195:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":133,"name":"Context","nameLocations":["1550:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1780,"src":"1550:7:4"},"id":134,"nodeType":"InheritanceSpecifier","src":"1550:7:4"},{"baseName":{"id":135,"name":"IERC20","nameLocations":["1559:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":791,"src":"1559:6:4"},"id":136,"nodeType":"InheritanceSpecifier","src":"1559:6:4"},{"baseName":{"id":137,"name":"IERC20Metadata","nameLocations":["1567:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1722,"src":"1567:14:4"},"id":138,"nodeType":"InheritanceSpecifier","src":"1567:14:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"230:1301:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":713,"linearizedBaseContracts":[713,1722,791,1780],"name":"ERC20","nameLocation":"1541:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":142,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:4","nodeType":"VariableDeclaration","scope":713,"src":"1588:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":141,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":148,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:4","nodeType":"VariableDeclaration","scope":713,"src":"1640:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":147,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":146,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":150,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:4","nodeType":"VariableDeclaration","scope":713,"src":"1714:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":152,"mutability":"mutable","name":"_name","nameLocation":"1764:5:4","nodeType":"VariableDeclaration","scope":713,"src":"1749:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":151,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":154,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:4","nodeType":"VariableDeclaration","scope":713,"src":"1775:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":153,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":170,"nodeType":"Block","src":"2036:57:4","statements":[{"expression":{"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":162,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2046:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":163,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2054:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":165,"nodeType":"ExpressionStatement","src":"2046:13:4"},{"expression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":166,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2069:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":167,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2079:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":169,"nodeType":"ExpressionStatement","src":"2069:17:4"}]},"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"1804:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":171,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"name_","nameLocation":"2006:5:4","nodeType":"VariableDeclaration","scope":171,"src":"1992:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":156,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:4","nodeType":"VariableDeclaration","scope":171,"src":"2013:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:4"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"2036:0:4"},"scope":713,"src":"1980:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1709],"body":{"id":180,"nodeType":"Block","src":"2227:29:4","statements":[{"expression":{"id":178,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2244:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":177,"id":179,"nodeType":"Return","src":"2237:12:4"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"2099:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":181,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:4","nodeType":"FunctionDefinition","overrides":{"id":174,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:4"},"parameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"2171:2:4"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"2212:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:4"},"scope":713,"src":"2158:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1715],"body":{"id":190,"nodeType":"Block","src":"2440:31:4","statements":[{"expression":{"id":188,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2457:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":187,"id":189,"nodeType":"Return","src":"2450:14:4"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2262:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":191,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:4","nodeType":"FunctionDefinition","overrides":{"id":184,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:4"},"parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"2384:2:4"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"2425:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":185,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:4"},"scope":713,"src":"2369:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1721],"body":{"id":200,"nodeType":"Block","src":"3169:26:4","statements":[{"expression":{"hexValue":"3138","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":197,"id":199,"nodeType":"Return","src":"3179:9:4"}]},"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"2477:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":201,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:4","nodeType":"FunctionDefinition","overrides":{"id":194,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:4"},"parameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"3121:2:4"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":201,"src":"3162:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":195,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:4"},"scope":713,"src":"3104:91:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[740],"body":{"id":210,"nodeType":"Block","src":"3325:36:4","statements":[{"expression":{"id":208,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3342:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":207,"id":209,"nodeType":"Return","src":"3335:19:4"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"3201:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:4","nodeType":"FunctionDefinition","overrides":{"id":204,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:4"},"parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"3275:2:4"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3316:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:4"},"scope":713,"src":"3255:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":224,"nodeType":"Block","src":"3502:42:4","statements":[{"expression":{"baseExpression":{"id":220,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3519:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":222,"indexExpression":{"id":221,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3529:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":219,"id":223,"nodeType":"Return","src":"3512:25:4"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3367:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":225,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:4","nodeType":"FunctionDefinition","overrides":{"id":216,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:4"},"parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"3446:7:4","nodeType":"VariableDeclaration","scope":225,"src":"3438:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:4"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"3493:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:4"},"scope":713,"src":"3419:125:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[758],"body":{"id":249,"nodeType":"Block","src":"3825:104:4","statements":[{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"owner","nameLocation":"3843:5:4","nodeType":"VariableDeclaration","scope":249,"src":"3835:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":240,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":238,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3851:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:4"},{"expression":{"arguments":[{"id":242,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3883:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"3890:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3894:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":241,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"3873:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"ExpressionStatement","src":"3873:28:4"},{"expression":{"hexValue":"74727565","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":235,"id":248,"nodeType":"Return","src":"3911:11:4"}]},"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"3550:185:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":250,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:4","nodeType":"FunctionDefinition","overrides":{"id":232,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:4"},"parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"to","nameLocation":"3766:2:4","nodeType":"VariableDeclaration","scope":250,"src":"3758:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"amount","nameLocation":"3778:6:4","nodeType":"VariableDeclaration","scope":250,"src":"3770:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:4"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":250,"src":"3819:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":233,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:4"},"scope":713,"src":"3740:189:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[768],"body":{"id":267,"nodeType":"Block","src":"4085:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":261,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"4102:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":263,"indexExpression":{"id":262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"4114:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":265,"indexExpression":{"id":264,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4121:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":260,"id":266,"nodeType":"Return","src":"4095:34:4"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"3935:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:4","nodeType":"FunctionDefinition","overrides":{"id":257,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:4"},"parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"owner","nameLocation":"4014:5:4","nodeType":"VariableDeclaration","scope":268,"src":"4006:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"spender","nameLocation":"4029:7:4","nodeType":"VariableDeclaration","scope":268,"src":"4021:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"4076:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:4"},"scope":713,"src":"3987:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[778],"body":{"id":292,"nodeType":"Block","src":"4533:108:4","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"owner","nameLocation":"4551:5:4","nodeType":"VariableDeclaration","scope":292,"src":"4543:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"4559:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:4"},{"expression":{"arguments":[{"id":285,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"4590:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":286,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"4597:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":287,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"4606:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":284,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4581:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"4581:32:4"},{"expression":{"hexValue":"74727565","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":278,"id":291,"nodeType":"Return","src":"4623:11:4"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"4142:297:4","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":293,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:4","nodeType":"FunctionDefinition","overrides":{"id":275,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:4"},"parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"spender","nameLocation":"4469:7:4","nodeType":"VariableDeclaration","scope":293,"src":"4461:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"amount","nameLocation":"4486:6:4","nodeType":"VariableDeclaration","scope":293,"src":"4478:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:4"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"4527:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":276,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:4"},"scope":713,"src":"4444:197:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[790],"body":{"id":325,"nodeType":"Block","src":"5306:153:4","statements":[{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"spender","nameLocation":"5324:7:4","nodeType":"VariableDeclaration","scope":325,"src":"5316:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":310,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":308,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"5334:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:4"},{"expression":{"arguments":[{"id":312,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"5372:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":313,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5378:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"5387:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":311,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5356:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"5356:38:4"},{"expression":{"arguments":[{"id":318,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"5414:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":319,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5420:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":320,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"5424:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":317,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"5404:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"5404:27:4"},{"expression":{"hexValue":"74727565","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":305,"id":324,"nodeType":"Return","src":"5441:11:4"}]},"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"4647:551:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":326,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:4","nodeType":"FunctionDefinition","overrides":{"id":302,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:4"},"parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"from","nameLocation":"5233:4:4","nodeType":"VariableDeclaration","scope":326,"src":"5225:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"to","nameLocation":"5247:2:4","nodeType":"VariableDeclaration","scope":326,"src":"5239:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"amount","nameLocation":"5259:6:4","nodeType":"VariableDeclaration","scope":326,"src":"5251:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:4"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":326,"src":"5300:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:4"},"scope":713,"src":"5203:256:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"5948:140:4","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"owner","nameLocation":"5966:5:4","nodeType":"VariableDeclaration","scope":354,"src":"5958:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":340,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":338,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"5974:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:4"},{"expression":{"arguments":[{"id":342,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6005:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":343,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6012:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":345,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6031:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6038:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":344,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6021:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":348,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6049:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":341,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5996:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"ExpressionStatement","src":"5996:64:4"},{"expression":{"hexValue":"74727565","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":335,"id":353,"nodeType":"Return","src":"6070:11:4"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"5465:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:4","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"spender","nameLocation":"5889:7:4","nodeType":"VariableDeclaration","scope":355,"src":"5881:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:4","nodeType":"VariableDeclaration","scope":355,"src":"5898:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:4"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"5942:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":333,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:4"},"scope":713,"src":"5854:234:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":395,"nodeType":"Block","src":"6674:328:4","statements":[{"assignments":[366],"declarations":[{"constant":false,"id":366,"mutability":"mutable","name":"owner","nameLocation":"6692:5:4","nodeType":"VariableDeclaration","scope":395,"src":"6684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":369,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":367,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6700:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:4"},{"assignments":[371],"declarations":[{"constant":false,"id":371,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:4","nodeType":"VariableDeclaration","scope":395,"src":"6722:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":376,"initialValue":{"arguments":[{"id":373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"6759:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":374,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6766:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":372,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6749:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":378,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6792:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":379,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"6812:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"6784:85:4"},{"id":392,"nodeType":"UncheckedBlock","src":"6879:95:4","statements":[{"expression":{"arguments":[{"id":385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"6912:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6919:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":387,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6928:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":388,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"6947:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6903:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6903:60:4"}]},{"expression":{"hexValue":"74727565","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":364,"id":394,"nodeType":"Return","src":"6984:11:4"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"6094:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":396,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:4","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"spender","nameLocation":"6610:7:4","nodeType":"VariableDeclaration","scope":396,"src":"6602:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:4","nodeType":"VariableDeclaration","scope":396,"src":"6619:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:4"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"6668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:4"},"scope":713,"src":"6575:427:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":472,"nodeType":"Block","src":"7534:710:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":407,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"7552:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:4","typeDescriptions":{}}},"id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"7544:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"7630:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:4","typeDescriptions":{}}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"ExpressionStatement","src":"7622:64:4"},{"expression":{"arguments":[{"id":427,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"7718:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"7724:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"7728:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":426,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7697:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"7697:38:4"},{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:4","nodeType":"VariableDeclaration","scope":472,"src":"7746:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":437,"initialValue":{"baseExpression":{"id":434,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"7768:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":436,"indexExpression":{"id":435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"7778:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7801:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":440,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"7816:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"7793:72:4"},{"id":459,"nodeType":"UncheckedBlock","src":"7875:273:4","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":445,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"7899:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":447,"indexExpression":{"id":446,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"7909:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":448,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7917:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"7931:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":452,"nodeType":"ExpressionStatement","src":"7899:38:4"},{"expression":{"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":453,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"8114:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":455,"indexExpression":{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"8124:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"8131:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":458,"nodeType":"ExpressionStatement","src":"8114:23:4"}]},{"eventCall":{"arguments":[{"id":461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"8172:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"8178:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":463,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"8182:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":460,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8163:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"EmitStatement","src":"8158:31:4"},{"expression":{"arguments":[{"id":467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"8220:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"8226:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"8230:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8200:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"8200:37:4"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"7008:443:4","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:4","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"from","nameLocation":"7483:4:4","nodeType":"VariableDeclaration","scope":473,"src":"7475:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"to","nameLocation":"7497:2:4","nodeType":"VariableDeclaration","scope":473,"src":"7489:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"amount","nameLocation":"7509:6:4","nodeType":"VariableDeclaration","scope":473,"src":"7501:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:4"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"7534:0:4"},"scope":713,"src":"7456:788:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":529,"nodeType":"Block","src":"8585:470:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8603:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:4","typeDescriptions":{}}},"id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"ExpressionStatement","src":"8595:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:4","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8704:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8713:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":491,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"8671:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"8671:49:4"},{"expression":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":500,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"8731:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":501,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8747:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":503,"nodeType":"ExpressionStatement","src":"8731:22:4"},{"id":510,"nodeType":"UncheckedBlock","src":"8763:175:4","statements":[{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":504,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"8899:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":506,"indexExpression":{"id":505,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8909:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":507,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8921:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":509,"nodeType":"ExpressionStatement","src":"8899:28:4"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:4","typeDescriptions":{}}},"id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8973:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8982:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":511,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8952:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"EmitStatement","src":"8947:42:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:4","typeDescriptions":{}}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"9032:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"9041:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":520,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"9000:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"9000:48:4"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"8250:265:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":530,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:4","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"account","nameLocation":"8543:7:4","nodeType":"VariableDeclaration","scope":530,"src":"8535:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"amount","nameLocation":"8560:6:4","nodeType":"VariableDeclaration","scope":530,"src":"8552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:4"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"8585:0:4"},"scope":713,"src":"8520:535:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"9440:594:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9458:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:4","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"9450:67:4"},{"expression":{"arguments":[{"id":549,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9549:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:4","typeDescriptions":{}}},"id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"9570:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":548,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"9528:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"9528:49:4"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:4","nodeType":"VariableDeclaration","scope":601,"src":"9588:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":562,"initialValue":{"baseExpression":{"id":559,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"9613:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":561,"indexExpression":{"id":560,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9623:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9649:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"9667:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"9641:71:4"},{"id":582,"nodeType":"UncheckedBlock","src":"9722:194:4","statements":[{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":570,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"9746:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":572,"indexExpression":{"id":571,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9756:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":573,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9767:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":574,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"9784:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"9746:44:4"},{"expression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":578,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"9883:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":579,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"9899:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":581,"nodeType":"ExpressionStatement","src":"9883:22:4"}]},{"eventCall":{"arguments":[{"id":584,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9940:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:4","typeDescriptions":{}}},"id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"9961:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"9931:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"EmitStatement","src":"9926:42:4"},{"expression":{"arguments":[{"id":593,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9999:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:4","typeDescriptions":{}}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":598,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"10020:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":592,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"9979:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"ExpressionStatement","src":"9979:48:4"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"9061:309:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:4","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"account","nameLocation":"9398:7:4","nodeType":"VariableDeclaration","scope":602,"src":"9390:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"amount","nameLocation":"9415:6:4","nodeType":"VariableDeclaration","scope":602,"src":"9407:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:4"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"9440:0:4"},"scope":713,"src":"9375:659:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":646,"nodeType":"Block","src":"10540:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10558:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:4","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"10550:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":623,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10636:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:4","typeDescriptions":{}}},"id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"10628:68:4"},{"expression":{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":632,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"10707:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":635,"indexExpression":{"id":633,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10719:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":636,"indexExpression":{"id":634,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10726:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":637,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10737:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":639,"nodeType":"ExpressionStatement","src":"10707:36:4"},{"eventCall":{"arguments":[{"id":641,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10767:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10774:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10783:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":640,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"10758:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"EmitStatement","src":"10753:37:4"}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10040:412:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":647,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:4","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10483:5:4","nodeType":"VariableDeclaration","scope":647,"src":"10475:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10498:7:4","nodeType":"VariableDeclaration","scope":647,"src":"10490:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"amount","nameLocation":"10515:6:4","nodeType":"VariableDeclaration","scope":647,"src":"10507:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:4"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10540:0:4"},"scope":713,"src":"10457:340:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"11168:321:4","statements":[{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:4","nodeType":"VariableDeclaration","scope":689,"src":"11178:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":663,"initialValue":{"arguments":[{"id":660,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"11215:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"11222:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":659,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"11205:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"11244:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":665,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:4","memberName":"max","nodeType":"MemberAccess","src":"11264:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":688,"nodeType":"IfStatement","src":"11240:243:4","trueBody":{"id":687,"nodeType":"Block","src":"11283:200:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"11305:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"11325:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"11297:68:4"},{"id":686,"nodeType":"UncheckedBlock","src":"11379:94:4","statements":[{"expression":{"arguments":[{"id":679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"11416:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"11423:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"11432:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":682,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"11451:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":678,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"11407:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"ExpressionStatement","src":"11407:51:4"}]}]}}]},"documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"10803:270:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:4","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"owner","nameLocation":"11111:5:4","nodeType":"VariableDeclaration","scope":690,"src":"11103:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"spender","nameLocation":"11126:7:4","nodeType":"VariableDeclaration","scope":690,"src":"11118:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"amount","nameLocation":"11143:6:4","nodeType":"VariableDeclaration","scope":690,"src":"11135:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:4"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"11168:0:4"},"scope":713,"src":"11078:411:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":700,"nodeType":"Block","src":"12162:2:4","statements":[]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"11495:573:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:4","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"from","nameLocation":"12111:4:4","nodeType":"VariableDeclaration","scope":701,"src":"12103:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"to","nameLocation":"12125:2:4","nodeType":"VariableDeclaration","scope":701,"src":"12117:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"amount","nameLocation":"12137:6:4","nodeType":"VariableDeclaration","scope":701,"src":"12129:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"12162:0:4"},"scope":713,"src":"12073:91:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"12840:2:4","statements":[]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"12170:577:4","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:4","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"from","nameLocation":"12789:4:4","nodeType":"VariableDeclaration","scope":712,"src":"12781:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"to","nameLocation":"12803:2:4","nodeType":"VariableDeclaration","scope":712,"src":"12795:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"amount","nameLocation":"12815:6:4","nodeType":"VariableDeclaration","scope":712,"src":"12807:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:4"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"12840:0:4"},"scope":713,"src":"12752:90:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":714,"src":"1532:11312:4","usedErrors":[]}],"src":"105:12740:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[791]},"id":792,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":715,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":791,"linearizedBaseContracts":[791],"name":"IERC20","nameLocation":"212:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"225:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":725,"name":"Transfer","nameLocation":"394:8:5","nodeType":"EventDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:5","nodeType":"VariableDeclaration","scope":725,"src":"403:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:5","nodeType":"VariableDeclaration","scope":725,"src":"425:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:5","nodeType":"VariableDeclaration","scope":725,"src":"445:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:5"},"src":"388:72:5"},{"anonymous":false,"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"466:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":734,"name":"Approval","nameLocation":"625:8:5","nodeType":"EventDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:5","nodeType":"VariableDeclaration","scope":734,"src":"634:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:5","nodeType":"VariableDeclaration","scope":734,"src":"657:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:5","nodeType":"VariableDeclaration","scope":734,"src":"682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:5"},"src":"619:78:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"703:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":740,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":791,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"835:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":748,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":791,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"986:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":758,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:5","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"to","nameLocation":"1219:2:5","nodeType":"VariableDeclaration","scope":758,"src":"1211:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"amount","nameLocation":"1231:6:5","nodeType":"VariableDeclaration","scope":758,"src":"1223:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:5"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"1257:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":755,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:5"},"scope":791,"src":"1193:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"1269:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":768,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:5","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"owner","nameLocation":"1565:5:5","nodeType":"VariableDeclaration","scope":768,"src":"1557:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"spender","nameLocation":"1580:7:5","nodeType":"VariableDeclaration","scope":768,"src":"1572:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:5"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"1612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:5"},"scope":791,"src":"1538:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"1627:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":778,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:5","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"spender","nameLocation":"2299:7:5","nodeType":"VariableDeclaration","scope":778,"src":"2291:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"amount","nameLocation":"2316:6:5","nodeType":"VariableDeclaration","scope":778,"src":"2308:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:5"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"2342:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":775,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:5"},"scope":791,"src":"2274:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"2354:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":790,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:5","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"from","nameLocation":"2676:4:5","nodeType":"VariableDeclaration","scope":790,"src":"2668:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"to","nameLocation":"2690:2:5","nodeType":"VariableDeclaration","scope":790,"src":"2682:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"amount","nameLocation":"2702:6:5","nodeType":"VariableDeclaration","scope":790,"src":"2694:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:5"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"2728:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":787,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:5"},"scope":791,"src":"2646:88:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":792,"src":"202:2534:5","usedErrors":[]}],"src":"106:2631:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[1780],"Counters":[1854],"ECDSA":[2775],"EIP712":[2979],"ERC20":[713],"ERC20Permit":[963],"IERC20":[791],"IERC20Metadata":[1722],"IERC20Permit":[1758],"IERC5267":[102],"Math":[3845],"ShortString":[1859],"ShortStrings":[2070],"SignedMath":[5491],"StorageSlot":[2180],"Strings":[2409]},"id":964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":793,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":964,"sourceUnit":1759,"src":"147:28:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":964,"sourceUnit":714,"src":"176:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":964,"sourceUnit":2776,"src":"199:47:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":964,"sourceUnit":2980,"src":"247:48:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":964,"sourceUnit":1855,"src":"296:37:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":800,"name":"ERC20","nameLocations":["886:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"886:5:6"},"id":801,"nodeType":"InheritanceSpecifier","src":"886:5:6"},{"baseName":{"id":802,"name":"IERC20Permit","nameLocations":["893:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"893:12:6"},"id":803,"nodeType":"InheritanceSpecifier","src":"893:12:6"},{"baseName":{"id":804,"name":"EIP712","nameLocations":["907:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"907:6:6"},"id":805,"nodeType":"InheritanceSpecifier","src":"907:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"335:517:6","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":963,"linearizedBaseContracts":[963,2979,102,1758,713,1722,791,1780],"name":"ERC20Permit","nameLocation":"871:11:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":809,"libraryName":{"id":806,"name":"Counters","nameLocations":["926:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"926:8:6"},"nodeType":"UsingForDirective","src":"920:36:6","typeName":{"id":808,"nodeType":"UserDefinedTypeName","pathNode":{"id":807,"name":"Counters.Counter","nameLocations":["939:8:6","948:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"939:16:6"},"referencedDeclaration":1786,"src":"939:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":814,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:6","nodeType":"VariableDeclaration","scope":963,"src":"962:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1786_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":813,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1786_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":812,"nodeType":"UserDefinedTypeName","pathNode":{"id":811,"name":"Counters.Counter","nameLocations":["981:8:6","990:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"981:16:6"},"referencedDeclaration":1786,"src":"981:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":819,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:6","nodeType":"VariableDeclaration","scope":963,"src":"1073:147:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":816,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"1226:254:6","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":822,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:6","nodeType":"VariableDeclaration","scope":963,"src":"1537:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":832,"nodeType":"Block","src":"1867:2:6","statements":[]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"1592:220:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":833,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":828,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1856:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":830,"kind":"baseConstructorSpecifier","modifierName":{"id":827,"name":"EIP712","nameLocations":["1849:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"1849:6:6"},"nodeType":"ModifierInvocation","src":"1849:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"name","nameLocation":"1843:4:6","nodeType":"VariableDeclaration","scope":833,"src":"1829:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:6"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"1867:0:6"},"scope":963,"src":"1817:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1743],"body":{"id":905,"nodeType":"Block","src":"2128:428:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":853,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2146:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2152:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2146:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":855,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2165:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2146:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2138:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"2138:69:6"},{"assignments":[861],"declarations":[{"constant":false,"id":861,"mutability":"mutable","name":"structHash","nameLocation":"2226:10:6","nodeType":"VariableDeclaration","scope":905,"src":"2218:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2218:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":875,"initialValue":{"arguments":[{"arguments":[{"id":865,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"2260:16:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":866,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"2278:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2285:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2294:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"2311:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":869,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2301:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":872,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2319:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":863,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2249:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2253:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2249:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:79:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":862,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2239:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2218:111:6"},{"assignments":[877],"declarations":[{"constant":false,"id":877,"mutability":"mutable","name":"hash","nameLocation":"2348:4:6","nodeType":"VariableDeclaration","scope":905,"src":"2340:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2340:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"id":879,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2372:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":878,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2355:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2340:43:6"},{"assignments":[883],"declarations":[{"constant":false,"id":883,"mutability":"mutable","name":"signer","nameLocation":"2402:6:6","nodeType":"VariableDeclaration","scope":905,"src":"2394:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[{"id":886,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2425:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":887,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"2431:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":888,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2434:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":889,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2437:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":884,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2411:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2775_$","typeString":"type(library ECDSA)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2417:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"2411:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2394:45:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"2457:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":894,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"2467:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2474:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2449:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"ExpressionStatement","src":"2449:58:6"},{"expression":{"arguments":[{"id":900,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"2527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2534:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2543:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":899,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2518:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"ExpressionStatement","src":"2518:31:6"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1875:50:6","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":906,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1939:6:6","nodeType":"FunctionDefinition","overrides":{"id":850,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:6"},"parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"owner","nameLocation":"1963:5:6","nodeType":"VariableDeclaration","scope":906,"src":"1955:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"spender","nameLocation":"1986:7:6","nodeType":"VariableDeclaration","scope":906,"src":"1978:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"value","nameLocation":"2011:5:6","nodeType":"VariableDeclaration","scope":906,"src":"2003:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"deadline","nameLocation":"2034:8:6","nodeType":"VariableDeclaration","scope":906,"src":"2026:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"v","nameLocation":"2058:1:6","nodeType":"VariableDeclaration","scope":906,"src":"2052:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":843,"name":"uint8","nodeType":"ElementaryTypeName","src":"2052:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"r","nameLocation":"2077:1:6","nodeType":"VariableDeclaration","scope":906,"src":"2069:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"s","nameLocation":"2096:1:6","nodeType":"VariableDeclaration","scope":906,"src":"2088:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1945:158:6"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"2128:0:6"},"scope":963,"src":"1930:626:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1751],"body":{"id":921,"nodeType":"Block","src":"2695:48:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":915,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2712:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1786_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":917,"indexExpression":{"id":916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2720:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2712:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage","typeString":"struct Counters.Counter storage ref"}},"id":918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2727:7:6","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"2712:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1786_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1786_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":914,"id":920,"nodeType":"Return","src":"2705:31:6"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"2562:50:6","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":922,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2626:6:6","nodeType":"FunctionDefinition","overrides":{"id":911,"nodeType":"OverrideSpecifier","overrides":[],"src":"2668:8:6"},"parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"owner","nameLocation":"2641:5:6","nodeType":"VariableDeclaration","scope":922,"src":"2633:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"2633:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2632:15:6"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"2686:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2685:9:6"},"scope":963,"src":"2617:126:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1757],"body":{"id":932,"nodeType":"Block","src":"2936:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":929,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2953:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2953:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":928,"id":931,"nodeType":"Return","src":"2946:27:6"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"2749:60:6","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":933,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2876:16:6","nodeType":"FunctionDefinition","overrides":{"id":925,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:6"},"parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"2892:2:6"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"2927:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2927:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:9:6"},"scope":963,"src":"2867:113:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":961,"nodeType":"Block","src":"3188:126:6","statements":[{"assignments":[945],"declarations":[{"constant":false,"id":945,"mutability":"mutable","name":"nonce","nameLocation":"3223:5:6","nodeType":"VariableDeclaration","scope":961,"src":"3198:30:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":944,"nodeType":"UserDefinedTypeName","pathNode":{"id":943,"name":"Counters.Counter","nameLocations":["3198:8:6","3207:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"3198:16:6"},"referencedDeclaration":1786,"src":"3198:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":949,"initialValue":{"baseExpression":{"id":946,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3231:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1786_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":948,"indexExpression":{"id":947,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3239:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3198:47:6"},{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":950,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3255:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":951,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3265:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3271:7:6","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"3265:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1786_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1786_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3255:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":955,"nodeType":"ExpressionStatement","src":"3255:25:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":956,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3290:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3296:9:6","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"3290:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1786_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1786_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3290:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"3290:17:6"}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"2986:120:6","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3120:9:6","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"owner","nameLocation":"3138:5:6","nodeType":"VariableDeclaration","scope":962,"src":"3130:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3129:15:6"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"current","nameLocation":"3179:7:6","nodeType":"VariableDeclaration","scope":962,"src":"3171:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3170:17:6"},"scope":963,"src":"3111:203:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":964,"src":"853:2463:6","usedErrors":[1867,1869]}],"src":"122:3195:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[1780],"Counters":[1854],"ECDSA":[2775],"EIP712":[2979],"ERC20":[713],"ERC20Permit":[963],"ERC20Votes":[1697],"IERC20":[791],"IERC20Metadata":[1722],"IERC20Permit":[1758],"IERC5267":[102],"IERC5805":[111],"IERC6372":[126],"IVotes":[77],"Math":[3845],"SafeCast":[5386],"ShortString":[1859],"ShortStrings":[2070],"SignedMath":[5491],"StorageSlot":[2180],"Strings":[2409]},"id":1698,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":965,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1698,"sourceUnit":964,"src":"146:27:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../../interfaces/IERC5805.sol","id":967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1698,"sourceUnit":112,"src":"174:42:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1698,"sourceUnit":3846,"src":"217:38:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1698,"sourceUnit":5387,"src":"256:42:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1698,"sourceUnit":2776,"src":"299:47:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":972,"name":"ERC20Permit","nameLocations":["1275:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"1275:11:7"},"id":973,"nodeType":"InheritanceSpecifier","src":"1275:11:7"},{"baseName":{"id":974,"name":"IERC5805","nameLocations":["1288:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":111,"src":"1288:8:7"},"id":975,"nodeType":"InheritanceSpecifier","src":"1288:8:7"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"348:894:7","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":1697,"linearizedBaseContracts":[1697,111,77,126,963,2979,102,1758,713,1722,791,1780],"name":"ERC20Votes","nameLocation":"1261:10:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":980,"members":[{"constant":false,"id":977,"mutability":"mutable","name":"fromBlock","nameLocation":"1338:9:7","nodeType":"VariableDeclaration","scope":980,"src":"1331:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":976,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"votes","nameLocation":"1365:5:7","nodeType":"VariableDeclaration","scope":980,"src":"1357:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":978,"name":"uint224","nodeType":"ElementaryTypeName","src":"1357:7:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1310:10:7","nodeType":"StructDefinition","scope":1697,"src":"1303:74:7","visibility":"public"},{"constant":true,"id":985,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1408:20:7","nodeType":"VariableDeclaration","scope":1697,"src":"1383:127:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1449:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":982,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1439:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1439:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":989,"mutability":"mutable","name":"_delegates","nameLocation":"1553:10:7","nodeType":"VariableDeclaration","scope":1697,"src":"1517:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":988,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":995,"mutability":"mutable","name":"_checkpoints","nameLocation":"1610:12:7","nodeType":"VariableDeclaration","scope":1697,"src":"1569:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":994,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1569:32:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":992,"nodeType":"UserDefinedTypeName","pathNode":{"id":991,"name":"Checkpoint","nameLocations":["1588:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"1588:10:7"},"referencedDeclaration":980,"src":"1588:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":993,"nodeType":"ArrayTypeName","src":"1588:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":999,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1649:23:7","nodeType":"VariableDeclaration","scope":1697,"src":"1628:44:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":997,"nodeType":"UserDefinedTypeName","pathNode":{"id":996,"name":"Checkpoint","nameLocations":["1628:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"1628:10:7"},"referencedDeclaration":980,"src":"1628:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":998,"nodeType":"ArrayTypeName","src":"1628:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[119],"body":{"id":1012,"nodeType":"Block","src":"1880:55:7","statements":[{"expression":{"arguments":[{"expression":{"id":1008,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1915:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1921:6:7","memberName":"number","nodeType":"MemberAccess","src":"1915:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1006,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"1897:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5386_$","typeString":"type(library SafeCast)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:7","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":4498,"src":"1897:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1005,"id":1011,"nodeType":"Return","src":"1890:38:7"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"1679:133:7","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1826:5:7","nodeType":"FunctionDefinition","overrides":{"id":1002,"nodeType":"OverrideSpecifier","overrides":[],"src":"1854:8:7"},"parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"1831:2:7"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"1872:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1003,"name":"uint48","nodeType":"ElementaryTypeName","src":"1872:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1871:8:7"},"scope":1697,"src":"1817:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[125],"body":{"id":1031,"nodeType":"Block","src":"2122:179:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1021,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2189:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1023,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2200:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:6:7","memberName":"number","nodeType":"MemberAccess","src":"2200:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2214:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2181:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"2181:65:7"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2263:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1019,"id":1030,"nodeType":"Return","src":"2256:38:7"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"1941:48:7","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2056:10:7","nodeType":"FunctionDefinition","overrides":{"id":1016,"nodeType":"OverrideSpecifier","overrides":[],"src":"2089:8:7"},"parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"2066:2:7"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"2107:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1017,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2106:15:7"},"scope":1697,"src":"2047:254:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1049,"nodeType":"Block","src":"2476:50:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1043,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"2493:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1045,"indexExpression":{"id":1044,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"2506:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1047,"indexExpression":{"id":1046,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"2515:3:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1042,"id":1048,"nodeType":"Return","src":"2486:33:7"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"2307:66:7","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2387:11:7","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"account","nameLocation":"2407:7:7","nodeType":"VariableDeclaration","scope":1050,"src":"2399:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"pos","nameLocation":"2423:3:7","nodeType":"VariableDeclaration","scope":1050,"src":"2416:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1036,"name":"uint32","nodeType":"ElementaryTypeName","src":"2416:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2398:29:7"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"2457:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1040,"nodeType":"UserDefinedTypeName","pathNode":{"id":1039,"name":"Checkpoint","nameLocations":["2457:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"2457:10:7"},"referencedDeclaration":980,"src":"2457:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"2456:19:7"},"scope":1697,"src":"2378:148:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1066,"nodeType":"Block","src":"2679:71:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1060,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"2714:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1062,"indexExpression":{"id":1061,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2727:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2714:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:7","memberName":"length","nodeType":"MemberAccess","src":"2714:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1058,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"2696:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5386_$","typeString":"type(library SafeCast)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:8:7","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4548,"src":"2696:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1057,"id":1065,"nodeType":"Return","src":"2689:54:7"}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"2532:64:7","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2610:14:7","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"account","nameLocation":"2633:7:7","nodeType":"VariableDeclaration","scope":1067,"src":"2625:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2624:17:7"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1067,"src":"2671:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1055,"name":"uint32","nodeType":"ElementaryTypeName","src":"2671:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2670:8:7"},"scope":1697,"src":"2601:149:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[54],"body":{"id":1080,"nodeType":"Block","src":"2921:43:7","statements":[{"expression":{"baseExpression":{"id":1076,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2938:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1078,"indexExpression":{"id":1077,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2949:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2938:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1075,"id":1079,"nodeType":"Return","src":"2931:26:7"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"2756:77:7","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2847:9:7","nodeType":"FunctionDefinition","overrides":{"id":1072,"nodeType":"OverrideSpecifier","overrides":[],"src":"2894:8:7"},"parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"account","nameLocation":"2865:7:7","nodeType":"VariableDeclaration","scope":1081,"src":"2857:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:17:7"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"2912:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:9:7"},"scope":1697,"src":"2838:126:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[28],"body":{"id":1112,"nodeType":"Block","src":"3125:161:7","statements":[{"assignments":[1091],"declarations":[{"constant":false,"id":1091,"mutability":"mutable","name":"pos","nameLocation":"3143:3:7","nodeType":"VariableDeclaration","scope":1112,"src":"3135:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1096,"initialValue":{"expression":{"baseExpression":{"id":1092,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"3149:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1094,"indexExpression":{"id":1093,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3162:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:7","memberName":"length","nodeType":"MemberAccess","src":"3149:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3135:42:7"},{"id":1111,"nodeType":"UncheckedBlock","src":"3187:93:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3218:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1101,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"3233:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1103,"indexExpression":{"id":1102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3246:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1107,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3255:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3255:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:30:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:7","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":979,"src":"3233:36:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3218:51:7","trueExpression":{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1089,"id":1110,"nodeType":"Return","src":"3211:58:7"}]}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"2970:68:7","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3052:8:7","nodeType":"FunctionDefinition","overrides":{"id":1086,"nodeType":"OverrideSpecifier","overrides":[],"src":"3098:8:7"},"parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"account","nameLocation":"3069:7:7","nodeType":"VariableDeclaration","scope":1113,"src":"3061:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3060:17:7"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"3116:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:9:7"},"scope":1697,"src":"3043:243:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[38],"body":{"id":1139,"nodeType":"Block","src":"3571:143:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3589:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1126,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"3601:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3589:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"3581:57:7"},{"expression":{"arguments":[{"baseExpression":{"id":1133,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"3674:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1135,"indexExpression":{"id":1134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"3687:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3674:21:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1136,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3697:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1132,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"3655:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1123,"id":1138,"nodeType":"Return","src":"3648:59:7"}]},"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"3292:169:7","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3475:12:7","nodeType":"FunctionDefinition","overrides":{"id":1120,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:7"},"parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"account","nameLocation":"3496:7:7","nodeType":"VariableDeclaration","scope":1140,"src":"3488:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"timepoint","nameLocation":"3513:9:7","nodeType":"VariableDeclaration","scope":1140,"src":"3505:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3487:36:7"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"3562:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3561:9:7"},"scope":1697,"src":"3466:248:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[46],"body":{"id":1162,"nodeType":"Block","src":"4070:145:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4088:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4100:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4088:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4080:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4080:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"4080:57:7"},{"expression":{"arguments":[{"id":1158,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"4173:23:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1159,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4198:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1157,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"4154:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1148,"id":1161,"nodeType":"Return","src":"4147:61:7"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"3720:251:7","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3985:18:7","nodeType":"FunctionDefinition","overrides":{"id":1145,"nodeType":"OverrideSpecifier","overrides":[],"src":"4043:8:7"},"parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"timepoint","nameLocation":"4012:9:7","nodeType":"VariableDeclaration","scope":1163,"src":"4004:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:19:7"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"4061:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:7"},"scope":1697,"src":"3976:239:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1269,"nodeType":"Block","src":"4405:1789:7","statements":[{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"length","nameLocation":"5501:6:7","nodeType":"VariableDeclaration","scope":1269,"src":"5493:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1179,"initialValue":{"expression":{"id":1177,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5510:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:6:7","memberName":"length","nodeType":"MemberAccess","src":"5510:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5493:29:7"},{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"low","nameLocation":"5541:3:7","nodeType":"VariableDeclaration","scope":1269,"src":"5533:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"5533:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1183,"initialValue":{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5533:15:7"},{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"high","nameLocation":"5566:4:7","nodeType":"VariableDeclaration","scope":1269,"src":"5558:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1187,"initialValue":{"id":1186,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"5573:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5558:21:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"5594:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:7","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5594:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"5590:242:7","trueBody":{"id":1220,"nodeType":"Block","src":"5606:226:7","statements":[{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"mid","nameLocation":"5628:3:7","nodeType":"VariableDeclaration","scope":1220,"src":"5620:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"5634:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1196,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"5653:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1194,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"5643:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3845_$","typeString":"type(library Math)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5648:4:7","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3349,"src":"5643:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5620:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1201,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5692:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1202,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5699:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5678:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:9:7","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":977,"src":"5678:35:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1205,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5716:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:47:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1218,"nodeType":"Block","src":"5776:46:7","statements":[{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1212,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"5794:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5800:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5800:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"5794:13:7"}]},"id":1219,"nodeType":"IfStatement","src":"5674:148:7","trueBody":{"id":1211,"nodeType":"Block","src":"5727:43:7","statements":[{"expression":{"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1207,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5745:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1208,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5752:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5745:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1210,"nodeType":"ExpressionStatement","src":"5745:10:7"}]}}]}},{"body":{"id":1253,"nodeType":"Block","src":"5861:223:7","statements":[{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"mid","nameLocation":"5883:3:7","nodeType":"VariableDeclaration","scope":1253,"src":"5875:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[{"id":1229,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"5902:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1230,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5907:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1227,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"5889:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3845_$","typeString":"type(library Math)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5894:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3045,"src":"5889:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5875:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1234,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5944:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1235,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5951:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1233,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5930:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5956:9:7","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":977,"src":"5930:35:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1238,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"5968:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:47:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1251,"nodeType":"Block","src":"6028:46:7","statements":[{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1245,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"6046:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1246,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"6052:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6052:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6046:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ExpressionStatement","src":"6046:13:7"}]},"id":1252,"nodeType":"IfStatement","src":"5926:148:7","trueBody":{"id":1244,"nodeType":"Block","src":"5979:43:7","statements":[{"expression":{"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1240,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5997:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1241,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"6004:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5997:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"nodeType":"ExpressionStatement","src":"5997:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"5849:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5855:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5849:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1254,"nodeType":"WhileStatement","src":"5842:242:7"},{"id":1268,"nodeType":"UncheckedBlock","src":"6094:94:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6125:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6125:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1260,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"6155:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6162:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6162:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"6141:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:5:7","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":979,"src":"6141:36:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6125:52:7","trueExpression":{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1174,"id":1267,"nodeType":"Return","src":"6118:59:7"}]}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"4221:73:7","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4308:18:7","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"ckpts","nameLocation":"4348:5:7","nodeType":"VariableDeclaration","scope":1270,"src":"4327:26:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"Checkpoint","nameLocations":["4327:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"4327:10:7"},"referencedDeclaration":980,"src":"4327:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1167,"nodeType":"ArrayTypeName","src":"4327:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"timepoint","nameLocation":"4363:9:7","nodeType":"VariableDeclaration","scope":1270,"src":"4355:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:47:7"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"4396:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4395:9:7"},"scope":1697,"src":"4299:1895:7","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[60],"body":{"id":1283,"nodeType":"Block","src":"6336:51:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1278,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6356:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"6370:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"6346:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"6346:34:7"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"6200:70:7","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6284:8:7","nodeType":"FunctionDefinition","overrides":{"id":1275,"nodeType":"OverrideSpecifier","overrides":[],"src":"6327:8:7"},"parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"delegatee","nameLocation":"6301:9:7","nodeType":"VariableDeclaration","scope":1284,"src":"6293:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"6293:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6292:19:7"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"6336:0:7"},"scope":1697,"src":"6275:112:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[76],"body":{"id":1343,"nodeType":"Block","src":"6646:392:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1302,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6664:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"6664:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1304,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6683:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6664:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6656:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"6656:67:7"},{"assignments":[1310],"declarations":[{"constant":false,"id":1310,"mutability":"mutable","name":"signer","nameLocation":"6741:6:7","nodeType":"VariableDeclaration","scope":1343,"src":"6733:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1317,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6815:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1318,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"6837:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"6848:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1320,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6855:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1315,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6804:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6808:6:7","memberName":"encode","nodeType":"MemberAccess","src":"6804:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1314,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6794:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6794:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1313,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"6777:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1324,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6878:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1325,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6893:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1326,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6908:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1311,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"6750:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2775_$","typeString":"type(library ECDSA)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"6750:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:169:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:186:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"6937:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1332,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6956:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1331,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6946:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6965:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6929:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1337,"nodeType":"ExpressionStatement","src":"6929:64:7"},{"expression":{"arguments":[{"id":1339,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"7013:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"7021:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1338,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"7003:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"ExpressionStatement","src":"7003:28:7"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"6393:66:7","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6473:13:7","nodeType":"FunctionDefinition","overrides":{"id":1299,"nodeType":"OverrideSpecifier","overrides":[],"src":"6637:8:7"},"parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"delegatee","nameLocation":"6504:9:7","nodeType":"VariableDeclaration","scope":1344,"src":"6496:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"nonce","nameLocation":"6531:5:7","nodeType":"VariableDeclaration","scope":1344,"src":"6523:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"expiry","nameLocation":"6554:6:7","nodeType":"VariableDeclaration","scope":1344,"src":"6546:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"v","nameLocation":"6576:1:7","nodeType":"VariableDeclaration","scope":1344,"src":"6570:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1292,"name":"uint8","nodeType":"ElementaryTypeName","src":"6570:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"r","nameLocation":"6595:1:7","nodeType":"VariableDeclaration","scope":1344,"src":"6587:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6587:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"s","nameLocation":"6614:1:7","nodeType":"VariableDeclaration","scope":1344,"src":"6606:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6486:135:7"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[],"src":"6646:0:7"},"scope":1697,"src":"6464:574:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1356,"nodeType":"Block","src":"7202:41:7","statements":[{"expression":{"expression":{"arguments":[{"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1351,"name":"uint224","nodeType":"ElementaryTypeName","src":"7224:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1350,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7219:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7233:3:7","memberName":"max","nodeType":"MemberAccess","src":"7219:17:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1349,"id":1355,"nodeType":"Return","src":"7212:24:7"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"7044:91:7","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7149:10:7","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"7159:2:7"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"7193:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1347,"name":"uint224","nodeType":"ElementaryTypeName","src":"7193:7:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7192:9:7"},"scope":1697,"src":"7140:103:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[530],"body":{"id":1388,"nodeType":"Block","src":"7406:211:7","statements":[{"expression":{"arguments":[{"id":1369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7428:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7437:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1366,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7416:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1697_$","typeString":"type(contract super ERC20Votes)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7422:5:7","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":530,"src":"7416:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"7416:28:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1374,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7462:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1376,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"7479:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7479:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7462:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7493:50:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1381,"nodeType":"ExpressionStatement","src":"7454:90:7"},{"expression":{"arguments":[{"id":1383,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"7572:23:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1384,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"7597:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7603:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1382,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"7555:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1387,"nodeType":"ExpressionStatement","src":"7555:55:7"}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"7249:78:7","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7341:5:7","nodeType":"FunctionDefinition","overrides":{"id":1364,"nodeType":"OverrideSpecifier","overrides":[],"src":"7397:8:7"},"parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"account","nameLocation":"7355:7:7","nodeType":"VariableDeclaration","scope":1389,"src":"7347:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"7347:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"amount","nameLocation":"7372:6:7","nodeType":"VariableDeclaration","scope":1389,"src":"7364:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:33:7"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"7406:0:7"},"scope":1697,"src":"7332:285:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[602],"body":{"id":1411,"nodeType":"Block","src":"7780:116:7","statements":[{"expression":{"arguments":[{"id":1401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"7802:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"7811:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1398,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7790:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1697_$","typeString":"type(contract super ERC20Votes)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:5:7","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":602,"src":"7790:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"ExpressionStatement","src":"7790:28:7"},{"expression":{"arguments":[{"id":1406,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"7846:23:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1407,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7871:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1408,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"7882:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1405,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"7829:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1410,"nodeType":"ExpressionStatement","src":"7829:60:7"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"7623:78:7","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7715:5:7","nodeType":"FunctionDefinition","overrides":{"id":1396,"nodeType":"OverrideSpecifier","overrides":[],"src":"7771:8:7"},"parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"account","nameLocation":"7729:7:7","nodeType":"VariableDeclaration","scope":1412,"src":"7721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"amount","nameLocation":"7746:6:7","nodeType":"VariableDeclaration","scope":1412,"src":"7738:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:33:7"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"7780:0:7"},"scope":1697,"src":"7706:190:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[712],"body":{"id":1441,"nodeType":"Block","src":"8133:127:7","statements":[{"expression":{"arguments":[{"id":1426,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8169:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"8175:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"8179:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1423,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8143:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1697_$","typeString":"type(contract super ERC20Votes)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8149:19:7","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":712,"src":"8143:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"8143:43:7"},{"expression":{"arguments":[{"arguments":[{"id":1433,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8224:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1432,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8214:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"8241:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8231:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"8246:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1431,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8197:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8197:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"ExpressionStatement","src":"8197:56:7"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"7902:129:7","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1442,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8045:19:7","nodeType":"FunctionDefinition","overrides":{"id":1421,"nodeType":"OverrideSpecifier","overrides":[],"src":"8124:8:7"},"parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"from","nameLocation":"8073:4:7","nodeType":"VariableDeclaration","scope":1442,"src":"8065:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"to","nameLocation":"8087:2:7","nodeType":"VariableDeclaration","scope":1442,"src":"8079:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"amount","nameLocation":"8099:6:7","nodeType":"VariableDeclaration","scope":1442,"src":"8091:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"8091:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:42:7"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"8133:0:7"},"scope":1697,"src":"8036:224:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"8505:306:7","statements":[{"assignments":[1451],"declarations":[{"constant":false,"id":1451,"mutability":"mutable","name":"currentDelegate","nameLocation":"8523:15:7","nodeType":"VariableDeclaration","scope":1480,"src":"8515:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1455,"initialValue":{"arguments":[{"id":1453,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8551:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1452,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8541:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8515:46:7"},{"assignments":[1457],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8579:16:7","nodeType":"VariableDeclaration","scope":1480,"src":"8571:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1461,"initialValue":{"arguments":[{"id":1459,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8608:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1458,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"8598:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8571:47:7"},{"expression":{"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1462,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8628:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1464,"indexExpression":{"id":1463,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8639:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8628:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1465,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"8652:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8628:33:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1467,"nodeType":"ExpressionStatement","src":"8628:33:7"},{"eventCall":{"arguments":[{"id":1469,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"8693:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1470,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"8704:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1471,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"8721:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1468,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"8677:15:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1473,"nodeType":"EmitStatement","src":"8672:59:7"},{"expression":{"arguments":[{"id":1475,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"8759:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1476,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"8776:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8787:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1474,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8742:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"8742:62:7"}]},"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"8266:160:7","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8440:9:7","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"delegator","nameLocation":"8458:9:7","nodeType":"VariableDeclaration","scope":1481,"src":"8450:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"8450:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"delegatee","nameLocation":"8477:9:7","nodeType":"VariableDeclaration","scope":1481,"src":"8469:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8449:38:7"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"8505:0:7"},"scope":1697,"src":"8431:380:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1551,"nodeType":"Block","src":"8893:521:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"8907:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1491,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"8914:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8907:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"8921:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8921:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8907:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"8903:505:7","trueBody":{"id":1549,"nodeType":"Block","src":"8933:475:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"8951:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8966:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"8958:7:7","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8951:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1522,"nodeType":"IfStatement","src":"8947:221:7","trueBody":{"id":1521,"nodeType":"Block","src":"8970:198:7","statements":[{"assignments":[1504,1506],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"oldWeight","nameLocation":"8997:9:7","nodeType":"VariableDeclaration","scope":1521,"src":"8989:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"8989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"newWeight","nameLocation":"9016:9:7","nodeType":"VariableDeclaration","scope":1521,"src":"9008:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"9008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"arguments":[{"baseExpression":{"id":1508,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"9046:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1510,"indexExpression":{"id":1509,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"9059:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9046:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1511,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"9065:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"9076:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1507,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"9029:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8988:95:7"},{"eventCall":{"arguments":[{"id":1516,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"9127:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1517,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"9132:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1518,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"9143:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1515,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"9106:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"EmitStatement","src":"9101:52:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"9186:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9193:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:7","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9186:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1548,"nodeType":"IfStatement","src":"9182:216:7","trueBody":{"id":1547,"nodeType":"Block","src":"9205:193:7","statements":[{"assignments":[1530,1532],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"oldWeight","nameLocation":"9232:9:7","nodeType":"VariableDeclaration","scope":1547,"src":"9224:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"9224:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"newWeight","nameLocation":"9251:9:7","nodeType":"VariableDeclaration","scope":1547,"src":"9243:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1540,"initialValue":{"arguments":[{"baseExpression":{"id":1534,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"9281:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1536,"indexExpression":{"id":1535,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"9294:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9281:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1537,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"9300:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1538,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"9306:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1533,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"9264:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9223:90:7"},{"eventCall":{"arguments":[{"id":1542,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"9357:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1543,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"9362:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1544,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"9373:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"9336:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"EmitStatement","src":"9331:52:7"}]}}]}}]},"id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8826:16:7","nodeType":"FunctionDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"src","nameLocation":"8851:3:7","nodeType":"VariableDeclaration","scope":1552,"src":"8843:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"8843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"dst","nameLocation":"8864:3:7","nodeType":"VariableDeclaration","scope":1552,"src":"8856:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"amount","nameLocation":"8877:6:7","nodeType":"VariableDeclaration","scope":1552,"src":"8869:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8842:42:7"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"8893:0:7"},"scope":1697,"src":"8817:597:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1652,"nodeType":"Block","src":"9628:560:7","statements":[{"assignments":[1576],"declarations":[{"constant":false,"id":1576,"mutability":"mutable","name":"pos","nameLocation":"9646:3:7","nodeType":"VariableDeclaration","scope":1652,"src":"9638:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1579,"initialValue":{"expression":{"id":1577,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"9652:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9658:6:7","memberName":"length","nodeType":"MemberAccess","src":"9652:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9638:26:7"},{"id":1651,"nodeType":"UncheckedBlock","src":"9675:507:7","statements":[{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"oldCkpt","nameLocation":"9717:7:7","nodeType":"VariableDeclaration","scope":1651,"src":"9699:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"Checkpoint","nameLocations":["9699:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"9699:10:7"},"referencedDeclaration":980,"src":"9699:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":1597,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"9727:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9727:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1591,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"9771:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"9778:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9784:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1590,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9757:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9727:59:7","trueExpression":{"arguments":[{"hexValue":"30","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1586,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"9738:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9699:87:7"},{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1598,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"9801:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1599,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"9813:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9821:5:7","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":979,"src":"9813:13:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9801:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"9801:25:7"},{"expression":{"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"9840:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1605,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"9855:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1606,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"9866:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"9852:2:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1609,"nodeType":"ExpressionStatement","src":"9840:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"9891:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9891:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1613,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"9902:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:7","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":977,"src":"9902:17:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1615,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"9923:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9902:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9891:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1649,"nodeType":"Block","src":"10038:134:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1639,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10108:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":1637,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"10090:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5386_$","typeString":"type(library SafeCast)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:8:7","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4548,"src":"10090:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1644,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"10144:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1642,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"10125:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5386_$","typeString":"type(library SafeCast)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10134:9:7","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":3948,"src":"10125:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1636,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10067:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10079:9:7","10118:5:7"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10067:89:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$980_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1633,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"10056:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:4:7","memberName":"push","nodeType":"MemberAccess","src":"10056:10:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$980_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:101:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"ExpressionStatement","src":"10056:101:7"}]},"id":1650,"nodeType":"IfStatement","src":"9887:285:7","trueBody":{"id":1632,"nodeType":"Block","src":"9932:100:7","statements":[{"expression":{"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1620,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"9964:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"9971:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1619,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9950:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$980_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9950:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9980:5:7","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":979,"src":"9950:35:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1628,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"10007:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"9988:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5386_$","typeString":"type(library SafeCast)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:9:7","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":3948,"src":"9988:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9988:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9950:67:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1631,"nodeType":"ExpressionStatement","src":"9950:67:7"}]}}]}]},"id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9429:16:7","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"ckpts","nameLocation":"9476:5:7","nodeType":"VariableDeclaration","scope":1653,"src":"9455:26:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1554,"nodeType":"UserDefinedTypeName","pathNode":{"id":1553,"name":"Checkpoint","nameLocations":["9455:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"9455:10:7"},"referencedDeclaration":980,"src":"9455:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1555,"nodeType":"ArrayTypeName","src":"9455:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"op","nameLocation":"9541:2:7","nodeType":"VariableDeclaration","scope":1653,"src":"9491:52:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1565,"nodeType":"FunctionTypeName","parameterTypes":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"9500:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"9509:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"9509:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9499:18:7"},"returnParameterTypes":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"9532:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"9532:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9531:9:7"},"src":"9491:52:7","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"delta","nameLocation":"9561:5:7","nodeType":"VariableDeclaration","scope":1653,"src":"9553:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:127:7"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"oldWeight","nameLocation":"9598:9:7","nodeType":"VariableDeclaration","scope":1653,"src":"9590:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"newWeight","nameLocation":"9617:9:7","nodeType":"VariableDeclaration","scope":1653,"src":"9609:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:38:7"},"scope":1697,"src":"9420:768:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1666,"nodeType":"Block","src":"10261:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"10278:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"10282:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1661,"id":1665,"nodeType":"Return","src":"10271:12:7"}]},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10203:4:7","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"a","nameLocation":"10216:1:7","nodeType":"VariableDeclaration","scope":1667,"src":"10208:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"10208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"b","nameLocation":"10227:1:7","nodeType":"VariableDeclaration","scope":1667,"src":"10219:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10207:22:7"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"10252:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:9:7"},"scope":1697,"src":"10194:96:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1680,"nodeType":"Block","src":"10368:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10385:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"10389:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10385:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1675,"id":1679,"nodeType":"Return","src":"10378:12:7"}]},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10305:9:7","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"a","nameLocation":"10323:1:7","nodeType":"VariableDeclaration","scope":1681,"src":"10315:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"b","nameLocation":"10334:1:7","nodeType":"VariableDeclaration","scope":1681,"src":"10326:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:22:7"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"10359:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"10359:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:9:7"},"scope":1697,"src":"10296:101:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1695,"nodeType":"Block","src":"10653:126:7","statements":[{"AST":{"nodeType":"YulBlock","src":"10672:101:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10693:1:7","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10696:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:7"},"nodeType":"YulFunctionCall","src":"10686:21:7"},"nodeType":"YulExpressionStatement","src":"10686:21:7"},{"nodeType":"YulAssignment","src":"10720:43:7","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10749:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10752:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10739:9:7"},"nodeType":"YulFunctionCall","src":"10739:18:7"},{"name":"pos","nodeType":"YulIdentifier","src":"10759:3:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:7"},"nodeType":"YulFunctionCall","src":"10735:28:7"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10720:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1686,"isOffset":false,"isSlot":true,"src":"10696:10:7","suffix":"slot","valueSize":1},{"declaration":1688,"isOffset":false,"isSlot":false,"src":"10759:3:7","valueSize":1},{"declaration":1692,"isOffset":false,"isSlot":true,"src":"10720:11:7","suffix":"slot","valueSize":1}],"id":1694,"nodeType":"InlineAssembly","src":"10663:110:7"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"10403:132:7","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10549:13:7","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"ckpts","nameLocation":"10584:5:7","nodeType":"VariableDeclaration","scope":1696,"src":"10563:26:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1684,"nodeType":"UserDefinedTypeName","pathNode":{"id":1683,"name":"Checkpoint","nameLocations":["10563:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"10563:10:7"},"referencedDeclaration":980,"src":"10563:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1685,"nodeType":"ArrayTypeName","src":"10563:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$980_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"pos","nameLocation":"10599:3:7","nodeType":"VariableDeclaration","scope":1696,"src":"10591:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"10591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10562:41:7"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"result","nameLocation":"10645:6:7","nodeType":"VariableDeclaration","scope":1696,"src":"10626:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1691,"nodeType":"UserDefinedTypeName","pathNode":{"id":1690,"name":"Checkpoint","nameLocations":["10626:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":980,"src":"10626:10:7"},"referencedDeclaration":980,"src":"10626:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$980_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"10625:27:7"},"scope":1697,"src":"10540:239:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1698,"src":"1243:9538:7","usedErrors":[1867,1869]}],"src":"121:10661:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[791],"IERC20Metadata":[1722]},"id":1723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1699,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1723,"sourceUnit":792,"src":"135:23:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1702,"name":"IERC20","nameLocations":["305:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":791,"src":"305:6:8"},"id":1703,"nodeType":"InheritanceSpecifier","src":"305:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"160:116:8","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1722,"linearizedBaseContracts":[1722,791],"name":"IERC20Metadata","nameLocation":"287:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"318:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1709,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:8","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[],"src":"390:2:8"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"416:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1706,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:8"},"scope":1722,"src":"377:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"437:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1715,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:8","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[],"src":"513:2:8"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"539:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1712,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:8"},"scope":1722,"src":"498:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"560:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1721,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:8","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"647:2:8"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"673:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1718,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:8"},"scope":1722,"src":"630:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1723,"src":"277:405:8","usedErrors":[]}],"src":"110:573:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1758]},"id":1759,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1724,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"148:480:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1758,"linearizedBaseContracts":[1758],"name":"IERC20Permit","nameLocation":"639:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"658:792:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1743,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:9","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"owner","nameLocation":"1488:5:9","nodeType":"VariableDeclaration","scope":1743,"src":"1480:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"spender","nameLocation":"1511:7:9","nodeType":"VariableDeclaration","scope":1743,"src":"1503:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"value","nameLocation":"1536:5:9","nodeType":"VariableDeclaration","scope":1743,"src":"1528:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:9","nodeType":"VariableDeclaration","scope":1743,"src":"1551:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"v","nameLocation":"1583:1:9","nodeType":"VariableDeclaration","scope":1743,"src":"1577:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1735,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"r","nameLocation":"1602:1:9","nodeType":"VariableDeclaration","scope":1743,"src":"1594:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"s","nameLocation":"1621:1:9","nodeType":"VariableDeclaration","scope":1743,"src":"1613:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:9"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1637:0:9"},"scope":1758,"src":"1455:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"1644:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:9","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"owner","nameLocation":"1967:5:9","nodeType":"VariableDeclaration","scope":1751,"src":"1959:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:9"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"1997:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:9"},"scope":1758,"src":"1943:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"2012:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1757,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:9","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"2223:2:9"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"2249:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:9"},"scope":1758,"src":"2198:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1759,"src":"629:1631:9","usedErrors":[]}],"src":"123:2138:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1780]},"id":1781,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1760,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1780,"linearizedBaseContracts":[1780],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1769,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":1766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:10","memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1765,"id":1768,"nodeType":"Return","src":"712:17:10"}]},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1770,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":1780,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":1775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:10","memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1774,"id":1777,"nodeType":"Return","src":"819:15:10"}]},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1772,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":1780,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1781,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1854]},"id":1855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1782,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"112:311:11","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1854,"linearizedBaseContracts":[1854],"name":"Counters","nameLocation":"432:8:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1786,"members":[{"constant":false,"id":1785,"mutability":"mutable","name":"_value","nameLocation":"794:6:11","nodeType":"VariableDeclaration","scope":1786,"src":"786:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:11","nodeType":"StructDefinition","scope":1854,"src":"447:374:11","visibility":"public"},{"body":{"id":1797,"nodeType":"Block","src":"901:38:11","statements":[{"expression":{"expression":{"id":1794,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"918:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1793,"id":1796,"nodeType":"Return","src":"911:21:11"}]},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:11","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"counter","nameLocation":"860:7:11","nodeType":"VariableDeclaration","scope":1798,"src":"844:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1788,"nodeType":"UserDefinedTypeName","pathNode":{"id":1787,"name":"Counter","nameLocations":["844:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"844:7:11"},"referencedDeclaration":1786,"src":"844:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:11"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"892:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:11"},"scope":1854,"src":"827:112:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"998:70:11","statements":[{"id":1810,"nodeType":"UncheckedBlock","src":"1008:54:11","statements":[{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1804,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"1032:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"1032:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"1032:19:11"}]}]},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:11","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"counter","nameLocation":"980:7:11","nodeType":"VariableDeclaration","scope":1812,"src":"964:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1800,"nodeType":"UserDefinedTypeName","pathNode":{"id":1799,"name":"Counter","nameLocations":["964:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"964:7:11"},"referencedDeclaration":1786,"src":"964:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:11"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"998:0:11"},"scope":1854,"src":"945:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"1127:176:11","statements":[{"assignments":[1819],"declarations":[{"constant":false,"id":1819,"mutability":"mutable","name":"value","nameLocation":"1145:5:11","nodeType":"VariableDeclaration","scope":1839,"src":"1137:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1822,"initialValue":{"expression":{"id":1820,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1153:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"1153:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1185:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"ExpressionStatement","src":"1177:49:11"},{"id":1838,"nodeType":"UncheckedBlock","src":"1236:61:11","statements":[{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1830,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1260:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"1260:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1277:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"nodeType":"ExpressionStatement","src":"1260:26:11"}]}]},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:11","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"counter","nameLocation":"1109:7:11","nodeType":"VariableDeclaration","scope":1840,"src":"1093:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1814,"nodeType":"UserDefinedTypeName","pathNode":{"id":1813,"name":"Counter","nameLocations":["1093:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"1093:7:11"},"referencedDeclaration":1786,"src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:11"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"1127:0:11"},"scope":1854,"src":"1074:229:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"1358:35:11","statements":[{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1846,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1368:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"1368:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"1368:18:11"}]},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:11","nodeType":"FunctionDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"counter","nameLocation":"1340:7:11","nodeType":"VariableDeclaration","scope":1853,"src":"1324:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1842,"nodeType":"UserDefinedTypeName","pathNode":{"id":1841,"name":"Counter","nameLocations":["1324:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"1324:7:11"},"referencedDeclaration":1786,"src":"1324:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1786_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:11"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[],"src":"1358:0:11"},"scope":1854,"src":"1309:84:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1855,"src":"424:971:11","usedErrors":[]}],"src":"87:1309:11"},"id":11},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1859],"ShortStrings":[2070],"StorageSlot":[2180]},"id":2071,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1856,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2071,"sourceUnit":2181,"src":"131:27:12","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":1859,"name":"ShortString","nameLocation":"333:11:12","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:12","underlyingType":{"id":1858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"358:876:12","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2070,"linearizedBaseContracts":[2070],"name":"ShortStrings","nameLocation":"1243:12:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1863,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:12","nodeType":"VariableDeclaration","scope":2070,"src":"1325:112:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1867,"name":"StringTooLong","nameLocation":"1450:13:12","nodeType":"ErrorDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"str","nameLocation":"1471:3:12","nodeType":"VariableDeclaration","scope":1867,"src":"1464:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1864,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:12"},"src":"1444:32:12"},{"errorSelector":"b3512b0c","id":1869,"name":"InvalidShortString","nameLocation":"1487:18:12","nodeType":"ErrorDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"1505:2:12"},"src":"1481:27:12"},{"body":{"id":1912,"nodeType":"Block","src":"1767:208:12","statements":[{"assignments":[1879],"declarations":[{"constant":false,"id":1879,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:12","nodeType":"VariableDeclaration","scope":1912,"src":"1777:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1878,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1884,"initialValue":{"arguments":[{"id":1882,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1803:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1880,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:12","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1885,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1821:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:12","memberName":"length","nodeType":"MemberAccess","src":"1821:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:12","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"nodeType":"IfStatement","src":"1817:72:12","trueBody":{"id":1893,"nodeType":"Block","src":"1839:50:12","statements":[{"errorCall":{"arguments":[{"id":1890,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1874:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1889,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1860:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"RevertStatement","src":"1853:25:12"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1903,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1946:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:12","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:12","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1906,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1955:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:12","memberName":"length","nodeType":"MemberAccess","src":"1955:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:12","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1895,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1905:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"type(ShortString)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:12","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:12","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"functionReturnParameters":1877,"id":1911,"nodeType":"Return","src":"1898:70:12"}]},"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"1514:170:12","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:12","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"str","nameLocation":"1726:3:12","nodeType":"VariableDeclaration","scope":1913,"src":"1712:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1871,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:12"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"1754:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"ShortString","nameLocations":["1754:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"1754:11:12"},"referencedDeclaration":1859,"src":"1754:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:12"},"scope":2070,"src":"1689:286:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"2133:331:12","statements":[{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"len","nameLocation":"2151:3:12","nodeType":"VariableDeclaration","scope":1938,"src":"2143:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1927,"initialValue":{"arguments":[{"id":1925,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"2168:4:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}],"id":1924,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2157:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1859_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:12"},{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"str","nameLocation":"2275:3:12","nodeType":"VariableDeclaration","scope":1938,"src":"2261:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[{"hexValue":"3332","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:12"},{"AST":{"nodeType":"YulBlock","src":"2357:81:12","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:12"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:12"},"nodeType":"YulFunctionCall","src":"2371:16:12"},"nodeType":"YulExpressionStatement","src":"2371:16:12"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:12"},"nodeType":"YulFunctionCall","src":"2407:14:12"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:12"},"nodeType":"YulFunctionCall","src":"2400:28:12"},"nodeType":"YulExpressionStatement","src":"2400:28:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1923,"isOffset":false,"isSlot":false,"src":"2383:3:12","valueSize":1},{"declaration":1917,"isOffset":false,"isSlot":false,"src":"2423:4:12","valueSize":1},{"declaration":1929,"isOffset":false,"isSlot":false,"src":"2378:3:12","valueSize":1},{"declaration":1929,"isOffset":false,"isSlot":false,"src":"2411:3:12","valueSize":1}],"id":1935,"nodeType":"InlineAssembly","src":"2348:90:12"},{"expression":{"id":1936,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2454:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1921,"id":1937,"nodeType":"Return","src":"2447:10:12"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"1981:73:12","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:12","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:12","nodeType":"VariableDeclaration","scope":1939,"src":"2077:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":1916,"nodeType":"UserDefinedTypeName","pathNode":{"id":1915,"name":"ShortString","nameLocations":["2077:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"2077:11:12"},"referencedDeclaration":1859,"src":"2077:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:12"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"2118:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1919,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:12"},"scope":2070,"src":"2059:405:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1970,"nodeType":"Block","src":"2606:175:12","statements":[{"assignments":[1949],"declarations":[{"constant":false,"id":1949,"mutability":"mutable","name":"result","nameLocation":"2624:6:12","nodeType":"VariableDeclaration","scope":1970,"src":"2616:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1959,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1954,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2660:4:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}],"expression":{"id":1952,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2641:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"type(ShortString)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:12","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:12","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1859_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:12","typeDescriptions":{}}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2687:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:12","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1967,"nodeType":"IfStatement","src":"2683:69:12","trueBody":{"id":1966,"nodeType":"Block","src":"2700:52:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1963,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2721:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"RevertStatement","src":"2714:27:12"}]}},{"expression":{"id":1968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2768:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1947,"id":1969,"nodeType":"Return","src":"2761:13:12"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"2470:61:12","text":" @dev Return the length of a `ShortString`."},"id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:12","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:12","nodeType":"VariableDeclaration","scope":1971,"src":"2556:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":1942,"nodeType":"UserDefinedTypeName","pathNode":{"id":1941,"name":"ShortString","nameLocations":["2556:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"2556:11:12"},"referencedDeclaration":1859,"src":"2556:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:12"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"2597:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:12"},"scope":2070,"src":"2536:245:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"3004:232:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"3024:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1982,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:12","typeDescriptions":{}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:12","memberName":"length","nodeType":"MemberAccess","src":"3018:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2008,"nodeType":"Block","src":"3102:128:12","statements":[{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1997,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3142:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1994,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3116:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2180_$","typeString":"type(library StorageSlot)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:12","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2157,"src":"3116:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2088_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2088_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2087,"src":"3116:38:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"3157:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2002,"nodeType":"ExpressionStatement","src":"3116:46:12"},{"expression":{"arguments":[{"id":2005,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"3200:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2003,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"3183:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"type(ShortString)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:12","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:12","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"functionReturnParameters":1981,"id":2007,"nodeType":"Return","src":"3176:43:12"}]},"id":2009,"nodeType":"IfStatement","src":"3014:216:12","trueBody":{"id":1993,"nodeType":"Block","src":"3044:52:12","statements":[{"expression":{"arguments":[{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"3079:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1989,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"3065:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"functionReturnParameters":1981,"id":1992,"nodeType":"Return","src":"3058:27:12"}]}}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"2787:103:12","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:12","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"value","nameLocation":"2944:5:12","nodeType":"VariableDeclaration","scope":2011,"src":"2930:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1973,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"store","nameLocation":"2966:5:12","nodeType":"VariableDeclaration","scope":2011,"src":"2951:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:12"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"2991:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":1979,"nodeType":"UserDefinedTypeName","pathNode":{"id":1978,"name":"ShortString","nameLocations":["2991:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"2991:11:12"},"referencedDeclaration":1859,"src":"2991:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:12"},"scope":2070,"src":"2895:341:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"3476:159:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3509:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}],"expression":{"id":2022,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"3490:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"type(ShortString)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:12","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:12","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1859_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2026,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"3519:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2035,"nodeType":"Block","src":"3592:37:12","statements":[{"expression":{"id":2033,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3613:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2021,"id":2034,"nodeType":"Return","src":"3606:12:12"}]},"id":2036,"nodeType":"IfStatement","src":"3486:143:12","trueBody":{"id":2032,"nodeType":"Block","src":"3539:47:12","statements":[{"expression":{"arguments":[{"id":2029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3569:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}],"id":2028,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"3560:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1859_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2021,"id":2031,"nodeType":"Return","src":"3553:22:12"}]}}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"3242:120:12","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:12","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"3409:5:12","nodeType":"VariableDeclaration","scope":2038,"src":"3397:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":2014,"nodeType":"UserDefinedTypeName","pathNode":{"id":2013,"name":"ShortString","nameLocations":["3397:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"3397:11:12"},"referencedDeclaration":1859,"src":"3397:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"store","nameLocation":"3431:5:12","nodeType":"VariableDeclaration","scope":2038,"src":"3416:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2016,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:12"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"3461:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2019,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:12"},"scope":2070,"src":"3367:268:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"4108:175:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4141:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}],"expression":{"id":2049,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4122:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"type(ShortString)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:12","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:12","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1859_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2053,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"4151:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2066,"nodeType":"Block","src":"4226:51:12","statements":[{"expression":{"expression":{"arguments":[{"id":2062,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4253:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:12","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:12","memberName":"length","nodeType":"MemberAccess","src":"4247:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2048,"id":2065,"nodeType":"Return","src":"4240:26:12"}]},"id":2067,"nodeType":"IfStatement","src":"4118:159:12","trueBody":{"id":2059,"nodeType":"Block","src":"4171:49:12","statements":[{"expression":{"arguments":[{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4203:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}],"id":2055,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"4192:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1859_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2048,"id":2058,"nodeType":"Return","src":"4185:24:12"}]}}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"3641:357:12","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:12","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"value","nameLocation":"4047:5:12","nodeType":"VariableDeclaration","scope":2069,"src":"4035:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":2041,"nodeType":"UserDefinedTypeName","pathNode":{"id":2040,"name":"ShortString","nameLocations":["4035:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"4035:11:12"},"referencedDeclaration":1859,"src":"4035:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"store","nameLocation":"4069:5:12","nodeType":"VariableDeclaration","scope":2069,"src":"4054:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:12"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"4099:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:12"},"scope":2070,"src":"4003:280:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2071,"src":"1235:3050:12","usedErrors":[1867,1869]}],"src":"106:4180:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2180]},"id":2181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2072,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"218:1201:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2180,"linearizedBaseContracts":[2180],"name":"StorageSlot","nameLocation":"1428:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2076,"members":[{"constant":false,"id":2075,"mutability":"mutable","name":"value","nameLocation":"1483:5:13","nodeType":"VariableDeclaration","scope":2076,"src":"1475:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:13","nodeType":"StructDefinition","scope":2180,"src":"1446:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2079,"members":[{"constant":false,"id":2078,"mutability":"mutable","name":"value","nameLocation":"1535:5:13","nodeType":"VariableDeclaration","scope":2079,"src":"1530:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2077,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:13","nodeType":"StructDefinition","scope":2180,"src":"1501:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2082,"members":[{"constant":false,"id":2081,"mutability":"mutable","name":"value","nameLocation":"1590:5:13","nodeType":"VariableDeclaration","scope":2082,"src":"1582:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:13","nodeType":"StructDefinition","scope":2180,"src":"1553:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2085,"members":[{"constant":false,"id":2084,"mutability":"mutable","name":"value","nameLocation":"1645:5:13","nodeType":"VariableDeclaration","scope":2085,"src":"1637:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:13","nodeType":"StructDefinition","scope":2180,"src":"1608:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2088,"members":[{"constant":false,"id":2087,"mutability":"mutable","name":"value","nameLocation":"1698:5:13","nodeType":"VariableDeclaration","scope":2088,"src":"1691:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2086,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:13","nodeType":"StructDefinition","scope":2180,"src":"1663:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2091,"members":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"1749:5:13","nodeType":"VariableDeclaration","scope":2091,"src":"1743:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2089,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:13","nodeType":"StructDefinition","scope":2180,"src":"1716:45:13","visibility":"public"},{"body":{"id":2101,"nodeType":"Block","src":"1943:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:13","statements":[{"nodeType":"YulAssignment","src":"2019:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2098,"isOffset":false,"isSlot":true,"src":"2019:6:13","suffix":"slot","valueSize":1},{"declaration":2094,"isOffset":false,"isSlot":false,"src":"2029:4:13","valueSize":1}],"id":2100,"nodeType":"InlineAssembly","src":"1996:47:13"}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"1767:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:13","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"slot","nameLocation":"1891:4:13","nodeType":"VariableDeclaration","scope":2102,"src":"1883:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:13"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"r","nameLocation":"1940:1:13","nodeType":"VariableDeclaration","scope":2102,"src":"1920:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2076_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2097,"nodeType":"UserDefinedTypeName","pathNode":{"id":2096,"name":"AddressSlot","nameLocations":["1920:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"1920:11:13"},"referencedDeclaration":2076,"src":"1920:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2076_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:13"},"scope":2180,"src":"1859:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"2231:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:13","statements":[{"nodeType":"YulAssignment","src":"2307:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2109,"isOffset":false,"isSlot":true,"src":"2307:6:13","suffix":"slot","valueSize":1},{"declaration":2105,"isOffset":false,"isSlot":false,"src":"2317:4:13","valueSize":1}],"id":2111,"nodeType":"InlineAssembly","src":"2284:47:13"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"2055:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:13","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"slot","nameLocation":"2179:4:13","nodeType":"VariableDeclaration","scope":2113,"src":"2171:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:13"},"returnParameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"r","nameLocation":"2228:1:13","nodeType":"VariableDeclaration","scope":2113,"src":"2208:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2079_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"BooleanSlot","nameLocations":["2208:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2079,"src":"2208:11:13"},"referencedDeclaration":2079,"src":"2208:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2079_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:13"},"scope":2180,"src":"2147:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2123,"nodeType":"Block","src":"2519:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:13","statements":[{"nodeType":"YulAssignment","src":"2595:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2120,"isOffset":false,"isSlot":true,"src":"2595:6:13","suffix":"slot","valueSize":1},{"declaration":2116,"isOffset":false,"isSlot":false,"src":"2605:4:13","valueSize":1}],"id":2122,"nodeType":"InlineAssembly","src":"2572:47:13"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"2343:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:13","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"slot","nameLocation":"2467:4:13","nodeType":"VariableDeclaration","scope":2124,"src":"2459:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:13"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"r","nameLocation":"2516:1:13","nodeType":"VariableDeclaration","scope":2124,"src":"2496:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2082_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2119,"nodeType":"UserDefinedTypeName","pathNode":{"id":2118,"name":"Bytes32Slot","nameLocations":["2496:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"2496:11:13"},"referencedDeclaration":2082,"src":"2496:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2082_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:13"},"scope":2180,"src":"2435:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"2807:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:13","statements":[{"nodeType":"YulAssignment","src":"2883:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2131,"isOffset":false,"isSlot":true,"src":"2883:6:13","suffix":"slot","valueSize":1},{"declaration":2127,"isOffset":false,"isSlot":false,"src":"2893:4:13","valueSize":1}],"id":2133,"nodeType":"InlineAssembly","src":"2860:47:13"}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"2631:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:13","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"slot","nameLocation":"2755:4:13","nodeType":"VariableDeclaration","scope":2135,"src":"2747:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:13"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"r","nameLocation":"2804:1:13","nodeType":"VariableDeclaration","scope":2135,"src":"2784:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2085_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2130,"nodeType":"UserDefinedTypeName","pathNode":{"id":2129,"name":"Uint256Slot","nameLocations":["2784:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2085,"src":"2784:11:13"},"referencedDeclaration":2085,"src":"2784:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2085_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:13"},"scope":2180,"src":"2723:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2145,"nodeType":"Block","src":"3092:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:13","statements":[{"nodeType":"YulAssignment","src":"3168:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2142,"isOffset":false,"isSlot":true,"src":"3168:6:13","suffix":"slot","valueSize":1},{"declaration":2138,"isOffset":false,"isSlot":false,"src":"3178:4:13","valueSize":1}],"id":2144,"nodeType":"InlineAssembly","src":"3145:47:13"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"2919:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:13","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"slot","nameLocation":"3041:4:13","nodeType":"VariableDeclaration","scope":2146,"src":"3033:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:13"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"r","nameLocation":"3089:1:13","nodeType":"VariableDeclaration","scope":2146,"src":"3070:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2088_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2141,"nodeType":"UserDefinedTypeName","pathNode":{"id":2140,"name":"StringSlot","nameLocations":["3070:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2088,"src":"3070:10:13"},"referencedDeclaration":2088,"src":"3070:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2088_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:13"},"scope":2180,"src":"3010:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2156,"nodeType":"Block","src":"3400:112:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:13","statements":[{"nodeType":"YulAssignment","src":"3476:20:13","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2153,"isOffset":false,"isSlot":true,"src":"3476:6:13","suffix":"slot","valueSize":1},{"declaration":2149,"isOffset":false,"isSlot":true,"src":"3486:10:13","suffix":"slot","valueSize":1}],"id":2155,"nodeType":"InlineAssembly","src":"3453:53:13"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"3204:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2157,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:13","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"store","nameLocation":"3348:5:13","nodeType":"VariableDeclaration","scope":2157,"src":"3333:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2148,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:13"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"r","nameLocation":"3397:1:13","nodeType":"VariableDeclaration","scope":2157,"src":"3378:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2088_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2152,"nodeType":"UserDefinedTypeName","pathNode":{"id":2151,"name":"StringSlot","nameLocations":["3378:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2088,"src":"3378:10:13"},"referencedDeclaration":2088,"src":"3378:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2088_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:13"},"scope":2180,"src":"3310:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2167,"nodeType":"Block","src":"3688:106:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:13","statements":[{"nodeType":"YulAssignment","src":"3764:14:13","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2164,"isOffset":false,"isSlot":true,"src":"3764:6:13","suffix":"slot","valueSize":1},{"declaration":2160,"isOffset":false,"isSlot":false,"src":"3774:4:13","valueSize":1}],"id":2166,"nodeType":"InlineAssembly","src":"3741:47:13"}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"3518:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2168,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:13","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"slot","nameLocation":"3638:4:13","nodeType":"VariableDeclaration","scope":2168,"src":"3630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:13"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"r","nameLocation":"3685:1:13","nodeType":"VariableDeclaration","scope":2168,"src":"3667:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2091_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2163,"nodeType":"UserDefinedTypeName","pathNode":{"id":2162,"name":"BytesSlot","nameLocations":["3667:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"3667:9:13"},"referencedDeclaration":2091,"src":"3667:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2091_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:13"},"scope":2180,"src":"3608:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"3991:112:13","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:13","statements":[{"nodeType":"YulAssignment","src":"4067:20:13","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:13"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2175,"isOffset":false,"isSlot":true,"src":"4067:6:13","suffix":"slot","valueSize":1},{"declaration":2171,"isOffset":false,"isSlot":true,"src":"4077:10:13","suffix":"slot","valueSize":1}],"id":2177,"nodeType":"InlineAssembly","src":"4044:53:13"}]},"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"3800:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:13","nodeType":"FunctionDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"store","nameLocation":"3940:5:13","nodeType":"VariableDeclaration","scope":2179,"src":"3926:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2170,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:13"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"r","nameLocation":"3988:1:13","nodeType":"VariableDeclaration","scope":2179,"src":"3970:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2091_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2174,"nodeType":"UserDefinedTypeName","pathNode":{"id":2173,"name":"BytesSlot","nameLocations":["3970:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"3970:9:13"},"referencedDeclaration":2091,"src":"3970:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2091_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:13"},"scope":2180,"src":"3904:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2181,"src":"1420:2685:13","usedErrors":[]}],"src":"193:3913:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3845],"SignedMath":[5491],"Strings":[2409]},"id":2410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2410,"sourceUnit":3846,"src":"126:25:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2410,"sourceUnit":5492,"src":"152:31:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"185:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":2409,"linearizedBaseContracts":[2409],"name":"Strings","nameLocation":"228:7:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2188,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:14","nodeType":"VariableDeclaration","scope":2409,"src":"242:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2186,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2191,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:14","nodeType":"VariableDeclaration","scope":2409,"src":"302:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2189,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2238,"nodeType":"Block","src":"518:625:14","statements":[{"id":2237,"nodeType":"UncheckedBlock","src":"528:609:14","statements":[{"assignments":[2200],"declarations":[{"constant":false,"id":2200,"mutability":"mutable","name":"length","nameLocation":"560:6:14","nodeType":"VariableDeclaration","scope":2237,"src":"552:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"580:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2201,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"569:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3845_$","typeString":"type(library Math)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"569:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:14"},{"assignments":[2209],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"buffer","nameLocation":"618:6:14","nodeType":"VariableDeclaration","scope":2237,"src":"604:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2208,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2214,"initialValue":{"arguments":[{"id":2212,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"638:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2210,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:14"},{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"ptr","nameLocation":"667:3:14","nodeType":"VariableDeclaration","scope":2237,"src":"659:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2217,"nodeType":"VariableDeclarationStatement","src":"659:11:14"},{"AST":{"nodeType":"YulBlock","src":"740:67:14","statements":[{"nodeType":"YulAssignment","src":"758:35:14","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:14","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:14"},"nodeType":"YulFunctionCall","src":"777:15:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:14"},"nodeType":"YulFunctionCall","src":"765:28:14"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2209,"isOffset":false,"isSlot":false,"src":"769:6:14","valueSize":1},{"declaration":2200,"isOffset":false,"isSlot":false,"src":"785:6:14","valueSize":1},{"declaration":2216,"isOffset":false,"isSlot":false,"src":"758:3:14","valueSize":1}],"id":2218,"nodeType":"InlineAssembly","src":"731:76:14"},{"body":{"id":2233,"nodeType":"Block","src":"833:267:14","statements":[{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:14","subExpression":{"id":2220,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"851:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"851:5:14"},{"AST":{"nodeType":"YulBlock","src":"934:84:14","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:14"},"nodeType":"YulFunctionCall","src":"974:14:14"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:14"},"nodeType":"YulFunctionCall","src":"969:30:14"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:14"},"nodeType":"YulFunctionCall","src":"956:44:14"},"nodeType":"YulExpressionStatement","src":"956:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2188,"isOffset":false,"isSlot":false,"src":"990:8:14","valueSize":1},{"declaration":2216,"isOffset":false,"isSlot":false,"src":"964:3:14","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"978:5:14","valueSize":1}],"id":2223,"nodeType":"InlineAssembly","src":"925:93:14"},{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1035:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"1035:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1068:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"1064:21:14","trueBody":{"id":2231,"nodeType":"Break","src":"1080:5:14"}}]},"condition":{"hexValue":"74727565","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2234,"nodeType":"WhileStatement","src":"820:280:14"},{"expression":{"id":2235,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1120:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2198,"id":2236,"nodeType":"Return","src":"1113:13:14"}]}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"352:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:14","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"473:5:14","nodeType":"VariableDeclaration","scope":2239,"src":"465:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:14"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"503:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2196,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:14"},"scope":2409,"src":"447:696:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2266,"nodeType":"Block","src":"1313:103:14","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1354:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:14","trueExpression":{"hexValue":"2d","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1400:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2258,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"1385:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5491_$","typeString":"type(library SignedMath)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5490,"src":"1385:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2257,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2239,2267],"referencedDeclaration":2239,"src":"1376:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2249,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2247,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:14","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2246,"id":2265,"nodeType":"Return","src":"1323:86:14"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"1149:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:14","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"value","nameLocation":"1268:5:14","nodeType":"VariableDeclaration","scope":2267,"src":"1261:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2241,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:14"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"1298:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2244,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:14"},"scope":2409,"src":"1243:173:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2286,"nodeType":"Block","src":"1595:100:14","statements":[{"id":2285,"nodeType":"UncheckedBlock","src":"1605:84:14","statements":[{"expression":{"arguments":[{"id":2276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1648:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1667:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2277,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"1655:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3845_$","typeString":"type(library Math)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3805,"src":"1655:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2275,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2287,2363,2383],"referencedDeclaration":2363,"src":"1636:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2274,"id":2284,"nodeType":"Return","src":"1629:49:14"}]}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"1422:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:14","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"value","nameLocation":"1550:5:14","nodeType":"VariableDeclaration","scope":2287,"src":"1542:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:14"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2287,"src":"1580:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2272,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:14"},"scope":2409,"src":"1521:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"1908:347:14","statements":[{"assignments":[2298],"declarations":[{"constant":false,"id":2298,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:14","nodeType":"VariableDeclaration","scope":2362,"src":"1918:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2297,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2307,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2302,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"1954:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:14"},{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2308,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1975:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2310,"indexExpression":{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2313,"nodeType":"ExpressionStatement","src":"1975:15:14"},{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2314,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2000:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2316,"indexExpression":{"hexValue":"31","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2319,"nodeType":"ExpressionStatement","src":"2000:15:14"},{"body":{"id":2348,"nodeType":"Block","src":"2070:83:14","statements":[{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2334,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2084:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2336,"indexExpression":{"id":2335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2091:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2337,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2096:8:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2341,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2105:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2343,"nodeType":"ExpressionStatement","src":"2084:33:14"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2131:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"nodeType":"ExpressionStatement","src":"2131:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2058:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2349,"initializationExpression":{"assignments":[2321],"declarations":[{"constant":false,"id":2321,"mutability":"mutable","name":"i","nameLocation":"2038:1:14","nodeType":"VariableDeclaration","scope":2349,"src":"2030:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2323,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"2046:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:14"},"loopExpression":{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:14","subExpression":{"id":2331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"2065:3:14"},"nodeType":"ForStatement","src":"2025:128:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2170:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2356,"nodeType":"ExpressionStatement","src":"2162:55:14"},{"expression":{"arguments":[{"id":2359,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2241:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2357,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:14","typeDescriptions":{}}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2296,"id":2361,"nodeType":"Return","src":"2227:21:14"}]},"documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"1701:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:14","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"value","nameLocation":"1847:5:14","nodeType":"VariableDeclaration","scope":2363,"src":"1839:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"length","nameLocation":"1862:6:14","nodeType":"VariableDeclaration","scope":2363,"src":"1854:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:14"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"1893:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2294,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:14"},"scope":2409,"src":"1818:437:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2382,"nodeType":"Block","src":"2480:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2376,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"2525:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2374,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:14","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:14","typeDescriptions":{}}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2379,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2533:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2371,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2287,2363,2383],"referencedDeclaration":2363,"src":"2497:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2370,"id":2381,"nodeType":"Return","src":"2490:59:14"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"2261:141:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:14","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"addr","nameLocation":"2436:4:14","nodeType":"VariableDeclaration","scope":2383,"src":"2428:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:14"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2383,"src":"2465:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2368,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:14"},"scope":2409,"src":"2407:149:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2407,"nodeType":"Block","src":"2711:66:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"2744:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2394,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:14","typeDescriptions":{}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2393,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"2767:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2400,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:14","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2399,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2392,"id":2406,"nodeType":"Return","src":"2721:49:14"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"2562:66:14","text":" @dev Returns true if the two strings are equal."},"id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:14","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"a","nameLocation":"2662:1:14","nodeType":"VariableDeclaration","scope":2408,"src":"2648:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2385,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"b","nameLocation":"2679:1:14","nodeType":"VariableDeclaration","scope":2408,"src":"2665:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2387,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:14"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"2705:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2390,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:14"},"scope":2409,"src":"2633:144:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2410,"src":"220:2559:14","usedErrors":[]}],"src":"101:2679:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2775],"Math":[3845],"SignedMath":[5491],"Strings":[2409]},"id":2776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2411,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2776,"sourceUnit":2410,"src":"137:24:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"163:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2775,"linearizedBaseContracts":[2775],"name":"ECDSA","nameLocation":"377:5:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2419,"members":[{"id":2414,"name":"NoError","nameLocation":"417:7:15","nodeType":"EnumValue","src":"417:7:15"},{"id":2415,"name":"InvalidSignature","nameLocation":"434:16:15","nodeType":"EnumValue","src":"434:16:15"},{"id":2416,"name":"InvalidSignatureLength","nameLocation":"460:22:15","nodeType":"EnumValue","src":"460:22:15"},{"id":2417,"name":"InvalidSignatureS","nameLocation":"492:17:15","nodeType":"EnumValue","src":"492:17:15"},{"id":2418,"name":"InvalidSignatureV","nameLocation":"519:17:15","nodeType":"EnumValue","src":"519:17:15"}],"name":"RecoverError","nameLocation":"394:12:15","nodeType":"EnumDefinition","src":"389:175:15"},{"body":{"id":2462,"nodeType":"Block","src":"624:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"638:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2426,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"647:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2414,"src":"647:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"734:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2432,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"743:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"743:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"843:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2441,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"852:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2416,"src":"852:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"965:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2450,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"974:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"974:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2458,"nodeType":"IfStatement","src":"961:114:15","trueBody":{"id":2457,"nodeType":"Block","src":"1006:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2453,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"ExpressionStatement","src":"1020:44:15"}]}},"id":2459,"nodeType":"IfStatement","src":"839:236:15","trueBody":{"id":2448,"nodeType":"Block","src":"889:66:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2444,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"ExpressionStatement","src":"903:41:15"}]}},"id":2460,"nodeType":"IfStatement","src":"730:345:15","trueBody":{"id":2439,"nodeType":"Block","src":"774:59:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2435,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2438,"nodeType":"ExpressionStatement","src":"788:34:15"}]}},"id":2461,"nodeType":"IfStatement","src":"634:441:15","trueBody":{"id":2430,"nodeType":"Block","src":"669:55:15","statements":[{"functionReturnParameters":2424,"id":2429,"nodeType":"Return","src":"683:7:15"}]}}]},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:15","nodeType":"FunctionDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"error","nameLocation":"604:5:15","nodeType":"VariableDeclaration","scope":2463,"src":"591:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2421,"nodeType":"UserDefinedTypeName","pathNode":{"id":2420,"name":"RecoverError","nameLocations":["591:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"591:12:15"},"referencedDeclaration":2419,"src":"591:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:15"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"624:0:15"},"scope":2775,"src":"570:511:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2508,"nodeType":"Block","src":"2249:626:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2476,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"2263:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:15","memberName":"length","nodeType":"MemberAccess","src":"2263:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2506,"nodeType":"Block","src":"2788:81:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:15","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2502,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2822:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2416,"src":"2822:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"id":2504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2475,"id":2505,"nodeType":"Return","src":"2802:56:15"}]},"id":2507,"nodeType":"IfStatement","src":"2259:610:15","trueBody":{"id":2497,"nodeType":"Block","src":"2287:495:15","statements":[{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"r","nameLocation":"2309:1:15","nodeType":"VariableDeclaration","scope":2497,"src":"2301:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2482,"nodeType":"VariableDeclarationStatement","src":"2301:9:15"},{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"s","nameLocation":"2332:1:15","nodeType":"VariableDeclaration","scope":2497,"src":"2324:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2485,"nodeType":"VariableDeclarationStatement","src":"2324:9:15"},{"assignments":[2487],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"v","nameLocation":"2353:1:15","nodeType":"VariableDeclaration","scope":2497,"src":"2347:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2486,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2488,"nodeType":"VariableDeclarationStatement","src":"2347:7:15"},{"AST":{"nodeType":"YulBlock","src":"2555:171:15","statements":[{"nodeType":"YulAssignment","src":"2573:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:15"},"nodeType":"YulFunctionCall","src":"2584:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:15"},"nodeType":"YulFunctionCall","src":"2578:27:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:15"}]},{"nodeType":"YulAssignment","src":"2622:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:15"},"nodeType":"YulFunctionCall","src":"2633:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:15"},"nodeType":"YulFunctionCall","src":"2627:27:15"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:15"}]},{"nodeType":"YulAssignment","src":"2671:41:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:15"},"nodeType":"YulFunctionCall","src":"2690:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:15"},"nodeType":"YulFunctionCall","src":"2684:27:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:15"},"nodeType":"YulFunctionCall","src":"2676:36:15"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2481,"isOffset":false,"isSlot":false,"src":"2573:1:15","valueSize":1},{"declaration":2484,"isOffset":false,"isSlot":false,"src":"2622:1:15","valueSize":1},{"declaration":2468,"isOffset":false,"isSlot":false,"src":"2588:9:15","valueSize":1},{"declaration":2468,"isOffset":false,"isSlot":false,"src":"2637:9:15","valueSize":1},{"declaration":2468,"isOffset":false,"isSlot":false,"src":"2694:9:15","valueSize":1},{"declaration":2487,"isOffset":false,"isSlot":false,"src":"2671:1:15","valueSize":1}],"id":2489,"nodeType":"InlineAssembly","src":"2546:180:15"},{"expression":{"arguments":[{"id":2491,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"2757:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2492,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2763:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2493,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2766:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2494,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2769:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2490,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2509,2583,2677],"referencedDeclaration":2677,"src":"2746:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2475,"id":2496,"nodeType":"Return","src":"2739:32:15"}]}}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"1087:1053:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:15","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"hash","nameLocation":"2173:4:15","nodeType":"VariableDeclaration","scope":2509,"src":"2165:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"signature","nameLocation":"2192:9:15","nodeType":"VariableDeclaration","scope":2509,"src":"2179:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:15"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"2226:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"2235:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"RecoverError","nameLocations":["2235:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"2235:12:15"},"referencedDeclaration":2419,"src":"2235:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:15"},"scope":2775,"src":"2145:730:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2535,"nodeType":"Block","src":"3748:140:15","statements":[{"assignments":[2520,2523],"declarations":[{"constant":false,"id":2520,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:15","nodeType":"VariableDeclaration","scope":2535,"src":"3759:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"error","nameLocation":"3791:5:15","nodeType":"VariableDeclaration","scope":2535,"src":"3778:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2522,"nodeType":"UserDefinedTypeName","pathNode":{"id":2521,"name":"RecoverError","nameLocations":["3778:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"3778:12:15"},"referencedDeclaration":2419,"src":"3778:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2528,"initialValue":{"arguments":[{"id":2525,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3811:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2526,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"3817:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2524,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2509,2583,2677],"referencedDeclaration":2509,"src":"3800:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:15"},{"expression":{"arguments":[{"id":2530,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"3849:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}],"id":2529,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3837:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2419_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2532,"nodeType":"ExpressionStatement","src":"3837:18:15"},{"expression":{"id":2533,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"3872:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2518,"id":2534,"nodeType":"Return","src":"3865:16:15"}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"2881:775:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:15","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"hash","nameLocation":"3686:4:15","nodeType":"VariableDeclaration","scope":2536,"src":"3678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"signature","nameLocation":"3705:9:15","nodeType":"VariableDeclaration","scope":2536,"src":"3692:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2513,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:15"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2536,"src":"3739:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2516,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:15"},"scope":2775,"src":"3661:227:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"4245:203:15","statements":[{"assignments":[2552],"declarations":[{"constant":false,"id":2552,"mutability":"mutable","name":"s","nameLocation":"4263:1:15","nodeType":"VariableDeclaration","scope":2582,"src":"4255:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2559,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"4267:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:15","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:15"},{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"v","nameLocation":"4363:1:15","nodeType":"VariableDeclaration","scope":2582,"src":"4357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2560,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2574,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2566,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"4382:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:15","typeDescriptions":{}}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2562,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:15","typeDescriptions":{}}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:15"},{"expression":{"arguments":[{"id":2576,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"4427:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2577,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"4433:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2578,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"4436:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2579,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"4439:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2575,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2509,2583,2677],"referencedDeclaration":2677,"src":"4416:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2550,"id":2581,"nodeType":"Return","src":"4409:32:15"}]},"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"3894:243:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:15","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"hash","nameLocation":"4170:4:15","nodeType":"VariableDeclaration","scope":2583,"src":"4162:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"r","nameLocation":"4184:1:15","nodeType":"VariableDeclaration","scope":2583,"src":"4176:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"vs","nameLocation":"4195:2:15","nodeType":"VariableDeclaration","scope":2583,"src":"4187:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:15"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2583,"src":"4222:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2583,"src":"4231:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2548,"nodeType":"UserDefinedTypeName","pathNode":{"id":2547,"name":"RecoverError","nameLocations":["4231:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"4231:12:15"},"referencedDeclaration":2419,"src":"4231:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:15"},"scope":2775,"src":"4142:306:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2612,"nodeType":"Block","src":"4699:136:15","statements":[{"assignments":[2596,2599],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:15","nodeType":"VariableDeclaration","scope":2612,"src":"4710:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"error","nameLocation":"4742:5:15","nodeType":"VariableDeclaration","scope":2612,"src":"4729:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2598,"nodeType":"UserDefinedTypeName","pathNode":{"id":2597,"name":"RecoverError","nameLocations":["4729:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"4729:12:15"},"referencedDeclaration":2419,"src":"4729:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"id":2601,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"4762:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2602,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"4768:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2603,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"4771:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2600,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2509,2583,2677],"referencedDeclaration":2583,"src":"4751:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:15"},{"expression":{"arguments":[{"id":2607,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"4796:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}],"id":2606,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4784:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2419_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2609,"nodeType":"ExpressionStatement","src":"4784:18:15"},{"expression":{"id":2610,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"4819:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2594,"id":2611,"nodeType":"Return","src":"4812:16:15"}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"4454:154:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:15","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"hash","nameLocation":"4638:4:15","nodeType":"VariableDeclaration","scope":2613,"src":"4630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"r","nameLocation":"4652:1:15","nodeType":"VariableDeclaration","scope":2613,"src":"4644:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"vs","nameLocation":"4663:2:15","nodeType":"VariableDeclaration","scope":2613,"src":"4655:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:15"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2613,"src":"4690:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:15"},"scope":2775,"src":"4613:222:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2676,"nodeType":"Block","src":"5120:1345:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2632,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"6016:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:15","typeDescriptions":{}}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"nodeType":"IfStatement","src":"6004:161:15","trueBody":{"id":2644,"nodeType":"Block","src":"6089:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:15","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2640,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6123:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"6123:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"id":2642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2629,"id":2643,"nodeType":"Return","src":"6103:51:15"}]}},{"assignments":[2647],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"signer","nameLocation":"6267:6:15","nodeType":"VariableDeclaration","scope":2676,"src":"6259:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2654,"initialValue":{"arguments":[{"id":2649,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6286:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2650,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"6292:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2651,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6295:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2652,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"6298:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2648,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"6314:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:15","typeDescriptions":{}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2670,"nodeType":"IfStatement","src":"6310:101:15","trueBody":{"id":2669,"nodeType":"Block","src":"6336:75:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:15","typeDescriptions":{}}},"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2665,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6370:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"6370:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"id":2667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2629,"id":2668,"nodeType":"Return","src":"6350:50:15"}]}},{"expression":{"components":[{"id":2671,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"6429:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2672,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"6437:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2419_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2414,"src":"6437:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"id":2674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2629,"id":2675,"nodeType":"Return","src":"6421:37:15"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"4841:163:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2677,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:15","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"hash","nameLocation":"5037:4:15","nodeType":"VariableDeclaration","scope":2677,"src":"5029:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"v","nameLocation":"5049:1:15","nodeType":"VariableDeclaration","scope":2677,"src":"5043:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2617,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"r","nameLocation":"5060:1:15","nodeType":"VariableDeclaration","scope":2677,"src":"5052:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"s","nameLocation":"5071:1:15","nodeType":"VariableDeclaration","scope":2677,"src":"5063:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:15"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2677,"src":"5097:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2677,"src":"5106:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2627,"nodeType":"UserDefinedTypeName","pathNode":{"id":2626,"name":"RecoverError","nameLocations":["5106:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"5106:12:15"},"referencedDeclaration":2419,"src":"5106:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:15"},"scope":2775,"src":"5009:1456:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2709,"nodeType":"Block","src":"6692:138:15","statements":[{"assignments":[2692,2695],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:15","nodeType":"VariableDeclaration","scope":2709,"src":"6703:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"error","nameLocation":"6735:5:15","nodeType":"VariableDeclaration","scope":2709,"src":"6722:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2694,"nodeType":"UserDefinedTypeName","pathNode":{"id":2693,"name":"RecoverError","nameLocations":["6722:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2419,"src":"6722:12:15"},"referencedDeclaration":2419,"src":"6722:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2702,"initialValue":{"arguments":[{"id":2697,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"6755:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2698,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6761:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2699,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"6764:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2700,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"6767:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2696,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2509,2583,2677],"referencedDeclaration":2677,"src":"6744:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2419_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:15"},{"expression":{"arguments":[{"id":2704,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"6791:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2419","typeString":"enum ECDSA.RecoverError"}],"id":2703,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"6779:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2419_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"6779:18:15"},{"expression":{"id":2707,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"6814:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2690,"id":2708,"nodeType":"Return","src":"6807:16:15"}]},"documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"6471:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:15","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"hash","nameLocation":"6623:4:15","nodeType":"VariableDeclaration","scope":2710,"src":"6615:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"v","nameLocation":"6635:1:15","nodeType":"VariableDeclaration","scope":2710,"src":"6629:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2681,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"r","nameLocation":"6646:1:15","nodeType":"VariableDeclaration","scope":2710,"src":"6638:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"s","nameLocation":"6657:1:15","nodeType":"VariableDeclaration","scope":2710,"src":"6649:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:15"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"6683:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:15"},"scope":2775,"src":"6598:232:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"7206:310:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:15"},"nodeType":"YulFunctionCall","src":"7376:48:15"},"nodeType":"YulExpressionStatement","src":"7376:48:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:15","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:15"},"nodeType":"YulFunctionCall","src":"7437:18:15"},"nodeType":"YulExpressionStatement","src":"7437:18:15"},{"nodeType":"YulAssignment","src":"7468:32:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:15"},"nodeType":"YulFunctionCall","src":"7479:21:15"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2713,"isOffset":false,"isSlot":false,"src":"7450:4:15","valueSize":1},{"declaration":2716,"isOffset":false,"isSlot":false,"src":"7468:7:15","valueSize":1}],"id":2718,"nodeType":"InlineAssembly","src":"7353:157:15"}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"6836:279:15","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:15","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"hash","nameLocation":"7160:4:15","nodeType":"VariableDeclaration","scope":2720,"src":"7152:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:15"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"message","nameLocation":"7197:7:15","nodeType":"VariableDeclaration","scope":2720,"src":"7189:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:15"},"scope":2775,"src":"7120:396:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2741,"nodeType":"Block","src":"7881:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2734,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"7976:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:15","memberName":"length","nodeType":"MemberAccess","src":"7976:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2732,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"7959:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2409_$","typeString":"type(library Strings)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2239,"src":"7959:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2737,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"7987:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2729,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2728,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2727,"id":2740,"nodeType":"Return","src":"7891:99:15"}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"7522:274:15","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:15","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"s","nameLocation":"7846:1:15","nodeType":"VariableDeclaration","scope":2742,"src":"7833:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2722,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:15"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2742,"src":"7872:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:15"},"scope":2775,"src":"7801:196:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"8443:290:15","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:15"},"nodeType":"YulFunctionCall","src":"8530:11:15"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:15"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:15"},"nodeType":"YulFunctionCall","src":"8554:23:15"},"nodeType":"YulExpressionStatement","src":"8554:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:15"},"nodeType":"YulFunctionCall","src":"8597:14:15"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:15"},"nodeType":"YulFunctionCall","src":"8590:39:15"},"nodeType":"YulExpressionStatement","src":"8590:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:15"},"nodeType":"YulFunctionCall","src":"8649:14:15"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:15"},"nodeType":"YulFunctionCall","src":"8642:34:15"},"nodeType":"YulExpressionStatement","src":"8642:34:15"},{"nodeType":"YulAssignment","src":"8689:28:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:15"},"nodeType":"YulFunctionCall","src":"8697:20:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2750,"isOffset":false,"isSlot":false,"src":"8689:4:15","valueSize":1},{"declaration":2745,"isOffset":false,"isSlot":false,"src":"8613:15:15","valueSize":1},{"declaration":2747,"isOffset":false,"isSlot":false,"src":"8665:10:15","valueSize":1}],"id":2752,"nodeType":"InlineAssembly","src":"8496:231:15"}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"8003:328:15","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2754,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:15","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:15","nodeType":"VariableDeclaration","scope":2754,"src":"8361:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:15","nodeType":"VariableDeclaration","scope":2754,"src":"8386:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:15"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"data","nameLocation":"8437:4:15","nodeType":"VariableDeclaration","scope":2754,"src":"8429:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:15"},"scope":2775,"src":"8336:397:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2773,"nodeType":"Block","src":"9048:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2768,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"9104:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2769,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"9115:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2765,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2764,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2763,"id":2772,"nodeType":"Return","src":"9058:63:15"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"8739:193:15","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2774,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:15","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"validator","nameLocation":"8986:9:15","nodeType":"VariableDeclaration","scope":2774,"src":"8978:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"data","nameLocation":"9010:4:15","nodeType":"VariableDeclaration","scope":2774,"src":"8997:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:15"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2774,"src":"9039:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:15"},"scope":2775,"src":"8937:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2776,"src":"369:8761:15","usedErrors":[]}],"src":"112:9019:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[2775],"EIP712":[2979],"IERC5267":[102],"Math":[3845],"ShortString":[1859],"ShortStrings":[2070],"SignedMath":[5491],"StorageSlot":[2180],"Strings":[2409]},"id":2980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2777,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2980,"sourceUnit":2776,"src":"138:21:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2980,"sourceUnit":2071,"src":"160:29:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2980,"sourceUnit":103,"src":"190:39:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2782,"name":"IERC5267","nameLocations":["1837:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":102,"src":"1837:8:16"},"id":2783,"nodeType":"InheritanceSpecifier","src":"1837:8:16"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"231:1577:16","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":2979,"linearizedBaseContracts":[2979,102],"name":"EIP712","nameLocation":"1827:6:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2785,"libraryName":{"id":2784,"name":"ShortStrings","nameLocations":["1858:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2070,"src":"1858:12:16"},"nodeType":"UsingForDirective","src":"1852:25:16"},{"constant":true,"id":2790,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:16","nodeType":"VariableDeclaration","scope":2979,"src":"1883:141:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2787,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2792,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:16","nodeType":"VariableDeclaration","scope":2979,"src":"2223:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2794,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:16","nodeType":"VariableDeclaration","scope":2979,"src":"2277:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2796,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:16","nodeType":"VariableDeclaration","scope":2979,"src":"2323:37:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2798,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:16","nodeType":"VariableDeclaration","scope":2979,"src":"2367:37:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2800,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:16","nodeType":"VariableDeclaration","scope":2979,"src":"2410:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2803,"mutability":"immutable","name":"_name","nameLocation":"2487:5:16","nodeType":"VariableDeclaration","scope":2979,"src":"2457:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":2802,"nodeType":"UserDefinedTypeName","pathNode":{"id":2801,"name":"ShortString","nameLocations":["2457:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"2457:11:16"},"referencedDeclaration":1859,"src":"2457:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2806,"mutability":"immutable","name":"_version","nameLocation":"2528:8:16","nodeType":"VariableDeclaration","scope":2979,"src":"2498:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"},"typeName":{"id":2805,"nodeType":"UserDefinedTypeName","pathNode":{"id":2804,"name":"ShortString","nameLocations":["2498:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"2498:11:16"},"referencedDeclaration":1859,"src":"2498:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2808,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:16","nodeType":"VariableDeclaration","scope":2979,"src":"2542:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2807,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2810,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:16","nodeType":"VariableDeclaration","scope":2979,"src":"2576:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2809,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2867,"nodeType":"Block","src":"3233:376:16","statements":[{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2818,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"3243:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2821,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3282:13:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2819,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"3251:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:16","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"3251:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1859_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"src":"3243:53:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"id":2824,"nodeType":"ExpressionStatement","src":"3243:53:16"},{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3306:8:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2828,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3351:16:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2826,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3317:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:16","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2011,"src":"3317:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1859_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"src":"3306:62:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"id":2831,"nodeType":"ExpressionStatement","src":"3306:62:16"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3378:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2836,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"3408:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2834,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:16","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2840,"nodeType":"ExpressionStatement","src":"3378:36:16"},{"expression":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"3424:14:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2845,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3457:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2843,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:16","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2842,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2849,"nodeType":"ExpressionStatement","src":"3424:42:16"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2850,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"3477:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2851,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"3477:30:16"},{"expression":{"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2855,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3517:22:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2856,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3542:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2859,"nodeType":"ExpressionStatement","src":"3517:48:16"},{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2860,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3575:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2863,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:16","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2866,"nodeType":"ExpressionStatement","src":"3575:27:16"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"2614:559:16","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2868,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"name","nameLocation":"3204:4:16","nodeType":"VariableDeclaration","scope":2868,"src":"3190:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2812,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"version","nameLocation":"3224:7:16","nodeType":"VariableDeclaration","scope":2868,"src":"3210:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2814,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:16"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[],"src":"3233:0:16"},"scope":2979,"src":"3178:431:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2893,"nodeType":"Block","src":"3757:200:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2876,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:16","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2878,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3788:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2880,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2882,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"3820:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2891,"nodeType":"Block","src":"3896:55:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2888,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3917:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2873,"id":2890,"nodeType":"Return","src":"3910:30:16"}]},"id":2892,"nodeType":"IfStatement","src":"3767:184:16","trueBody":{"id":2887,"nodeType":"Block","src":"3836:54:16","statements":[{"expression":{"id":2885,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3857:22:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2873,"id":2886,"nodeType":"Return","src":"3850:29:16"}]}}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"3615:75:16","text":" @dev Returns the domain separator for the current chain."},"id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:16","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"3722:2:16"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"3748:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:16"},"scope":2979,"src":"3695:262:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2914,"nodeType":"Block","src":"4027:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2902,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"4065:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2903,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"4077:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2904,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"4090:14:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2905,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2909,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:16","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2900,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:16","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2899,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2898,"id":2913,"nodeType":"Return","src":"4037:99:16"}]},"id":2915,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:16","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[],"src":"3993:2:16"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2915,"src":"4018:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:16"},"scope":2979,"src":"3963:180:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2930,"nodeType":"Block","src":"4854:79:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2925,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4893:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2927,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"4915:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2923,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"4871:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2775_$","typeString":"type(library ECDSA)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:16","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2754,"src":"4871:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2922,"id":2929,"nodeType":"Return","src":"4864:62:16"}]},"documentation":{"id":2916,"nodeType":"StructuredDocumentation","src":"4149:614:16","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:16","nodeType":"FunctionDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:16","nodeType":"VariableDeclaration","scope":2931,"src":"4794:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:16"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2931,"src":"4845:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:16"},"scope":2979,"src":"4768:165:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[101],"body":{"id":2977,"nodeType":"Block","src":"5366:288:16","statements":[{"expression":{"components":[{"hexValue":"0f","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":2954,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"5454:13:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2952,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"5427:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:16","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"5427:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1859_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2958,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"5512:16:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2956,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"5482:8:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1859","typeString":"ShortString"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:16","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2038,"src":"5482:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1859_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1859_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2960,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2964,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2979","typeString":"contract EIP712"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:16","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:16","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ArrayTypeName","src":"5625:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2950,"id":2976,"nodeType":"Return","src":"5376:271:16"}]},"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"4939:77:16","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:16","nodeType":"FunctionDefinition","overrides":{"id":2934,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:16"},"parameters":{"id":2933,"nodeType":"ParameterList","parameters":[],"src":"5042:2:16"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"fields","nameLocation":"5143:6:16","nodeType":"VariableDeclaration","scope":2978,"src":"5136:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2935,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"name","nameLocation":"5177:4:16","nodeType":"VariableDeclaration","scope":2978,"src":"5163:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2937,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"version","nameLocation":"5209:7:16","nodeType":"VariableDeclaration","scope":2978,"src":"5195:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2939,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:16","nodeType":"VariableDeclaration","scope":2978,"src":"5230:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:16","nodeType":"VariableDeclaration","scope":2978,"src":"5259:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"salt","nameLocation":"5306:4:16","nodeType":"VariableDeclaration","scope":2978,"src":"5298:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:16","nodeType":"VariableDeclaration","scope":2978,"src":"5324:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ArrayTypeName","src":"5324:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:16"},"scope":2979,"src":"5021:633:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2980,"src":"1809:3847:16","usedErrors":[1867,1869]}],"src":"113:5544:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3845]},"id":3846,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2981,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"128:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3845,"linearizedBaseContracts":[3845],"name":"Math","nameLocation":"210:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2986,"members":[{"id":2983,"name":"Down","nameLocation":"245:4:17","nodeType":"EnumValue","src":"245:4:17"},{"id":2984,"name":"Up","nameLocation":"287:2:17","nodeType":"EnumValue","src":"287:2:17"},{"id":2985,"name":"Zero","nameLocation":"318:4:17","nodeType":"EnumValue","src":"318:4:17"}],"name":"Rounding","nameLocation":"226:8:17","nodeType":"EnumDefinition","src":"221:122:17"},{"body":{"id":3003,"nodeType":"Block","src":"480:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"497:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"501:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3000,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"509:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:17","trueExpression":{"id":2999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"505:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2995,"id":3002,"nodeType":"Return","src":"490:20:17"}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"349:59:17","text":" @dev Returns the largest of two numbers."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:17","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"a","nameLocation":"434:1:17","nodeType":"VariableDeclaration","scope":3004,"src":"426:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"b","nameLocation":"445:1:17","nodeType":"VariableDeclaration","scope":3004,"src":"437:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:17"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"471:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:17"},"scope":3845,"src":"413:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3021,"nodeType":"Block","src":"655:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"672:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"676:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3018,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"684:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:17","trueExpression":{"id":3017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"680:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3013,"id":3020,"nodeType":"Return","src":"665:20:17"}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"523:60:17","text":" @dev Returns the smallest of two numbers."},"id":3022,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:17","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"a","nameLocation":"609:1:17","nodeType":"VariableDeclaration","scope":3022,"src":"601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"b","nameLocation":"620:1:17","nodeType":"VariableDeclaration","scope":3022,"src":"612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:17"},"returnParameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3022,"src":"646:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:17"},"scope":3845,"src":"588:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"876:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"931:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"935:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"941:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"945:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3031,"id":3043,"nodeType":"Return","src":"923:28:17"}]},"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"698:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:17","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"a","nameLocation":"830:1:17","nodeType":"VariableDeclaration","scope":3045,"src":"822:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"b","nameLocation":"841:1:17","nodeType":"VariableDeclaration","scope":3045,"src":"833:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:17"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3045,"src":"867:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:17"},"scope":3845,"src":"805:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"1228:123:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"1316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"1330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"1339:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:17","trueExpression":{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3054,"id":3068,"nodeType":"Return","src":"1309:35:17"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"964:188:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:17","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"a","nameLocation":"1182:1:17","nodeType":"VariableDeclaration","scope":3070,"src":"1174:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"b","nameLocation":"1193:1:17","nodeType":"VariableDeclaration","scope":3070,"src":"1185:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:17"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"1219:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:17"},"scope":3845,"src":"1157:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"1765:4115:17","statements":[{"id":3191,"nodeType":"UncheckedBlock","src":"1775:4099:17","statements":[{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:17","nodeType":"VariableDeclaration","scope":3191,"src":"2096:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3084,"nodeType":"VariableDeclarationStatement","src":"2096:13:17"},{"assignments":[3086],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:17","nodeType":"VariableDeclaration","scope":3191,"src":"2168:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3087,"nodeType":"VariableDeclarationStatement","src":"2168:13:17"},{"AST":{"nodeType":"YulBlock","src":"2248:157:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:17"},"nodeType":"YulFunctionCall","src":"2289:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:17"},"nodeType":"YulFunctionCall","src":"2276:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:17","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:17"},"nodeType":"YulFunctionCall","src":"2322:9:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:17"}]},{"nodeType":"YulAssignment","src":"2348:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:17"},"nodeType":"YulFunctionCall","src":"2361:14:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:17"},"nodeType":"YulFunctionCall","src":"2377:13:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:17"},"nodeType":"YulFunctionCall","src":"2357:34:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3083,"isOffset":false,"isSlot":false,"src":"2313:5:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"2369:5:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"2384:5:17","valueSize":1},{"declaration":3086,"isOffset":false,"isSlot":false,"src":"2348:5:17","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"2283:1:17","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"2326:1:17","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2286:1:17","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2329:1:17","valueSize":1}],"id":3088,"nodeType":"InlineAssembly","src":"2239:166:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"2486:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"2482:368:17","trueBody":{"id":3096,"nodeType":"Block","src":"2498:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"2816:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3093,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"2824:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3081,"id":3095,"nodeType":"Return","src":"2809:26:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"2960:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3100,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"2974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3104,"nodeType":"ExpressionStatement","src":"2952:53:17"},{"assignments":[3106],"declarations":[{"constant":false,"id":3106,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:17","nodeType":"VariableDeclaration","scope":3191,"src":"3261:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3107,"nodeType":"VariableDeclarationStatement","src":"3261:17:17"},{"AST":{"nodeType":"YulBlock","src":"3301:291:17","statements":[{"nodeType":"YulAssignment","src":"3370:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:17"},"nodeType":"YulFunctionCall","src":"3383:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:17"}]},{"nodeType":"YulAssignment","src":"3490:41:17","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:17"},"nodeType":"YulFunctionCall","src":"3510:20:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:17"},"nodeType":"YulFunctionCall","src":"3499:32:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:17"}]},{"nodeType":"YulAssignment","src":"3548:30:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:17"},"nodeType":"YulFunctionCall","src":"3557:21:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3077,"isOffset":false,"isSlot":false,"src":"3396:11:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"3524:5:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"3548:5:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"3561:5:17","valueSize":1},{"declaration":3086,"isOffset":false,"isSlot":false,"src":"3490:5:17","valueSize":1},{"declaration":3086,"isOffset":false,"isSlot":false,"src":"3503:5:17","valueSize":1},{"declaration":3106,"isOffset":false,"isSlot":false,"src":"3370:9:17","valueSize":1},{"declaration":3106,"isOffset":false,"isSlot":false,"src":"3513:9:17","valueSize":1},{"declaration":3106,"isOffset":false,"isSlot":false,"src":"3568:9:17","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"3390:1:17","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"3393:1:17","valueSize":1}],"id":3108,"nodeType":"InlineAssembly","src":"3292:300:17"},{"assignments":[3110],"declarations":[{"constant":false,"id":3110,"mutability":"mutable","name":"twos","nameLocation":"3907:4:17","nodeType":"VariableDeclaration","scope":3191,"src":"3899:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3118,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3111,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3914:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:17","subExpression":{"id":3112,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3930:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:17"},{"AST":{"nodeType":"YulBlock","src":"3969:362:17","statements":[{"nodeType":"YulAssignment","src":"4034:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:17"},"nodeType":"YulFunctionCall","src":"4049:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:17"}]},{"nodeType":"YulAssignment","src":"4138:25:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:17"},"nodeType":"YulFunctionCall","src":"4147:16:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:17"}]},{"nodeType":"YulAssignment","src":"4278:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:17"},"nodeType":"YulFunctionCall","src":"4294:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:17"},"nodeType":"YulFunctionCall","src":"4290:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:17"},"nodeType":"YulFunctionCall","src":"4286:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3077,"isOffset":false,"isSlot":false,"src":"4034:11:17","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"4053:11:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"4138:5:17","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"4151:5:17","valueSize":1},{"declaration":3110,"isOffset":false,"isSlot":false,"src":"4066:4:17","valueSize":1},{"declaration":3110,"isOffset":false,"isSlot":false,"src":"4158:4:17","valueSize":1},{"declaration":3110,"isOffset":false,"isSlot":false,"src":"4278:4:17","valueSize":1},{"declaration":3110,"isOffset":false,"isSlot":false,"src":"4301:4:17","valueSize":1},{"declaration":3110,"isOffset":false,"isSlot":false,"src":"4308:4:17","valueSize":1}],"id":3119,"nodeType":"InlineAssembly","src":"3960:371:17"},{"expression":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"4397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4406:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3122,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"4414:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"nodeType":"ExpressionStatement","src":"4397:21:17"},{"assignments":[3127],"declarations":[{"constant":false,"id":3127,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:17","nodeType":"VariableDeclaration","scope":3191,"src":"4736:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3134,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3129,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4759:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:17"},{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4992:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5007:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3138,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5021:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3142,"nodeType":"ExpressionStatement","src":"4992:36:17"},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5061:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5076:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3146,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5090:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"5061:36:17"},{"expression":{"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5131:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5146:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3154,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5160:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3158,"nodeType":"ExpressionStatement","src":"5131:36:17"},{"expression":{"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3159,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5201:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5216:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3162,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3166,"nodeType":"ExpressionStatement","src":"5201:36:17"},{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3167,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5286:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3170,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5300:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3174,"nodeType":"ExpressionStatement","src":"5271:36:17"},{"expression":{"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3175,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5357:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3178,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3182,"nodeType":"ExpressionStatement","src":"5342:36:17"},{"expression":{"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"5812:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3184,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"5821:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3185,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"5829:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3188,"nodeType":"ExpressionStatement","src":"5812:24:17"},{"expression":{"id":3189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"5857:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3081,"id":3190,"nodeType":"Return","src":"5850:13:17"}]}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"1357:305:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:17","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"x","nameLocation":"1691:1:17","nodeType":"VariableDeclaration","scope":3193,"src":"1683:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"y","nameLocation":"1702:1:17","nodeType":"VariableDeclaration","scope":3193,"src":"1694:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:17","nodeType":"VariableDeclaration","scope":3193,"src":"1705:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:17"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"result","nameLocation":"1757:6:17","nodeType":"VariableDeclaration","scope":3193,"src":"1749:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:17"},"scope":3845,"src":"1667:4213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3236,"nodeType":"Block","src":"6122:189:17","statements":[{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"result","nameLocation":"6140:6:17","nodeType":"VariableDeclaration","scope":3236,"src":"6132:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3215,"initialValue":{"arguments":[{"id":3211,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6156:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3212,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"6159:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3213,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6162:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3210,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3193,3237],"referencedDeclaration":3193,"src":"6149:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6188:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3217,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"6200:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2986_$","typeString":"type(enum Math.Rounding)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"6200:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"src":"6188:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3221,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6222:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3222,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"6225:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3223,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6228:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"IfStatement","src":"6184:98:17","trueBody":{"id":3232,"nodeType":"Block","src":"6246:36:17","statements":[{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"6260:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"6260:11:17"}]}},{"expression":{"id":3234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"6298:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3207,"id":3235,"nodeType":"Return","src":"6291:13:17"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"5886:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:17","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"x","nameLocation":"6036:1:17","nodeType":"VariableDeclaration","scope":3237,"src":"6028:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"y","nameLocation":"6047:1:17","nodeType":"VariableDeclaration","scope":3237,"src":"6039:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:17","nodeType":"VariableDeclaration","scope":3237,"src":"6050:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:17","nodeType":"VariableDeclaration","scope":3237,"src":"6071:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"typeName":{"id":3202,"nodeType":"UserDefinedTypeName","pathNode":{"id":3201,"name":"Rounding","nameLocations":["6071:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"6071:8:17"},"referencedDeclaration":2986,"src":"6071:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:17"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3237,"src":"6113:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:17"},"scope":3845,"src":"6012:299:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"6587:1585:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"6601:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3251,"nodeType":"IfStatement","src":"6597:45:17","trueBody":{"id":3250,"nodeType":"Block","src":"6609:33:17","statements":[{"expression":{"hexValue":"30","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3244,"id":3249,"nodeType":"Return","src":"6623:8:17"}]}},{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"result","nameLocation":"7329:6:17","nodeType":"VariableDeclaration","scope":3348,"src":"7321:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"7349:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3255,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3517,3553],"referencedDeclaration":3517,"src":"7344:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:17"},{"id":3347,"nodeType":"UncheckedBlock","src":"7758:408:17","statements":[{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7782:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7792:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"7801:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7805:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3273,"nodeType":"ExpressionStatement","src":"7782:35:17"},{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7831:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7841:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"7850:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7854:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"7831:35:17"},{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7880:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7890:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"7899:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7903:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ExpressionStatement","src":"7880:35:17"},{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7929:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7939:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"7948:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7952:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"7929:35:17"},{"expression":{"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7978:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"7988:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"7997:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8001:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3317,"nodeType":"ExpressionStatement","src":"7978:35:17"},{"expression":{"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8027:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8037:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"8046:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8050:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3328,"nodeType":"ExpressionStatement","src":"8027:35:17"},{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8076:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8086:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"8095:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8099:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3339,"nodeType":"ExpressionStatement","src":"8076:35:17"},{"expression":{"arguments":[{"id":3341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8136:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"8144:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8148:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3340,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"8132:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3244,"id":3346,"nodeType":"Return","src":"8125:30:17"}]}]},"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"6317:208:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:17","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"a","nameLocation":"6552:1:17","nodeType":"VariableDeclaration","scope":3349,"src":"6544:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:17"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"6578:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:17"},"scope":3845,"src":"6530:1642:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3384,"nodeType":"Block","src":"8348:161:17","statements":[{"id":3383,"nodeType":"UncheckedBlock","src":"8358:145:17","statements":[{"assignments":[3361],"declarations":[{"constant":false,"id":3361,"mutability":"mutable","name":"result","nameLocation":"8390:6:17","nodeType":"VariableDeclaration","scope":3383,"src":"8382:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3365,"initialValue":{"arguments":[{"id":3363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8404:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3362,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3349,3385],"referencedDeclaration":3349,"src":"8399:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"8427:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8437:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3368,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"8449:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2986_$","typeString":"type(enum Math.Rounding)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"8449:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"src":"8437:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"8464:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"8473:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8482:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:17","trueExpression":{"hexValue":"31","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3359,"id":3382,"nodeType":"Return","src":"8420:72:17"}]}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"8178:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3385,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:17","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"a","nameLocation":"8294:1:17","nodeType":"VariableDeclaration","scope":3385,"src":"8286:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:17","nodeType":"VariableDeclaration","scope":3385,"src":"8297:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"typeName":{"id":3354,"nodeType":"UserDefinedTypeName","pathNode":{"id":3353,"name":"Rounding","nameLocations":["8297:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"8297:8:17"},"referencedDeclaration":2986,"src":"8297:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:17"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3385,"src":"8339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:17"},"scope":3845,"src":"8272:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"8694:922:17","statements":[{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"result","nameLocation":"8712:6:17","nodeType":"VariableDeclaration","scope":3516,"src":"8704:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3396,"initialValue":{"hexValue":"30","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:17"},{"id":3513,"nodeType":"UncheckedBlock","src":"8732:855:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"8760:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"nodeType":"IfStatement","src":"8756:99:17","trueBody":{"id":3410,"nodeType":"Block","src":"8778:77:17","statements":[{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"8796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ExpressionStatement","src":"8796:13:17"},{"expression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"8827:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"nodeType":"ExpressionStatement","src":"8827:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"8872:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"IfStatement","src":"8868:96:17","trueBody":{"id":3425,"nodeType":"Block","src":"8889:75:17","statements":[{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"8907:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3420,"nodeType":"ExpressionStatement","src":"8907:12:17"},{"expression":{"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"8937:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3424,"nodeType":"ExpressionStatement","src":"8937:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"8981:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3441,"nodeType":"IfStatement","src":"8977:96:17","trueBody":{"id":3440,"nodeType":"Block","src":"8998:75:17","statements":[{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9016:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"9016:12:17"},{"expression":{"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9046:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3439,"nodeType":"ExpressionStatement","src":"9046:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9090:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"IfStatement","src":"9086:96:17","trueBody":{"id":3455,"nodeType":"Block","src":"9107:75:17","statements":[{"expression":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9125:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3450,"nodeType":"ExpressionStatement","src":"9125:12:17"},{"expression":{"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9155:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3454,"nodeType":"ExpressionStatement","src":"9155:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"9195:93:17","trueBody":{"id":3470,"nodeType":"Block","src":"9215:73:17","statements":[{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9233:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"nodeType":"ExpressionStatement","src":"9233:11:17"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9262:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"9262:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9305:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3486,"nodeType":"IfStatement","src":"9301:93:17","trueBody":{"id":3485,"nodeType":"Block","src":"9321:73:17","statements":[{"expression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9339:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3480,"nodeType":"ExpressionStatement","src":"9339:11:17"},{"expression":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9368:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3484,"nodeType":"ExpressionStatement","src":"9368:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9411:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3501,"nodeType":"IfStatement","src":"9407:93:17","trueBody":{"id":3500,"nodeType":"Block","src":"9427:73:17","statements":[{"expression":{"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9445:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"nodeType":"ExpressionStatement","src":"9445:11:17"},{"expression":{"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9474:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3499,"nodeType":"ExpressionStatement","src":"9474:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"9517:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3512,"nodeType":"IfStatement","src":"9513:64:17","trueBody":{"id":3511,"nodeType":"Block","src":"9533:44:17","statements":[{"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3510,"nodeType":"ExpressionStatement","src":"9551:11:17"}]}}]},{"expression":{"id":3514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"9603:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3392,"id":3515,"nodeType":"Return","src":"9596:13:17"}]},"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"8515:113:17","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:17","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"value","nameLocation":"8655:5:17","nodeType":"VariableDeclaration","scope":3517,"src":"8647:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:17"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3517,"src":"8685:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:17"},"scope":3845,"src":"8633:983:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3552,"nodeType":"Block","src":"9849:165:17","statements":[{"id":3551,"nodeType":"UncheckedBlock","src":"9859:149:17","statements":[{"assignments":[3529],"declarations":[{"constant":false,"id":3529,"mutability":"mutable","name":"result","nameLocation":"9891:6:17","nodeType":"VariableDeclaration","scope":3551,"src":"9883:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3533,"initialValue":{"arguments":[{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9905:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3530,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3517,3553],"referencedDeclaration":3517,"src":"9900:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"9932:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"9942:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3536,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"9954:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2986_$","typeString":"type(enum Math.Rounding)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"9954:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"src":"9942:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"9974:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9983:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:17","trueExpression":{"hexValue":"31","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3527,"id":3550,"nodeType":"Return","src":"9925:72:17"}]}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"9622:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:17","nodeType":"FunctionDefinition","parameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"value","nameLocation":"9791:5:17","nodeType":"VariableDeclaration","scope":3553,"src":"9783:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:17","nodeType":"VariableDeclaration","scope":3553,"src":"9798:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"typeName":{"id":3522,"nodeType":"UserDefinedTypeName","pathNode":{"id":3521,"name":"Rounding","nameLocations":["9798:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"9798:8:17"},"referencedDeclaration":2986,"src":"9798:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:17"},"returnParameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3553,"src":"9840:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:17"},"scope":3845,"src":"9769:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3681,"nodeType":"Block","src":"10201:854:17","statements":[{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"result","nameLocation":"10219:6:17","nodeType":"VariableDeclaration","scope":3681,"src":"10211:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3564,"initialValue":{"hexValue":"30","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:17"},{"id":3678,"nodeType":"UncheckedBlock","src":"10239:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10267:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3581,"nodeType":"IfStatement","src":"10263:103:17","trueBody":{"id":3580,"nodeType":"Block","src":"10286:80:17","statements":[{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10304:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3575,"nodeType":"ExpressionStatement","src":"10304:17:17"},{"expression":{"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10339:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3579,"nodeType":"ExpressionStatement","src":"10339:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10383:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3598,"nodeType":"IfStatement","src":"10379:103:17","trueBody":{"id":3597,"nodeType":"Block","src":"10402:80:17","statements":[{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10420:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3592,"nodeType":"ExpressionStatement","src":"10420:17:17"},{"expression":{"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10455:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"nodeType":"ExpressionStatement","src":"10455:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10499:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3615,"nodeType":"IfStatement","src":"10495:103:17","trueBody":{"id":3614,"nodeType":"Block","src":"10518:80:17","statements":[{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10536:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"10536:17:17"},{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10571:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3613,"nodeType":"ExpressionStatement","src":"10571:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10615:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3632,"nodeType":"IfStatement","src":"10611:100:17","trueBody":{"id":3631,"nodeType":"Block","src":"10633:78:17","statements":[{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10651:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"10651:16:17"},{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10685:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"10685:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3649,"nodeType":"IfStatement","src":"10724:100:17","trueBody":{"id":3648,"nodeType":"Block","src":"10746:78:17","statements":[{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10764:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3643,"nodeType":"ExpressionStatement","src":"10764:16:17"},{"expression":{"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10798:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3647,"nodeType":"ExpressionStatement","src":"10798:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10841:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3666,"nodeType":"IfStatement","src":"10837:100:17","trueBody":{"id":3665,"nodeType":"Block","src":"10859:78:17","statements":[{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10877:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3660,"nodeType":"ExpressionStatement","src":"10877:16:17"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10911:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"10911:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10954:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3677,"nodeType":"IfStatement","src":"10950:66:17","trueBody":{"id":3676,"nodeType":"Block","src":"10972:44:17","statements":[{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10990:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3675,"nodeType":"ExpressionStatement","src":"10990:11:17"}]}}]},{"expression":{"id":3679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"11042:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3560,"id":3680,"nodeType":"Return","src":"11035:13:17"}]},"documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"10020:114:17","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3682,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:17","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"value","nameLocation":"10162:5:17","nodeType":"VariableDeclaration","scope":3682,"src":"10154:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3555,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:17"},"returnParameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3682,"src":"10192:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:17"},"scope":3845,"src":"10139:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"11290:167:17","statements":[{"id":3716,"nodeType":"UncheckedBlock","src":"11300:151:17","statements":[{"assignments":[3694],"declarations":[{"constant":false,"id":3694,"mutability":"mutable","name":"result","nameLocation":"11332:6:17","nodeType":"VariableDeclaration","scope":3716,"src":"11324:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3698,"initialValue":{"arguments":[{"id":3696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11347:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3695,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3682,3718],"referencedDeclaration":3682,"src":"11341:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"11374:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"11384:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3701,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"11396:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2986_$","typeString":"type(enum Math.Rounding)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"11396:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"src":"11384:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"11417:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11426:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:17","trueExpression":{"hexValue":"31","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3692,"id":3715,"nodeType":"Return","src":"11367:73:17"}]}]},"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"11061:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:17","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"value","nameLocation":"11232:5:17","nodeType":"VariableDeclaration","scope":3718,"src":"11224:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:17","nodeType":"VariableDeclaration","scope":3718,"src":"11239:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"typeName":{"id":3687,"nodeType":"UserDefinedTypeName","pathNode":{"id":3686,"name":"Rounding","nameLocations":["11239:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"11239:8:17"},"referencedDeclaration":2986,"src":"11239:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:17"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3718,"src":"11281:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:17"},"scope":3845,"src":"11209:248:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"11771:600:17","statements":[{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"result","nameLocation":"11789:6:17","nodeType":"VariableDeclaration","scope":3804,"src":"11781:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3729,"initialValue":{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:17"},{"id":3801,"nodeType":"UncheckedBlock","src":"11809:533:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"11837:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3744,"nodeType":"IfStatement","src":"11833:98:17","trueBody":{"id":3743,"nodeType":"Block","src":"11855:76:17","statements":[{"expression":{"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"11873:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ExpressionStatement","src":"11873:13:17"},{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"11904:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"nodeType":"ExpressionStatement","src":"11904:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"11948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3759,"nodeType":"IfStatement","src":"11944:95:17","trueBody":{"id":3758,"nodeType":"Block","src":"11965:74:17","statements":[{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"11983:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ExpressionStatement","src":"11983:12:17"},{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"12013:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"12013:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"12056:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3774,"nodeType":"IfStatement","src":"12052:95:17","trueBody":{"id":3773,"nodeType":"Block","src":"12073:74:17","statements":[{"expression":{"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"12091:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3768,"nodeType":"ExpressionStatement","src":"12091:12:17"},{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"12121:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"12121:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"12164:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3789,"nodeType":"IfStatement","src":"12160:95:17","trueBody":{"id":3788,"nodeType":"Block","src":"12181:74:17","statements":[{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"12199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3783,"nodeType":"ExpressionStatement","src":"12199:12:17"},{"expression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"12229:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3787,"nodeType":"ExpressionStatement","src":"12229:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"12272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"IfStatement","src":"12268:64:17","trueBody":{"id":3799,"nodeType":"Block","src":"12288:44:17","statements":[{"expression":{"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"12306:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3798,"nodeType":"ExpressionStatement","src":"12306:11:17"}]}}]},{"expression":{"id":3802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"12358:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3725,"id":3803,"nodeType":"Return","src":"12351:13:17"}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"11463:240:17","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:17","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"value","nameLocation":"11732:5:17","nodeType":"VariableDeclaration","scope":3805,"src":"11724:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:17"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"11762:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:17"},"scope":3845,"src":"11708:663:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3843,"nodeType":"Block","src":"12608:174:17","statements":[{"id":3842,"nodeType":"UncheckedBlock","src":"12618:158:17","statements":[{"assignments":[3817],"declarations":[{"constant":false,"id":3817,"mutability":"mutable","name":"result","nameLocation":"12650:6:17","nodeType":"VariableDeclaration","scope":3842,"src":"12642:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3821,"initialValue":{"arguments":[{"id":3819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12666:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3818,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3805,3844],"referencedDeclaration":3805,"src":"12659:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"12693:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"12703:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3824,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"12715:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2986_$","typeString":"type(enum Math.Rounding)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"12715:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"src":"12703:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"12736:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12751:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:17","trueExpression":{"hexValue":"31","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3815,"id":3841,"nodeType":"Return","src":"12686:79:17"}]}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"12377:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:17","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"value","nameLocation":"12550:5:17","nodeType":"VariableDeclaration","scope":3844,"src":"12542:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:17","nodeType":"VariableDeclaration","scope":3844,"src":"12557:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"},"typeName":{"id":3810,"nodeType":"UserDefinedTypeName","pathNode":{"id":3809,"name":"Rounding","nameLocations":["12557:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2986,"src":"12557:8:17"},"referencedDeclaration":2986,"src":"12557:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2986","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:17"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"12599:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:17"},"scope":3845,"src":"12526:256:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3846,"src":"202:12582:17","usedErrors":[]}],"src":"103:12682:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5386]},"id":5387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3847,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"217:709:18","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5386,"linearizedBaseContracts":[5386],"name":"SafeCast","nameLocation":"935:8:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3872,"nodeType":"Block","src":"1339:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"1357:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3859,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:18","memberName":"max","nodeType":"MemberAccess","src":"1366:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":3856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3866,"nodeType":"ExpressionStatement","src":"1349:78:18"},{"expression":{"arguments":[{"id":3869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"1452:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3867,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:18","typeDescriptions":{}}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3855,"id":3871,"nodeType":"Return","src":"1437:21:18"}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"950:318:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":3873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:18","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"value","nameLocation":"1300:5:18","nodeType":"VariableDeclaration","scope":3873,"src":"1292:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:18"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3873,"src":"1330:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3853,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:18"},"scope":5386,"src":"1273:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"1860:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"1878:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3884,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:18","memberName":"max","nodeType":"MemberAccess","src":"1887:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":3881,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3891,"nodeType":"ExpressionStatement","src":"1870:78:18"},{"expression":{"arguments":[{"id":3894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"1973:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3892,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:18","typeDescriptions":{}}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3880,"id":3896,"nodeType":"Return","src":"1958:21:18"}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"1471:318:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:18","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"value","nameLocation":"1821:5:18","nodeType":"VariableDeclaration","scope":3898,"src":"1813:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:18"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"1851:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3878,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:18"},"scope":5386,"src":"1794:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"2381:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2399:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3909,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:18","memberName":"max","nodeType":"MemberAccess","src":"2408:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":3906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3916,"nodeType":"ExpressionStatement","src":"2391:78:18"},{"expression":{"arguments":[{"id":3919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2494:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3917,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:18","typeDescriptions":{}}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3905,"id":3921,"nodeType":"Return","src":"2479:21:18"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"1992:318:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:18","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"value","nameLocation":"2342:5:18","nodeType":"VariableDeclaration","scope":3923,"src":"2334:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:18"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3923,"src":"2372:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3903,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:18"},"scope":5386,"src":"2315:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"2902:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"2920:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3934,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3933,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:18","memberName":"max","nodeType":"MemberAccess","src":"2929:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":3931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"ExpressionStatement","src":"2912:78:18"},{"expression":{"arguments":[{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"3015:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3942,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:18","typeDescriptions":{}}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3930,"id":3946,"nodeType":"Return","src":"3000:21:18"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"2513:318:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:18","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"2863:5:18","nodeType":"VariableDeclaration","scope":3948,"src":"2855:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:18"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"2893:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3928,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:18"},"scope":5386,"src":"2836:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"3423:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"3441:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3959,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:18","memberName":"max","nodeType":"MemberAccess","src":"3450:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":3956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3966,"nodeType":"ExpressionStatement","src":"3433:78:18"},{"expression":{"arguments":[{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"3536:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3967,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:18","typeDescriptions":{}}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3955,"id":3971,"nodeType":"Return","src":"3521:21:18"}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"3034:318:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:18","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"value","nameLocation":"3384:5:18","nodeType":"VariableDeclaration","scope":3973,"src":"3376:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:18"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"3414:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3953,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:18"},"scope":5386,"src":"3357:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"3944:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"3962:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3984,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3983,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:18","memberName":"max","nodeType":"MemberAccess","src":"3971:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":3981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3991,"nodeType":"ExpressionStatement","src":"3954:78:18"},{"expression":{"arguments":[{"id":3994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"4057:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3992,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:18","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3980,"id":3996,"nodeType":"Return","src":"4042:21:18"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"3555:318:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:18","nodeType":"FunctionDefinition","parameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"value","nameLocation":"3905:5:18","nodeType":"VariableDeclaration","scope":3998,"src":"3897:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:18"},"returnParameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"3935:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3978,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:18"},"scope":5386,"src":"3878:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"4465:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"4483:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4009,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4008,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:18","memberName":"max","nodeType":"MemberAccess","src":"4492:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"ExpressionStatement","src":"4475:78:18"},{"expression":{"arguments":[{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"4578:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4017,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:18","typeDescriptions":{}}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4005,"id":4021,"nodeType":"Return","src":"4563:21:18"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"4076:318:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:18","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"value","nameLocation":"4426:5:18","nodeType":"VariableDeclaration","scope":4023,"src":"4418:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:18"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"4456:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4003,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:18"},"scope":5386,"src":"4399:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"4986:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"5004:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4034,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4033,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:18","memberName":"max","nodeType":"MemberAccess","src":"5013:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4041,"nodeType":"ExpressionStatement","src":"4996:78:18"},{"expression":{"arguments":[{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"5099:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4042,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:18","typeDescriptions":{}}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4030,"id":4046,"nodeType":"Return","src":"5084:21:18"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"4597:318:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:18","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"value","nameLocation":"4947:5:18","nodeType":"VariableDeclaration","scope":4048,"src":"4939:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:18"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4048,"src":"4977:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4028,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:18"},"scope":5386,"src":"4920:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4072,"nodeType":"Block","src":"5507:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5525:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4059,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:18","memberName":"max","nodeType":"MemberAccess","src":"5534:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4066,"nodeType":"ExpressionStatement","src":"5517:78:18"},{"expression":{"arguments":[{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5620:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4067,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:18","typeDescriptions":{}}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4055,"id":4071,"nodeType":"Return","src":"5605:21:18"}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"5118:318:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4073,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:18","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"value","nameLocation":"5468:5:18","nodeType":"VariableDeclaration","scope":4073,"src":"5460:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:18"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4073,"src":"5498:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4053,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:18"},"scope":5386,"src":"5441:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"6028:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"6046:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4084,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4083,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:18","memberName":"max","nodeType":"MemberAccess","src":"6055:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4091,"nodeType":"ExpressionStatement","src":"6038:78:18"},{"expression":{"arguments":[{"id":4094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"6141:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4092,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:18","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4080,"id":4096,"nodeType":"Return","src":"6126:21:18"}]},"documentation":{"id":4074,"nodeType":"StructuredDocumentation","src":"5639:318:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:18","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"value","nameLocation":"5989:5:18","nodeType":"VariableDeclaration","scope":4098,"src":"5981:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:18"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4098,"src":"6019:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4078,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:18"},"scope":5386,"src":"5962:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4122,"nodeType":"Block","src":"6549:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6567:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4109,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:18","memberName":"max","nodeType":"MemberAccess","src":"6576:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4116,"nodeType":"ExpressionStatement","src":"6559:78:18"},{"expression":{"arguments":[{"id":4119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6662:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4117,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:18","typeDescriptions":{}}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4105,"id":4121,"nodeType":"Return","src":"6647:21:18"}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"6160:318:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4123,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:18","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"value","nameLocation":"6510:5:18","nodeType":"VariableDeclaration","scope":4123,"src":"6502:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:18"},"returnParameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4123,"src":"6540:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4103,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:18"},"scope":5386,"src":"6483:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4147,"nodeType":"Block","src":"7070:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"7088:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4134,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4133,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:18","memberName":"max","nodeType":"MemberAccess","src":"7097:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"ExpressionStatement","src":"7080:78:18"},{"expression":{"arguments":[{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"7183:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4142,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:18","typeDescriptions":{}}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4130,"id":4146,"nodeType":"Return","src":"7168:21:18"}]},"documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"6681:318:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:18","nodeType":"FunctionDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"value","nameLocation":"7031:5:18","nodeType":"VariableDeclaration","scope":4148,"src":"7023:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:18"},"returnParameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4148,"src":"7061:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4128,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:18"},"scope":5386,"src":"7004:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4172,"nodeType":"Block","src":"7591:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"7609:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4159,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:18","memberName":"max","nodeType":"MemberAccess","src":"7618:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4166,"nodeType":"ExpressionStatement","src":"7601:78:18"},{"expression":{"arguments":[{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"7704:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4167,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:18","typeDescriptions":{}}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4155,"id":4171,"nodeType":"Return","src":"7689:21:18"}]},"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"7202:318:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4173,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:18","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"value","nameLocation":"7552:5:18","nodeType":"VariableDeclaration","scope":4173,"src":"7544:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:18"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4173,"src":"7582:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4153,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:18"},"scope":5386,"src":"7525:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4197,"nodeType":"Block","src":"8112:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"8130:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4184,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:18","memberName":"max","nodeType":"MemberAccess","src":"8139:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4191,"nodeType":"ExpressionStatement","src":"8122:78:18"},{"expression":{"arguments":[{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"8225:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4192,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:18","typeDescriptions":{}}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4180,"id":4196,"nodeType":"Return","src":"8210:21:18"}]},"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"7723:318:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4198,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:18","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"value","nameLocation":"8073:5:18","nodeType":"VariableDeclaration","scope":4198,"src":"8065:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:18"},"returnParameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"8103:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4178,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:18"},"scope":5386,"src":"8046:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4222,"nodeType":"Block","src":"8633:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"8651:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4209,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:18","memberName":"max","nodeType":"MemberAccess","src":"8660:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4216,"nodeType":"ExpressionStatement","src":"8643:78:18"},{"expression":{"arguments":[{"id":4219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"8746:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4217,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:18","typeDescriptions":{}}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4205,"id":4221,"nodeType":"Return","src":"8731:21:18"}]},"documentation":{"id":4199,"nodeType":"StructuredDocumentation","src":"8244:318:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4223,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:18","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"value","nameLocation":"8594:5:18","nodeType":"VariableDeclaration","scope":4223,"src":"8586:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:18"},"returnParameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4223,"src":"8624:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4203,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:18"},"scope":5386,"src":"8567:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"9154:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"9172:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4234,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4233,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:18","memberName":"max","nodeType":"MemberAccess","src":"9181:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4241,"nodeType":"ExpressionStatement","src":"9164:78:18"},{"expression":{"arguments":[{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"9267:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4242,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:18","typeDescriptions":{}}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4230,"id":4246,"nodeType":"Return","src":"9252:21:18"}]},"documentation":{"id":4224,"nodeType":"StructuredDocumentation","src":"8765:318:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:18","nodeType":"FunctionDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"value","nameLocation":"9115:5:18","nodeType":"VariableDeclaration","scope":4248,"src":"9107:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:18"},"returnParameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4248,"src":"9145:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4228,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:18"},"scope":5386,"src":"9088:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4272,"nodeType":"Block","src":"9675:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"9693:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4259,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:18","memberName":"max","nodeType":"MemberAccess","src":"9702:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"ExpressionStatement","src":"9685:78:18"},{"expression":{"arguments":[{"id":4269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"9788:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4267,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:18","typeDescriptions":{}}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4255,"id":4271,"nodeType":"Return","src":"9773:21:18"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"9286:318:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:18","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"value","nameLocation":"9636:5:18","nodeType":"VariableDeclaration","scope":4273,"src":"9628:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:18"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4273,"src":"9666:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4253,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:18"},"scope":5386,"src":"9609:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4297,"nodeType":"Block","src":"10196:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"10214:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4284,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:18","memberName":"max","nodeType":"MemberAccess","src":"10223:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4291,"nodeType":"ExpressionStatement","src":"10206:78:18"},{"expression":{"arguments":[{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"10309:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4292,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{}}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4280,"id":4296,"nodeType":"Return","src":"10294:21:18"}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"9807:318:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:18","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"value","nameLocation":"10157:5:18","nodeType":"VariableDeclaration","scope":4298,"src":"10149:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:18"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"10187:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4278,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:18"},"scope":5386,"src":"10130:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4322,"nodeType":"Block","src":"10717:126:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"10735:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4309,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:18","memberName":"max","nodeType":"MemberAccess","src":"10744:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4316,"nodeType":"ExpressionStatement","src":"10727:78:18"},{"expression":{"arguments":[{"id":4319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"10830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4317,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:18","typeDescriptions":{}}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4305,"id":4321,"nodeType":"Return","src":"10815:21:18"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"10328:318:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4323,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:18","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"value","nameLocation":"10678:5:18","nodeType":"VariableDeclaration","scope":4323,"src":"10670:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:18"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4323,"src":"10708:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4303,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:18"},"scope":5386,"src":"10651:192:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"11232:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"11250:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4334,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4333,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:18","memberName":"max","nodeType":"MemberAccess","src":"11259:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4341,"nodeType":"ExpressionStatement","src":"11242:76:18"},{"expression":{"arguments":[{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"11342:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4342,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:18","typeDescriptions":{}}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4330,"id":4346,"nodeType":"Return","src":"11328:20:18"}]},"documentation":{"id":4324,"nodeType":"StructuredDocumentation","src":"10849:314:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:18","nodeType":"FunctionDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"value","nameLocation":"11194:5:18","nodeType":"VariableDeclaration","scope":4348,"src":"11186:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:18"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"11224:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4328,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:18"},"scope":5386,"src":"11168:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4372,"nodeType":"Block","src":"11744:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11762:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4359,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:18","memberName":"max","nodeType":"MemberAccess","src":"11771:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4366,"nodeType":"ExpressionStatement","src":"11754:76:18"},{"expression":{"arguments":[{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11854:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4367,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:18","typeDescriptions":{}}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4355,"id":4371,"nodeType":"Return","src":"11840:20:18"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"11361:314:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4373,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:18","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"11706:5:18","nodeType":"VariableDeclaration","scope":4373,"src":"11698:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:18"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4373,"src":"11736:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4353,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:18"},"scope":5386,"src":"11680:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4397,"nodeType":"Block","src":"12256:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"12274:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4384,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:18","memberName":"max","nodeType":"MemberAccess","src":"12283:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4391,"nodeType":"ExpressionStatement","src":"12266:76:18"},{"expression":{"arguments":[{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"12366:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4392,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:18","typeDescriptions":{}}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4380,"id":4396,"nodeType":"Return","src":"12352:20:18"}]},"documentation":{"id":4374,"nodeType":"StructuredDocumentation","src":"11873:314:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4398,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:18","nodeType":"FunctionDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"value","nameLocation":"12218:5:18","nodeType":"VariableDeclaration","scope":4398,"src":"12210:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:18"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4398,"src":"12248:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4378,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:18"},"scope":5386,"src":"12192:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4422,"nodeType":"Block","src":"12768:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"12786:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4409,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:18","memberName":"max","nodeType":"MemberAccess","src":"12795:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4416,"nodeType":"ExpressionStatement","src":"12778:76:18"},{"expression":{"arguments":[{"id":4419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"12878:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4417,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:18","typeDescriptions":{}}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4405,"id":4421,"nodeType":"Return","src":"12864:20:18"}]},"documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"12385:314:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:18","nodeType":"FunctionDefinition","parameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"value","nameLocation":"12730:5:18","nodeType":"VariableDeclaration","scope":4423,"src":"12722:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:18"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4423,"src":"12760:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4403,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:18"},"scope":5386,"src":"12704:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4447,"nodeType":"Block","src":"13280:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13298:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4434,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4433,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:18","memberName":"max","nodeType":"MemberAccess","src":"13307:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4441,"nodeType":"ExpressionStatement","src":"13290:76:18"},{"expression":{"arguments":[{"id":4444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13390:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4442,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:18","typeDescriptions":{}}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4430,"id":4446,"nodeType":"Return","src":"13376:20:18"}]},"documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"12897:314:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4448,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:18","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"value","nameLocation":"13242:5:18","nodeType":"VariableDeclaration","scope":4448,"src":"13234:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:18"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4448,"src":"13272:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4428,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:18"},"scope":5386,"src":"13216:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"13792:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"13810:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4459,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4458,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:18","memberName":"max","nodeType":"MemberAccess","src":"13819:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4466,"nodeType":"ExpressionStatement","src":"13802:76:18"},{"expression":{"arguments":[{"id":4469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"13902:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4467,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:18","typeDescriptions":{}}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4455,"id":4471,"nodeType":"Return","src":"13888:20:18"}]},"documentation":{"id":4449,"nodeType":"StructuredDocumentation","src":"13409:314:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:18","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"value","nameLocation":"13754:5:18","nodeType":"VariableDeclaration","scope":4473,"src":"13746:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:18"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4473,"src":"13784:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4453,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:18"},"scope":5386,"src":"13728:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"14304:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"14322:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4484,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:18","memberName":"max","nodeType":"MemberAccess","src":"14331:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4491,"nodeType":"ExpressionStatement","src":"14314:76:18"},{"expression":{"arguments":[{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"14414:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4492,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:18","typeDescriptions":{}}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4480,"id":4496,"nodeType":"Return","src":"14400:20:18"}]},"documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"13921:314:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:18","nodeType":"FunctionDefinition","parameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"value","nameLocation":"14266:5:18","nodeType":"VariableDeclaration","scope":4498,"src":"14258:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:18"},"returnParameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"14296:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4478,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:18"},"scope":5386,"src":"14240:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"14816:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4509,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:18","memberName":"max","nodeType":"MemberAccess","src":"14843:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4516,"nodeType":"ExpressionStatement","src":"14826:76:18"},{"expression":{"arguments":[{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14926:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4517,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:18","typeDescriptions":{}}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4505,"id":4521,"nodeType":"Return","src":"14912:20:18"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"14433:314:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:18","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"value","nameLocation":"14778:5:18","nodeType":"VariableDeclaration","scope":4523,"src":"14770:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:18"},"returnParameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4523,"src":"14808:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4503,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:18"},"scope":5386,"src":"14752:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4547,"nodeType":"Block","src":"15328:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"15346:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4534,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4533,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:18","memberName":"max","nodeType":"MemberAccess","src":"15355:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4541,"nodeType":"ExpressionStatement","src":"15338:76:18"},{"expression":{"arguments":[{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"15438:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4542,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:18","typeDescriptions":{}}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4530,"id":4546,"nodeType":"Return","src":"15424:20:18"}]},"documentation":{"id":4524,"nodeType":"StructuredDocumentation","src":"14945:314:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4548,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:18","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"value","nameLocation":"15290:5:18","nodeType":"VariableDeclaration","scope":4548,"src":"15282:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:18"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4548,"src":"15320:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4528,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:18"},"scope":5386,"src":"15264:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4572,"nodeType":"Block","src":"15840:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"15858:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4559,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:18","memberName":"max","nodeType":"MemberAccess","src":"15867:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4566,"nodeType":"ExpressionStatement","src":"15850:76:18"},{"expression":{"arguments":[{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"15950:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4567,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:18","typeDescriptions":{}}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4555,"id":4571,"nodeType":"Return","src":"15936:20:18"}]},"documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"15457:314:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:18","nodeType":"FunctionDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"value","nameLocation":"15802:5:18","nodeType":"VariableDeclaration","scope":4573,"src":"15794:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:18"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4573,"src":"15832:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4553,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:18"},"scope":5386,"src":"15776:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4597,"nodeType":"Block","src":"16352:123:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"16370:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4584,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:18","memberName":"max","nodeType":"MemberAccess","src":"16379:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4591,"nodeType":"ExpressionStatement","src":"16362:76:18"},{"expression":{"arguments":[{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"16462:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4592,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:18","typeDescriptions":{}}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4580,"id":4596,"nodeType":"Return","src":"16448:20:18"}]},"documentation":{"id":4574,"nodeType":"StructuredDocumentation","src":"15969:314:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4598,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:18","nodeType":"FunctionDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4576,"mutability":"mutable","name":"value","nameLocation":"16314:5:18","nodeType":"VariableDeclaration","scope":4598,"src":"16306:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4575,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:18"},"returnParameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4598,"src":"16344:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4578,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:18"},"scope":5386,"src":"16288:187:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4622,"nodeType":"Block","src":"16858:120:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"16876:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4609,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:18","memberName":"max","nodeType":"MemberAccess","src":"16885:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4616,"nodeType":"ExpressionStatement","src":"16868:74:18"},{"expression":{"arguments":[{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"16965:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4617,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:18","typeDescriptions":{}}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4605,"id":4621,"nodeType":"Return","src":"16952:19:18"}]},"documentation":{"id":4599,"nodeType":"StructuredDocumentation","src":"16481:310:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:18","nodeType":"FunctionDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"value","nameLocation":"16821:5:18","nodeType":"VariableDeclaration","scope":4623,"src":"16813:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:18"},"returnParameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4623,"src":"16851:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4603,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:18"},"scope":5386,"src":"16796:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"17252:103:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"17270:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"ExpressionStatement","src":"17262:55:18"},{"expression":{"arguments":[{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"17342:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:18","typeDescriptions":{}}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4630,"id":4642,"nodeType":"Return","src":"17327:21:18"}]},"documentation":{"id":4624,"nodeType":"StructuredDocumentation","src":"16984:198:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:18","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"value","nameLocation":"17213:5:18","nodeType":"VariableDeclaration","scope":4644,"src":"17206:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4625,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:18"},"returnParameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4644,"src":"17243:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:18"},"scope":5386,"src":"17187:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4666,"nodeType":"Block","src":"17790:124:18","statements":[{"expression":{"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17800:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"17820:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4653,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:18","typeDescriptions":{}}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4658,"nodeType":"ExpressionStatement","src":"17800:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17844:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"17858:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4665,"nodeType":"ExpressionStatement","src":"17836:71:18"}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"17361:350:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:18","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"17741:5:18","nodeType":"VariableDeclaration","scope":4667,"src":"17734:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4646,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:18"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:18","nodeType":"VariableDeclaration","scope":4667,"src":"17771:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4649,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:18"},"scope":5386,"src":"17716:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"18349:124:18","statements":[{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"18359:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18379:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4676,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:18","typeDescriptions":{}}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4681,"nodeType":"ExpressionStatement","src":"18359:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"18403:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18417:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"ExpressionStatement","src":"18395:71:18"}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"17920:350:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:18","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"value","nameLocation":"18300:5:18","nodeType":"VariableDeclaration","scope":4690,"src":"18293:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4669,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:18"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:18","nodeType":"VariableDeclaration","scope":4690,"src":"18330:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4672,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:18"},"scope":5386,"src":"18275:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4712,"nodeType":"Block","src":"18908:124:18","statements":[{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"18918:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"18938:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4699,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:18","typeDescriptions":{}}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4704,"nodeType":"ExpressionStatement","src":"18918:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"18962:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"18976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4711,"nodeType":"ExpressionStatement","src":"18954:71:18"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"18479:350:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:18","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"18859:5:18","nodeType":"VariableDeclaration","scope":4713,"src":"18852:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4692,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:18"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:18","nodeType":"VariableDeclaration","scope":4713,"src":"18889:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4695,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:18"},"scope":5386,"src":"18834:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4735,"nodeType":"Block","src":"19467:124:18","statements":[{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"19477:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"19497:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4722,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:18","typeDescriptions":{}}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4727,"nodeType":"ExpressionStatement","src":"19477:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"19521:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"19535:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4734,"nodeType":"ExpressionStatement","src":"19513:71:18"}]},"documentation":{"id":4714,"nodeType":"StructuredDocumentation","src":"19038:350:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":4736,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:18","nodeType":"FunctionDefinition","parameters":{"id":4717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4716,"mutability":"mutable","name":"value","nameLocation":"19418:5:18","nodeType":"VariableDeclaration","scope":4736,"src":"19411:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4715,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:18"},"returnParameters":{"id":4720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:18","nodeType":"VariableDeclaration","scope":4736,"src":"19448:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4718,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:18"},"scope":5386,"src":"19393:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"20026:124:18","statements":[{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4744,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"20036:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"20056:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4745,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:18","typeDescriptions":{}}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4750,"nodeType":"ExpressionStatement","src":"20036:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"20080:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"20094:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4757,"nodeType":"ExpressionStatement","src":"20072:71:18"}]},"documentation":{"id":4737,"nodeType":"StructuredDocumentation","src":"19597:350:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:18","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"value","nameLocation":"19977:5:18","nodeType":"VariableDeclaration","scope":4759,"src":"19970:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4738,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:18"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:18","nodeType":"VariableDeclaration","scope":4759,"src":"20007:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4741,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:18"},"scope":5386,"src":"19952:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"20585:124:18","statements":[{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"20595:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"20615:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4768,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:18","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4773,"nodeType":"ExpressionStatement","src":"20595:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"20639:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"20653:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4780,"nodeType":"ExpressionStatement","src":"20631:71:18"}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"20156:350:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:18","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"value","nameLocation":"20536:5:18","nodeType":"VariableDeclaration","scope":4782,"src":"20529:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4761,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:18"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:18","nodeType":"VariableDeclaration","scope":4782,"src":"20566:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4764,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:18"},"scope":5386,"src":"20511:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4804,"nodeType":"Block","src":"21144:124:18","statements":[{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"21154:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"21174:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4791,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:18","typeDescriptions":{}}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4796,"nodeType":"ExpressionStatement","src":"21154:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"21198:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"21212:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4803,"nodeType":"ExpressionStatement","src":"21190:71:18"}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"20715:350:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4805,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:18","nodeType":"FunctionDefinition","parameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"value","nameLocation":"21095:5:18","nodeType":"VariableDeclaration","scope":4805,"src":"21088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4784,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:18"},"returnParameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:18","nodeType":"VariableDeclaration","scope":4805,"src":"21125:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4787,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:18"},"scope":5386,"src":"21070:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4827,"nodeType":"Block","src":"21703:124:18","statements":[{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"21713:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"21733:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4814,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:18","typeDescriptions":{}}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4819,"nodeType":"ExpressionStatement","src":"21713:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"21757:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"21771:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4826,"nodeType":"ExpressionStatement","src":"21749:71:18"}]},"documentation":{"id":4806,"nodeType":"StructuredDocumentation","src":"21274:350:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:18","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"value","nameLocation":"21654:5:18","nodeType":"VariableDeclaration","scope":4828,"src":"21647:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4807,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:18"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:18","nodeType":"VariableDeclaration","scope":4828,"src":"21684:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4810,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:18"},"scope":5386,"src":"21629:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4850,"nodeType":"Block","src":"22262:124:18","statements":[{"expression":{"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"22272:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"22292:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4837,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:18","typeDescriptions":{}}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4842,"nodeType":"ExpressionStatement","src":"22272:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"22316:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"22330:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4849,"nodeType":"ExpressionStatement","src":"22308:71:18"}]},"documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"21833:350:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:18","nodeType":"FunctionDefinition","parameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"value","nameLocation":"22213:5:18","nodeType":"VariableDeclaration","scope":4851,"src":"22206:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4830,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:18"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:18","nodeType":"VariableDeclaration","scope":4851,"src":"22243:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4833,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:18"},"scope":5386,"src":"22188:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4873,"nodeType":"Block","src":"22821:124:18","statements":[{"expression":{"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22831:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"22851:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4860,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:18","typeDescriptions":{}}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4865,"nodeType":"ExpressionStatement","src":"22831:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"22875:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"22889:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4866,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4872,"nodeType":"ExpressionStatement","src":"22867:71:18"}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"22392:350:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4874,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:18","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"value","nameLocation":"22772:5:18","nodeType":"VariableDeclaration","scope":4874,"src":"22765:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4853,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:18"},"returnParameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:18","nodeType":"VariableDeclaration","scope":4874,"src":"22802:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4856,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:18"},"scope":5386,"src":"22747:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4896,"nodeType":"Block","src":"23380:124:18","statements":[{"expression":{"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"23390:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"23410:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4883,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:18","typeDescriptions":{}}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4888,"nodeType":"ExpressionStatement","src":"23390:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"23434:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"23448:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4895,"nodeType":"ExpressionStatement","src":"23426:71:18"}]},"documentation":{"id":4875,"nodeType":"StructuredDocumentation","src":"22951:350:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:18","nodeType":"FunctionDefinition","parameters":{"id":4878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4877,"mutability":"mutable","name":"value","nameLocation":"23331:5:18","nodeType":"VariableDeclaration","scope":4897,"src":"23324:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4876,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:18"},"returnParameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:18","nodeType":"VariableDeclaration","scope":4897,"src":"23361:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4879,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:18"},"scope":5386,"src":"23306:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4919,"nodeType":"Block","src":"23939:124:18","statements":[{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"23949:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"23969:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4906,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:18","typeDescriptions":{}}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4911,"nodeType":"ExpressionStatement","src":"23949:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"23993:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"24007:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4918,"nodeType":"ExpressionStatement","src":"23985:71:18"}]},"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"23510:350:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:18","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"value","nameLocation":"23890:5:18","nodeType":"VariableDeclaration","scope":4920,"src":"23883:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4899,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:18"},"returnParameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:18","nodeType":"VariableDeclaration","scope":4920,"src":"23920:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4902,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:18"},"scope":5386,"src":"23865:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4942,"nodeType":"Block","src":"24498:124:18","statements":[{"expression":{"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"24508:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"24528:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4929,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:18","typeDescriptions":{}}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4934,"nodeType":"ExpressionStatement","src":"24508:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"24552:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"24566:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4941,"nodeType":"ExpressionStatement","src":"24544:71:18"}]},"documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"24069:350:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4943,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:18","nodeType":"FunctionDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"value","nameLocation":"24449:5:18","nodeType":"VariableDeclaration","scope":4943,"src":"24442:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4922,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:18"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:18","nodeType":"VariableDeclaration","scope":4943,"src":"24479:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4925,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:18"},"scope":5386,"src":"24424:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4965,"nodeType":"Block","src":"25057:124:18","statements":[{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"25067:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"25087:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4952,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:18","typeDescriptions":{}}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4957,"nodeType":"ExpressionStatement","src":"25067:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"25111:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"25125:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4964,"nodeType":"ExpressionStatement","src":"25103:71:18"}]},"documentation":{"id":4944,"nodeType":"StructuredDocumentation","src":"24628:350:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:18","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"value","nameLocation":"25008:5:18","nodeType":"VariableDeclaration","scope":4966,"src":"25001:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4945,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:18"},"returnParameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:18","nodeType":"VariableDeclaration","scope":4966,"src":"25038:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4948,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:18"},"scope":5386,"src":"24983:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"25616:124:18","statements":[{"expression":{"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"25626:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"25646:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4975,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:18","typeDescriptions":{}}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4980,"nodeType":"ExpressionStatement","src":"25626:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"25670:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"25684:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4987,"nodeType":"ExpressionStatement","src":"25662:71:18"}]},"documentation":{"id":4967,"nodeType":"StructuredDocumentation","src":"25187:350:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:18","nodeType":"FunctionDefinition","parameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"value","nameLocation":"25567:5:18","nodeType":"VariableDeclaration","scope":4989,"src":"25560:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4968,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:18"},"returnParameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4972,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:18","nodeType":"VariableDeclaration","scope":4989,"src":"25597:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4971,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:18"},"scope":5386,"src":"25542:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5011,"nodeType":"Block","src":"26175:124:18","statements":[{"expression":{"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"26185:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"26205:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4998,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:18","typeDescriptions":{}}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5003,"nodeType":"ExpressionStatement","src":"26185:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"26229:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"26243:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5010,"nodeType":"ExpressionStatement","src":"26221:71:18"}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"25746:350:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5012,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:18","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"value","nameLocation":"26126:5:18","nodeType":"VariableDeclaration","scope":5012,"src":"26119:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4991,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:18"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:18","nodeType":"VariableDeclaration","scope":5012,"src":"26156:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4994,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:18"},"scope":5386,"src":"26101:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5034,"nodeType":"Block","src":"26734:124:18","statements":[{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"26744:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"26764:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5021,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:18","typeDescriptions":{}}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5026,"nodeType":"ExpressionStatement","src":"26744:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"26788:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"26802:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5033,"nodeType":"ExpressionStatement","src":"26780:71:18"}]},"documentation":{"id":5013,"nodeType":"StructuredDocumentation","src":"26305:350:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:18","nodeType":"FunctionDefinition","parameters":{"id":5016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5015,"mutability":"mutable","name":"value","nameLocation":"26685:5:18","nodeType":"VariableDeclaration","scope":5035,"src":"26678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5014,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:18"},"returnParameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5018,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:18","nodeType":"VariableDeclaration","scope":5035,"src":"26715:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5017,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:18"},"scope":5386,"src":"26660:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5057,"nodeType":"Block","src":"27293:124:18","statements":[{"expression":{"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"27303:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27323:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5044,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:18","typeDescriptions":{}}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5049,"nodeType":"ExpressionStatement","src":"27303:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"27347:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27361:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5056,"nodeType":"ExpressionStatement","src":"27339:71:18"}]},"documentation":{"id":5036,"nodeType":"StructuredDocumentation","src":"26864:350:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:18","nodeType":"FunctionDefinition","parameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"value","nameLocation":"27244:5:18","nodeType":"VariableDeclaration","scope":5058,"src":"27237:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5037,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:18"},"returnParameters":{"id":5042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5041,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:18","nodeType":"VariableDeclaration","scope":5058,"src":"27274:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5040,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:18"},"scope":5386,"src":"27219:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5080,"nodeType":"Block","src":"27852:124:18","statements":[{"expression":{"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"27862:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"27882:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5067,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:18","typeDescriptions":{}}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5072,"nodeType":"ExpressionStatement","src":"27862:26:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"27906:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"27920:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5079,"nodeType":"ExpressionStatement","src":"27898:71:18"}]},"documentation":{"id":5059,"nodeType":"StructuredDocumentation","src":"27423:350:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5081,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:18","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"value","nameLocation":"27803:5:18","nodeType":"VariableDeclaration","scope":5081,"src":"27796:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5060,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:18"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:18","nodeType":"VariableDeclaration","scope":5081,"src":"27833:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5063,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:18"},"scope":5386,"src":"27778:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5103,"nodeType":"Block","src":"28404:122:18","statements":[{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5089,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"28414:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"28433:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5090,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:18","typeDescriptions":{}}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5095,"nodeType":"ExpressionStatement","src":"28414:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"28457:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"28471:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5102,"nodeType":"ExpressionStatement","src":"28449:70:18"}]},"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"27982:345:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:18","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"value","nameLocation":"28356:5:18","nodeType":"VariableDeclaration","scope":5104,"src":"28349:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5083,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:18"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:18","nodeType":"VariableDeclaration","scope":5104,"src":"28386:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5086,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:18"},"scope":5386,"src":"28332:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5126,"nodeType":"Block","src":"28954:122:18","statements":[{"expression":{"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"28964:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"28983:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5113,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:18","typeDescriptions":{}}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5118,"nodeType":"ExpressionStatement","src":"28964:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"29007:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"29021:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5125,"nodeType":"ExpressionStatement","src":"28999:70:18"}]},"documentation":{"id":5105,"nodeType":"StructuredDocumentation","src":"28532:345:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5127,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:18","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"value","nameLocation":"28906:5:18","nodeType":"VariableDeclaration","scope":5127,"src":"28899:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5106,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:18"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:18","nodeType":"VariableDeclaration","scope":5127,"src":"28936:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5109,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:18"},"scope":5386,"src":"28882:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"29504:122:18","statements":[{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"29514:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"29533:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5136,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:18","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5141,"nodeType":"ExpressionStatement","src":"29514:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"29557:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"29571:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5148,"nodeType":"ExpressionStatement","src":"29549:70:18"}]},"documentation":{"id":5128,"nodeType":"StructuredDocumentation","src":"29082:345:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:18","nodeType":"FunctionDefinition","parameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"value","nameLocation":"29456:5:18","nodeType":"VariableDeclaration","scope":5150,"src":"29449:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5129,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:18"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:18","nodeType":"VariableDeclaration","scope":5150,"src":"29486:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5132,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:18"},"scope":5386,"src":"29432:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5172,"nodeType":"Block","src":"30054:122:18","statements":[{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"30064:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"30083:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5159,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:18","typeDescriptions":{}}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5164,"nodeType":"ExpressionStatement","src":"30064:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"30107:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"30121:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5171,"nodeType":"ExpressionStatement","src":"30099:70:18"}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"29632:345:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5173,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:18","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"value","nameLocation":"30006:5:18","nodeType":"VariableDeclaration","scope":5173,"src":"29999:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5152,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:18"},"returnParameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:18","nodeType":"VariableDeclaration","scope":5173,"src":"30036:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5155,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:18"},"scope":5386,"src":"29982:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5195,"nodeType":"Block","src":"30604:122:18","statements":[{"expression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"30614:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"30633:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5182,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:18","typeDescriptions":{}}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5187,"nodeType":"ExpressionStatement","src":"30614:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"30657:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"30671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5194,"nodeType":"ExpressionStatement","src":"30649:70:18"}]},"documentation":{"id":5174,"nodeType":"StructuredDocumentation","src":"30182:345:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5196,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:18","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"value","nameLocation":"30556:5:18","nodeType":"VariableDeclaration","scope":5196,"src":"30549:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5175,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:18"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:18","nodeType":"VariableDeclaration","scope":5196,"src":"30586:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5178,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:18"},"scope":5386,"src":"30532:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"31154:122:18","statements":[{"expression":{"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5204,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"31164:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"31183:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5205,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:18","typeDescriptions":{}}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5210,"nodeType":"ExpressionStatement","src":"31164:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"31207:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"31221:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"ExpressionStatement","src":"31199:70:18"}]},"documentation":{"id":5197,"nodeType":"StructuredDocumentation","src":"30732:345:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:18","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"value","nameLocation":"31106:5:18","nodeType":"VariableDeclaration","scope":5219,"src":"31099:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5198,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:18"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:18","nodeType":"VariableDeclaration","scope":5219,"src":"31136:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5201,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:18"},"scope":5386,"src":"31082:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5241,"nodeType":"Block","src":"31704:122:18","statements":[{"expression":{"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"31714:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"31733:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5228,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:18","typeDescriptions":{}}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5233,"nodeType":"ExpressionStatement","src":"31714:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"31757:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"31771:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5240,"nodeType":"ExpressionStatement","src":"31749:70:18"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"31282:345:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:18","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"31656:5:18","nodeType":"VariableDeclaration","scope":5242,"src":"31649:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5221,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:18"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:18","nodeType":"VariableDeclaration","scope":5242,"src":"31686:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5224,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:18"},"scope":5386,"src":"31632:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5264,"nodeType":"Block","src":"32254:122:18","statements":[{"expression":{"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"32264:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"32283:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5251,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:18","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5256,"nodeType":"ExpressionStatement","src":"32264:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"32307:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"32321:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"ExpressionStatement","src":"32299:70:18"}]},"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"31832:345:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:18","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"value","nameLocation":"32206:5:18","nodeType":"VariableDeclaration","scope":5265,"src":"32199:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5244,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:18"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:18","nodeType":"VariableDeclaration","scope":5265,"src":"32236:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5247,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:18"},"scope":5386,"src":"32182:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5287,"nodeType":"Block","src":"32804:122:18","statements":[{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"32814:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"32833:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5274,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:18","typeDescriptions":{}}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5279,"nodeType":"ExpressionStatement","src":"32814:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"32857:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"32871:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5286,"nodeType":"ExpressionStatement","src":"32849:70:18"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"32382:345:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:18","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"value","nameLocation":"32756:5:18","nodeType":"VariableDeclaration","scope":5288,"src":"32749:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5267,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:18"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:18","nodeType":"VariableDeclaration","scope":5288,"src":"32786:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5270,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:18"},"scope":5386,"src":"32732:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5310,"nodeType":"Block","src":"33354:122:18","statements":[{"expression":{"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"33364:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"33383:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5297,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:18","typeDescriptions":{}}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5302,"nodeType":"ExpressionStatement","src":"33364:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"33407:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"33421:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5309,"nodeType":"ExpressionStatement","src":"33399:70:18"}]},"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"32932:345:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5311,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:18","nodeType":"FunctionDefinition","parameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"value","nameLocation":"33306:5:18","nodeType":"VariableDeclaration","scope":5311,"src":"33299:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5290,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:18"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:18","nodeType":"VariableDeclaration","scope":5311,"src":"33336:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5293,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:18"},"scope":5386,"src":"33282:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5333,"nodeType":"Block","src":"33904:122:18","statements":[{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"33914:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"33933:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5320,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:18","typeDescriptions":{}}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5325,"nodeType":"ExpressionStatement","src":"33914:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"33957:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"33971:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5332,"nodeType":"ExpressionStatement","src":"33949:70:18"}]},"documentation":{"id":5312,"nodeType":"StructuredDocumentation","src":"33482:345:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:18","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"value","nameLocation":"33856:5:18","nodeType":"VariableDeclaration","scope":5334,"src":"33849:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5313,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:18"},"returnParameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:18","nodeType":"VariableDeclaration","scope":5334,"src":"33886:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5316,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:18"},"scope":5386,"src":"33832:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"34447:120:18","statements":[{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"34457:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"34475:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5343,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:18","typeDescriptions":{}}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5348,"nodeType":"ExpressionStatement","src":"34457:24:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"34499:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"34513:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5355,"nodeType":"ExpressionStatement","src":"34491:69:18"}]},"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"34032:340:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:18","nodeType":"FunctionDefinition","parameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"value","nameLocation":"34400:5:18","nodeType":"VariableDeclaration","scope":5357,"src":"34393:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5336,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:18"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:18","nodeType":"VariableDeclaration","scope":5357,"src":"34430:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5339,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:18"},"scope":5386,"src":"34377:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5384,"nodeType":"Block","src":"34845:233:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"34962:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5370,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5369,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:18","memberName":"max","nodeType":"MemberAccess","src":"34979:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:18","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5378,"nodeType":"ExpressionStatement","src":"34954:87:18"},{"expression":{"arguments":[{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"35065:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5379,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:18","typeDescriptions":{}}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5364,"id":5383,"nodeType":"Return","src":"35051:20:18"}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"34573:203:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5385,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:18","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"34807:5:18","nodeType":"VariableDeclaration","scope":5385,"src":"34799:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:18"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5385,"src":"34837:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5362,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:18"},"scope":5386,"src":"34781:297:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5387,"src":"927:34153:18","usedErrors":[]}],"src":"192:34889:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5491]},"id":5492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5388,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"134:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5491,"linearizedBaseContracts":[5491],"name":"SignedMath","nameLocation":"223:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":5406,"nodeType":"Block","src":"375:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"392:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"396:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"404:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:19","trueExpression":{"id":5402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"400:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5398,"id":5405,"nodeType":"Return","src":"385:20:19"}]},"documentation":{"id":5390,"nodeType":"StructuredDocumentation","src":"240:66:19","text":" @dev Returns the largest of two signed numbers."},"id":5407,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:19","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"a","nameLocation":"331:1:19","nodeType":"VariableDeclaration","scope":5407,"src":"324:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5391,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5394,"mutability":"mutable","name":"b","nameLocation":"341:1:19","nodeType":"VariableDeclaration","scope":5407,"src":"334:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5393,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:19"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5407,"src":"367:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5396,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:19"},"scope":5491,"src":"311:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5424,"nodeType":"Block","src":"554:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"571:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"575:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"583:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:19","trueExpression":{"id":5420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"579:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5416,"id":5423,"nodeType":"Return","src":"564:20:19"}]},"documentation":{"id":5408,"nodeType":"StructuredDocumentation","src":"418:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":5425,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:19","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"a","nameLocation":"510:1:19","nodeType":"VariableDeclaration","scope":5425,"src":"503:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5409,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"b","nameLocation":"520:1:19","nodeType":"VariableDeclaration","scope":5425,"src":"513:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5411,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:19"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5425,"src":"546:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5414,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:19"},"scope":5491,"src":"490:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5468,"nodeType":"Block","src":"796:162:19","statements":[{"assignments":[5436],"declarations":[{"constant":false,"id":5436,"mutability":"mutable","name":"x","nameLocation":"865:1:19","nodeType":"VariableDeclaration","scope":5468,"src":"858:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5435,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5449,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"870:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"874:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"881:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"885:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"910:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"930:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:19","typeDescriptions":{}}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5451,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:19","typeDescriptions":{}}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"944:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"948:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5434,"id":5467,"nodeType":"Return","src":"903:48:19"}]},"documentation":{"id":5426,"nodeType":"StructuredDocumentation","src":"597:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5469,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:19","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"a","nameLocation":"752:1:19","nodeType":"VariableDeclaration","scope":5469,"src":"745:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5427,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"b","nameLocation":"762:1:19","nodeType":"VariableDeclaration","scope":5469,"src":"755:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5429,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:19"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"788:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5432,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:19"},"scope":5491,"src":"728:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5489,"nodeType":"Block","src":"1102:158:19","statements":[{"id":5488,"nodeType":"UncheckedBlock","src":"1112:142:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"1227:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:19","subExpression":{"id":5483,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"1241:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:19","trueExpression":{"id":5482,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"1236:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5476,"id":5487,"nodeType":"Return","src":"1212:31:19"}]}]},"documentation":{"id":5470,"nodeType":"StructuredDocumentation","src":"964:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5490,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:19","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"n","nameLocation":"1067:1:19","nodeType":"VariableDeclaration","scope":5490,"src":"1060:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5471,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:19"},"returnParameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5490,"src":"1093:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:19"},"scope":5491,"src":"1047:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5492,"src":"215:1047:19","usedErrors":[]}],"src":"109:1154:19"},"id":19},"contracts/GovernanceToken.sol":{"ast":{"absolutePath":"contracts/GovernanceToken.sol","exportedSymbols":{"Context":[1780],"Counters":[1854],"ECDSA":[2775],"EIP712":[2979],"ERC20":[713],"ERC20Permit":[963],"ERC20Votes":[1697],"GovernanceToken":[5571],"IERC20":[791],"IERC20Metadata":[1722],"IERC20Permit":[1758],"IERC5267":[102],"IERC5805":[111],"IERC6372":[126],"IVotes":[77],"Math":[3845],"SafeCast":[5386],"ShortString":[1859],"ShortStrings":[2070],"SignedMath":[5491],"StorageSlot":[2180],"Strings":[2409]},"id":5572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5493,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":5494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5572,"sourceUnit":1698,"src":"57:71:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5495,"name":"ERC20Votes","nameLocations":["158:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1697,"src":"158:10:20"},"id":5496,"nodeType":"InheritanceSpecifier","src":"158:10:20"}],"canonicalName":"GovernanceToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5571,"linearizedBaseContracts":[5571,1697,111,77,126,963,2979,102,1758,713,1722,791,1780],"name":"GovernanceToken","nameLocation":"139:15:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"5d641847","id":5499,"mutability":"mutable","name":"s_maxSupply","nameLocation":"190:11:20","nodeType":"VariableDeclaration","scope":5571,"src":"175:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030303030303030303030303030303030303030303030","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"204:25:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1000000000000000000000000"},"visibility":"public"},{"body":{"id":5515,"nodeType":"Block","src":"332:47:20","statements":[{"expression":{"arguments":[{"expression":{"id":5510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"348:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"352:6:20","memberName":"sender","nodeType":"MemberAccess","src":"348:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5512,"name":"s_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"360:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5553],"referencedDeclaration":5553,"src":"342:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"342:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5514,"nodeType":"ExpressionStatement","src":"342:30:20"}]},"id":5516,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"476f7665726e616e6365546f6b656e","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"264:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_52cc2123c5b8e3f056be8fd12b06d49cf9c7228fdef9974c01d8865a59efc4f4","typeString":"literal_string \"GovernanceToken\""},"value":"GovernanceToken"},{"hexValue":"4754","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"283:4:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b275d0555485319643a6e39fae791932db6d1bb57b5529b0f8111f703023fe74","typeString":"literal_string \"GT\""},"value":"GT"}],"id":5504,"kind":"baseConstructorSpecifier","modifierName":{"id":5501,"name":"ERC20","nameLocations":["258:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"258:5:20"},"nodeType":"ModifierInvocation","src":"258:30:20"},{"arguments":[{"hexValue":"476f7665726e616e6365546f6b656e","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"309:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_52cc2123c5b8e3f056be8fd12b06d49cf9c7228fdef9974c01d8865a59efc4f4","typeString":"literal_string \"GovernanceToken\""},"value":"GovernanceToken"}],"id":5507,"kind":"baseConstructorSpecifier","modifierName":{"id":5505,"name":"ERC20Permit","nameLocations":["297:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"297:11:20"},"nodeType":"ModifierInvocation","src":"297:30:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5500,"nodeType":"ParameterList","parameters":[],"src":"247:2:20"},"returnParameters":{"id":5508,"nodeType":"ParameterList","parameters":[],"src":"332:0:20"},"scope":5571,"src":"236:143:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1442],"body":{"id":5535,"nodeType":"Block","src":"580:60:20","statements":[{"expression":{"arguments":[{"id":5530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"616:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5531,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"622:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"626:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5527,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"590:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GovernanceToken_$5571_$","typeString":"type(contract super GovernanceToken)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"596:19:20","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1442,"src":"590:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5534,"nodeType":"ExpressionStatement","src":"590:43:20"}]},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"458:19:20","nodeType":"FunctionDefinition","overrides":{"id":5525,"nodeType":"OverrideSpecifier","overrides":[{"id":5524,"name":"ERC20Votes","nameLocations":["568:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1697,"src":"568:10:20"}],"src":"559:20:20"},"parameters":{"id":5523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"from","nameLocation":"495:4:20","nodeType":"VariableDeclaration","scope":5536,"src":"487:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5517,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5520,"mutability":"mutable","name":"to","nameLocation":"517:2:20","nodeType":"VariableDeclaration","scope":5536,"src":"509:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5519,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5522,"mutability":"mutable","name":"amount","nameLocation":"537:6:20","nodeType":"VariableDeclaration","scope":5536,"src":"529:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:72:20"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[],"src":"580:0:20"},"scope":5571,"src":"449:191:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1389],"body":{"id":5552,"nodeType":"Block","src":"719:40:20","statements":[{"expression":{"arguments":[{"id":5548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"741:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5549,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"745:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5545,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"729:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GovernanceToken_$5571_$","typeString":"type(contract super GovernanceToken)"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"735:5:20","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"729:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"729:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5551,"nodeType":"ExpressionStatement","src":"729:23:20"}]},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"655:5:20","nodeType":"FunctionDefinition","overrides":{"id":5543,"nodeType":"OverrideSpecifier","overrides":[{"id":5542,"name":"ERC20Votes","nameLocations":["707:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1697,"src":"707:10:20"}],"src":"698:20:20"},"parameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"to","nameLocation":"669:2:20","nodeType":"VariableDeclaration","scope":5553,"src":"661:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5537,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5540,"mutability":"mutable","name":"amount","nameLocation":"681:6:20","nodeType":"VariableDeclaration","scope":5553,"src":"673:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"660:28:20"},"returnParameters":{"id":5544,"nodeType":"ParameterList","parameters":[],"src":"719:0:20"},"scope":5571,"src":"646:113:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1412],"body":{"id":5569,"nodeType":"Block","src":"865:45:20","statements":[{"expression":{"arguments":[{"id":5565,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"887:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"896:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5562,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"875:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GovernanceToken_$5571_$","typeString":"type(contract super GovernanceToken)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"881:5:20","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"875:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5568,"nodeType":"ExpressionStatement","src":"875:28:20"}]},"id":5570,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"774:5:20","nodeType":"FunctionDefinition","overrides":{"id":5560,"nodeType":"OverrideSpecifier","overrides":[{"id":5559,"name":"ERC20Votes","nameLocations":["853:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1697,"src":"853:10:20"}],"src":"844:20:20"},"parameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"account","nameLocation":"797:7:20","nodeType":"VariableDeclaration","scope":5570,"src":"789:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5554,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5557,"mutability":"mutable","name":"amount","nameLocation":"822:6:20","nodeType":"VariableDeclaration","scope":5570,"src":"814:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5556,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"779:55:20"},"returnParameters":{"id":5561,"nodeType":"ParameterList","parameters":[],"src":"865:0:20"},"scope":5571,"src":"765:145:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5572,"src":"130:782:20","usedErrors":[1867,1869]}],"src":"32:881:20"},"id":20}},"contracts":{"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_171":{"entryPoint":null,"id":171,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"423:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:21"},"nodeType":"YulFunctionCall","src":"433:12:21"},"nodeType":"YulExpressionStatement","src":"433:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:21"},{"body":{"nodeType":"YulBlock","src":"546:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:21"},"nodeType":"YulFunctionCall","src":"556:12:21"},"nodeType":"YulExpressionStatement","src":"556:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:21"},{"body":{"nodeType":"YulBlock","src":"628:54:21","statements":[{"nodeType":"YulAssignment","src":"638:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:21"},"nodeType":"YulFunctionCall","src":"652:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:21"},"nodeType":"YulFunctionCall","src":"668:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:21"},"nodeType":"YulFunctionCall","src":"648:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:21","type":""}],"src":"580:102:21"},{"body":{"nodeType":"YulBlock","src":"716:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:21"},"nodeType":"YulFunctionCall","src":"726:88:21"},"nodeType":"YulExpressionStatement","src":"726:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:21"},"nodeType":"YulFunctionCall","src":"823:15:21"},"nodeType":"YulExpressionStatement","src":"823:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:21"},"nodeType":"YulFunctionCall","src":"847:15:21"},"nodeType":"YulExpressionStatement","src":"847:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:21"},{"body":{"nodeType":"YulBlock","src":"917:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:21"},"nodeType":"YulFunctionCall","src":"957:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:21"},"nodeType":"YulFunctionCall","src":"945:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:21"},"nodeType":"YulFunctionCall","src":"1098:18:21"},"nodeType":"YulExpressionStatement","src":"1098:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:21"},"nodeType":"YulFunctionCall","src":"1036:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:21"},"nodeType":"YulFunctionCall","src":"1072:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:21"},"nodeType":"YulFunctionCall","src":"1033:62:21"},"nodeType":"YulIf","src":"1030:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:21"},"nodeType":"YulFunctionCall","src":"1127:22:21"},"nodeType":"YulExpressionStatement","src":"1127:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:21","type":""}],"src":"874:281:21"},{"body":{"nodeType":"YulBlock","src":"1202:88:21","statements":[{"nodeType":"YulAssignment","src":"1212:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:21"},"nodeType":"YulFunctionCall","src":"1222:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:21"},"nodeType":"YulFunctionCall","src":"1251:33:21"},"nodeType":"YulExpressionStatement","src":"1251:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:21","type":""}],"src":"1161:129:21"},{"body":{"nodeType":"YulBlock","src":"1363:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:21"},"nodeType":"YulFunctionCall","src":"1470:18:21"},"nodeType":"YulExpressionStatement","src":"1470:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:21"},"nodeType":"YulFunctionCall","src":"1437:30:21"},"nodeType":"YulIf","src":"1434:56:21"},{"nodeType":"YulAssignment","src":"1500:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:21"},"nodeType":"YulFunctionCall","src":"1508:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:21"}]},{"nodeType":"YulAssignment","src":"1574:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:21"},"nodeType":"YulFunctionCall","src":"1582:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"src":"1296:308:21"},{"body":{"nodeType":"YulBlock","src":"1672:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:21"},"nodeType":"YulFunctionCall","src":"1791:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:21"},"nodeType":"YulFunctionCall","src":"1785:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:21"},"nodeType":"YulFunctionCall","src":"1765:39:21"},"nodeType":"YulExpressionStatement","src":"1765:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:21"},"nodeType":"YulFunctionCall","src":"1709:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:21","statements":[{"nodeType":"YulAssignment","src":"1725:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:21"},"nodeType":"YulFunctionCall","src":"1730:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:21","statements":[]},"src":"1701:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:21"},"nodeType":"YulFunctionCall","src":"1830:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:21"},"nodeType":"YulFunctionCall","src":"1823:27:21"},"nodeType":"YulExpressionStatement","src":"1823:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:21","type":""}],"src":"1610:246:21"},{"body":{"nodeType":"YulBlock","src":"1957:339:21","statements":[{"nodeType":"YulAssignment","src":"1967:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:21"},"nodeType":"YulFunctionCall","src":"1992:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:21"},"nodeType":"YulFunctionCall","src":"1976:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:21"},"nodeType":"YulFunctionCall","src":"2051:21:21"},"nodeType":"YulExpressionStatement","src":"2051:21:21"},{"nodeType":"YulVariableDeclaration","src":"2081:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:21"},"nodeType":"YulFunctionCall","src":"2092:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:21"},"nodeType":"YulFunctionCall","src":"2148:79:21"},"nodeType":"YulExpressionStatement","src":"2148:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:21"},"nodeType":"YulFunctionCall","src":"2123:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:21"},"nodeType":"YulFunctionCall","src":"2120:25:21"},"nodeType":"YulIf","src":"2117:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:21"},"nodeType":"YulFunctionCall","src":"2238:52:21"},"nodeType":"YulExpressionStatement","src":"2238:52:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:21","type":""}],"src":"1862:434:21"},{"body":{"nodeType":"YulBlock","src":"2389:282:21","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:21"},"nodeType":"YulFunctionCall","src":"2440:79:21"},"nodeType":"YulExpressionStatement","src":"2440:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:21"},"nodeType":"YulFunctionCall","src":"2413:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:21"},"nodeType":"YulFunctionCall","src":"2409:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:21"},"nodeType":"YulFunctionCall","src":"2402:35:21"},"nodeType":"YulIf","src":"2399:122:21"},{"nodeType":"YulVariableDeclaration","src":"2530:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:21"},"nodeType":"YulFunctionCall","src":"2544:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:21"},"nodeType":"YulFunctionCall","src":"2634:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:21"},"nodeType":"YulFunctionCall","src":"2575:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:21","type":""}],"src":"2316:355:21"},{"body":{"nodeType":"YulBlock","src":"2791:739:21","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:21"},"nodeType":"YulFunctionCall","src":"2839:79:21"},"nodeType":"YulExpressionStatement","src":"2839:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:21"},"nodeType":"YulFunctionCall","src":"2808:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:21"},"nodeType":"YulFunctionCall","src":"2804:32:21"},"nodeType":"YulIf","src":"2801:119:21"},{"nodeType":"YulBlock","src":"2930:291:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:21"},"nodeType":"YulFunctionCall","src":"2965:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:21"},"nodeType":"YulFunctionCall","src":"2959:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:21"},"nodeType":"YulFunctionCall","src":"3032:79:21"},"nodeType":"YulExpressionStatement","src":"3032:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:21"},"nodeType":"YulFunctionCall","src":"2999:30:21"},"nodeType":"YulIf","src":"2996:117:21"},{"nodeType":"YulAssignment","src":"3127:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:21"},"nodeType":"YulFunctionCall","src":"3179:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:21"},"nodeType":"YulFunctionCall","src":"3137:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:21"}]}]},{"nodeType":"YulBlock","src":"3231:292:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:21"},"nodeType":"YulFunctionCall","src":"3266:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:21"},"nodeType":"YulFunctionCall","src":"3260:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:21"},"nodeType":"YulFunctionCall","src":"3334:79:21"},"nodeType":"YulExpressionStatement","src":"3334:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:21"},"nodeType":"YulFunctionCall","src":"3301:30:21"},"nodeType":"YulIf","src":"3298:117:21"},{"nodeType":"YulAssignment","src":"3429:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:21"},"nodeType":"YulFunctionCall","src":"3481:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:21"},"nodeType":"YulFunctionCall","src":"3439:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:21","type":""}],"src":"2677:853:21"},{"body":{"nodeType":"YulBlock","src":"3595:40:21","statements":[{"nodeType":"YulAssignment","src":"3606:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:21"},"nodeType":"YulFunctionCall","src":"3616:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:21","type":""}],"src":"3536:99:21"},{"body":{"nodeType":"YulBlock","src":"3669:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:21"},"nodeType":"YulFunctionCall","src":"3679:88:21"},"nodeType":"YulExpressionStatement","src":"3679:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:21"},"nodeType":"YulFunctionCall","src":"3776:15:21"},"nodeType":"YulExpressionStatement","src":"3776:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:21"},"nodeType":"YulFunctionCall","src":"3800:15:21"},"nodeType":"YulExpressionStatement","src":"3800:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:21"},{"body":{"nodeType":"YulBlock","src":"3878:269:21","statements":[{"nodeType":"YulAssignment","src":"3888:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:21"},"nodeType":"YulFunctionCall","src":"3898:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:21"},"nodeType":"YulFunctionCall","src":"3945:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:21","statements":[{"nodeType":"YulAssignment","src":"4010:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:21"},"nodeType":"YulFunctionCall","src":"4020:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:21"},"nodeType":"YulFunctionCall","src":"3969:26:21"},"nodeType":"YulIf","src":"3966:81:21"},{"body":{"nodeType":"YulBlock","src":"4099:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:21"},"nodeType":"YulFunctionCall","src":"4113:18:21"},"nodeType":"YulExpressionStatement","src":"4113:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:21"},"nodeType":"YulFunctionCall","src":"4083:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:21"},"nodeType":"YulFunctionCall","src":"4060:38:21"},"nodeType":"YulIf","src":"4057:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:21","type":""}],"src":"3827:320:21"},{"body":{"nodeType":"YulBlock","src":"4207:87:21","statements":[{"nodeType":"YulAssignment","src":"4217:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:21"},"nodeType":"YulFunctionCall","src":"4238:14:21"},"nodeType":"YulExpressionStatement","src":"4238:14:21"},{"nodeType":"YulAssignment","src":"4261:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:21"},"nodeType":"YulFunctionCall","src":"4269:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:21","type":""}],"src":"4153:141:21"},{"body":{"nodeType":"YulBlock","src":"4344:49:21","statements":[{"nodeType":"YulAssignment","src":"4354:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:21"},"nodeType":"YulFunctionCall","src":"4364:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:21","type":""}],"src":"4300:93:21"},{"body":{"nodeType":"YulBlock","src":"4452:54:21","statements":[{"nodeType":"YulAssignment","src":"4462:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:21"},"nodeType":"YulFunctionCall","src":"4483:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:21","type":""}],"src":"4399:107:21"},{"body":{"nodeType":"YulBlock","src":"4588:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:21"},"nodeType":"YulFunctionCall","src":"4615:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:21"},"nodeType":"YulFunctionCall","src":"4654:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:21","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:21"},"nodeType":"YulFunctionCall","src":"4772:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:21"}]},{"nodeType":"YulAssignment","src":"4820:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:21"},"nodeType":"YulFunctionCall","src":"4840:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:21"},"nodeType":"YulFunctionCall","src":"4829:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:21"}]},{"nodeType":"YulAssignment","src":"4859:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:21"},"nodeType":"YulFunctionCall","src":"4879:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:21"},"nodeType":"YulFunctionCall","src":"4869:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:21","type":""}],"src":"4512:393:21"},{"body":{"nodeType":"YulBlock","src":"4956:32:21","statements":[{"nodeType":"YulAssignment","src":"4966:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:21","type":""}],"src":"4911:77:21"},{"body":{"nodeType":"YulBlock","src":"5026:28:21","statements":[{"nodeType":"YulAssignment","src":"5036:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:21","type":""}],"src":"4994:60:21"},{"body":{"nodeType":"YulBlock","src":"5120:82:21","statements":[{"nodeType":"YulAssignment","src":"5130:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:21"},"nodeType":"YulFunctionCall","src":"5170:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:21"},"nodeType":"YulFunctionCall","src":"5161:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:21"},"nodeType":"YulFunctionCall","src":"5143:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:21","type":""}],"src":"5060:142:21"},{"body":{"nodeType":"YulBlock","src":"5255:28:21","statements":[{"nodeType":"YulAssignment","src":"5265:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:21","type":""}],"src":"5208:75:21"},{"body":{"nodeType":"YulBlock","src":"5365:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:21"},"nodeType":"YulFunctionCall","src":"5399:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:21"},"nodeType":"YulFunctionCall","src":"5488:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:21"},"nodeType":"YulFunctionCall","src":"5509:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:21"},"nodeType":"YulFunctionCall","src":"5460:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:21"},"nodeType":"YulFunctionCall","src":"5447:105:21"},"nodeType":"YulExpressionStatement","src":"5447:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:21","type":""}],"src":"5289:269:21"},{"body":{"nodeType":"YulBlock","src":"5613:24:21","statements":[{"nodeType":"YulAssignment","src":"5623:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:21","type":""}],"src":"5564:73:21"},{"body":{"nodeType":"YulBlock","src":"5696:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:21"},"nodeType":"YulFunctionCall","src":"5720:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:21"},"nodeType":"YulFunctionCall","src":"5761:65:21"},"nodeType":"YulExpressionStatement","src":"5761:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:21","type":""}],"src":"5643:189:21"},{"body":{"nodeType":"YulBlock","src":"5888:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:21"},"nodeType":"YulFunctionCall","src":"5969:39:21"},"nodeType":"YulExpressionStatement","src":"5969:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:21"},"nodeType":"YulFunctionCall","src":"5905:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:21","statements":[{"nodeType":"YulAssignment","src":"5922:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:21"},"nodeType":"YulFunctionCall","src":"5931:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:21","statements":[]},"src":"5898:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:21","type":""}],"src":"5838:186:21"},{"body":{"nodeType":"YulBlock","src":"6109:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:21"},"nodeType":"YulFunctionCall","src":"6165:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:21"},"nodeType":"YulFunctionCall","src":"6249:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:21"},"nodeType":"YulFunctionCall","src":"6235:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:21","statements":[{"nodeType":"YulAssignment","src":"6438:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:21"},"nodeType":"YulFunctionCall","src":"6417:18:21"},"nodeType":"YulIf","src":"6414:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:21"},"nodeType":"YulFunctionCall","src":"6532:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:21"},"nodeType":"YulFunctionCall","src":"6518:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:21"},"nodeType":"YulFunctionCall","src":"6476:80:21"},"nodeType":"YulExpressionStatement","src":"6476:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:21"},"nodeType":"YulFunctionCall","src":"6123:11:21"},"nodeType":"YulIf","src":"6120:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:21","type":""}],"src":"6030:543:21"},{"body":{"nodeType":"YulBlock","src":"6642:54:21","statements":[{"nodeType":"YulAssignment","src":"6652:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:21"},"nodeType":"YulFunctionCall","src":"6673:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:21","type":""}],"src":"6579:117:21"},{"body":{"nodeType":"YulBlock","src":"6753:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:21"},"nodeType":"YulFunctionCall","src":"6808:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:21"},"nodeType":"YulFunctionCall","src":"6823:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:21"},"nodeType":"YulFunctionCall","src":"6779:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:21"},"nodeType":"YulFunctionCall","src":"6775:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:21","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:21"},"nodeType":"YulFunctionCall","src":"6850:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:21","type":""}],"src":"6702:169:21"},{"body":{"nodeType":"YulBlock","src":"6957:214:21","statements":[{"nodeType":"YulAssignment","src":"7090:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:21"},"nodeType":"YulFunctionCall","src":"7098:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:21"}]},{"nodeType":"YulAssignment","src":"7136:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:21"},"nodeType":"YulFunctionCall","src":"7153:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:21"},"nodeType":"YulFunctionCall","src":"7144:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:21","type":""}],"src":"6876:295:21"},{"body":{"nodeType":"YulBlock","src":"7268:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:21"},"nodeType":"YulFunctionCall","src":"7293:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:21"},"nodeType":"YulFunctionCall","src":"7417:18:21"},"nodeType":"YulExpressionStatement","src":"7417:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:21"},"nodeType":"YulFunctionCall","src":"7384:30:21"},"nodeType":"YulIf","src":"7381:56:21"},{"nodeType":"YulVariableDeclaration","src":"7447:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:21"},"nodeType":"YulFunctionCall","src":"7487:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:21"},"nodeType":"YulFunctionCall","src":"7461:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:21"},"nodeType":"YulFunctionCall","src":"7546:67:21"},"nodeType":"YulExpressionStatement","src":"7546:67:21"},{"nodeType":"YulVariableDeclaration","src":"7623:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:21","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:21"},"nodeType":"YulFunctionCall","src":"7756:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:21"},"nodeType":"YulFunctionCall","src":"7744:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:21"},"nodeType":"YulFunctionCall","src":"7794:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:21"},"nodeType":"YulFunctionCall","src":"7951:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:21"},"nodeType":"YulFunctionCall","src":"7945:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:21"},"nodeType":"YulFunctionCall","src":"7930:42:21"},"nodeType":"YulExpressionStatement","src":"7930:42:21"},{"nodeType":"YulAssignment","src":"7989:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:21"},"nodeType":"YulFunctionCall","src":"7999:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:21"}]},{"nodeType":"YulAssignment","src":"8030:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:21"},"nodeType":"YulFunctionCall","src":"8043:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:21"},"nodeType":"YulFunctionCall","src":"7875:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:21","statements":[{"nodeType":"YulAssignment","src":"7892:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:21"},"nodeType":"YulFunctionCall","src":"7897:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:21","statements":[]},"src":"7867:208:21"},{"body":{"nodeType":"YulBlock","src":"8111:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:21"},"nodeType":"YulFunctionCall","src":"8152:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:21"},"nodeType":"YulFunctionCall","src":"8146:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:21"},"nodeType":"YulFunctionCall","src":"8234:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:21"},"nodeType":"YulFunctionCall","src":"8204:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:21"},"nodeType":"YulFunctionCall","src":"8189:64:21"},"nodeType":"YulExpressionStatement","src":"8189:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:21"},"nodeType":"YulFunctionCall","src":"8091:19:21"},"nodeType":"YulIf","src":"8088:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:21"},"nodeType":"YulFunctionCall","src":"8297:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:21"},"nodeType":"YulFunctionCall","src":"8293:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:21"},"nodeType":"YulFunctionCall","src":"8280:36:21"},"nodeType":"YulExpressionStatement","src":"8280:36:21"}]},"nodeType":"YulCase","src":"7708:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:21","statements":[{"nodeType":"YulAssignment","src":"8412:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:21"},"nodeType":"YulFunctionCall","src":"8427:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:21"},"nodeType":"YulFunctionCall","src":"8421:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:21"},"nodeType":"YulIf","src":"8384:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:21"},"nodeType":"YulFunctionCall","src":"8487:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:21"},"nodeType":"YulFunctionCall","src":"8474:81:21"},"nodeType":"YulExpressionStatement","src":"8474:81:21"}]},"nodeType":"YulCase","src":"8335:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:21"},"nodeType":"YulFunctionCall","src":"7685:14:21"},"nodeType":"YulSwitch","src":"7678:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:21","type":""}],"src":"7176:1395:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220619c4ffddc4f87a8ed18d5b89f17cfaaf232bed23549cde8a6ff534322a1dac864736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x9C4F REVERT 0xDC 0x4F DUP8 0xA8 0xED XOR 0xD5 0xB8 SWAP16 OR 0xCF 0xAA CALLCODE ORIGIN 0xBE 0xD2 CALLDATALOAD 0x49 0xCD 0xE8 0xA6 SELFDESTRUCT MSTORE8 NUMBER 0x22 LOG1 0xDA 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1532:11312:4:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:21;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_712":{"entryPoint":2679,"id":712,"parameterSlots":3,"returnSlots":0},"@_approve_647":{"entryPoint":1447,"id":647,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_701":{"entryPoint":2674,"id":701,"parameterSlots":3,"returnSlots":0},"@_msgSender_1770":{"entryPoint":1439,"id":1770,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_690":{"entryPoint":1904,"id":690,"parameterSlots":3,"returnSlots":0},"@_transfer_473":{"entryPoint":2044,"id":473,"parameterSlots":3,"returnSlots":0},"@allowance_268":{"entryPoint":1304,"id":268,"parameterSlots":2,"returnSlots":1},"@approve_293":{"entryPoint":776,"id":293,"parameterSlots":2,"returnSlots":1},"@balanceOf_225":{"entryPoint":932,"id":225,"parameterSlots":1,"returnSlots":1},"@decimals_201":{"entryPoint":868,"id":201,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_396":{"entryPoint":1150,"id":396,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_355":{"entryPoint":877,"id":355,"parameterSlots":2,"returnSlots":1},"@name_181":{"entryPoint":630,"id":181,"parameterSlots":0,"returnSlots":1},"@symbol_191":{"entryPoint":1004,"id":191,"parameterSlots":0,"returnSlots":1},"@totalSupply_211":{"entryPoint":811,"id":211,"parameterSlots":0,"returnSlots":1},"@transferFrom_326":{"entryPoint":821,"id":326,"parameterSlots":3,"returnSlots":1},"@transfer_250":{"entryPoint":1269,"id":250,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3898:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:21"},"nodeType":"YulFunctionCall","src":"3946:79:21"},"nodeType":"YulExpressionStatement","src":"3946:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:21"},"nodeType":"YulFunctionCall","src":"3915:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:21"},"nodeType":"YulFunctionCall","src":"3911:32:21"},"nodeType":"YulIf","src":"3908:119:21"},{"nodeType":"YulBlock","src":"4037:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:21"},"nodeType":"YulFunctionCall","src":"4112:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:21"},"nodeType":"YulFunctionCall","src":"4091:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:21"}]}]},{"nodeType":"YulBlock","src":"4164:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:21"},"nodeType":"YulFunctionCall","src":"4240:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:21"},"nodeType":"YulFunctionCall","src":"4219:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:21"}]}]},{"nodeType":"YulBlock","src":"4292:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:21"},"nodeType":"YulFunctionCall","src":"4347:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:21","type":""}],"src":"3798:619:21"},{"body":{"nodeType":"YulBlock","src":"4466:43:21","statements":[{"nodeType":"YulAssignment","src":"4476:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:21"},"nodeType":"YulFunctionCall","src":"4487:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:21","type":""}],"src":"4423:86:21"},{"body":{"nodeType":"YulBlock","src":"4576:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:21"},"nodeType":"YulFunctionCall","src":"4598:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:21"},"nodeType":"YulFunctionCall","src":"4586:35:21"},"nodeType":"YulExpressionStatement","src":"4586:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:21","type":""}],"src":"4515:112:21"},{"body":{"nodeType":"YulBlock","src":"4727:120:21","statements":[{"nodeType":"YulAssignment","src":"4737:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:21"},"nodeType":"YulFunctionCall","src":"4745:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:21"},"nodeType":"YulFunctionCall","src":"4822:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:21"},"nodeType":"YulFunctionCall","src":"4773:67:21"},"nodeType":"YulExpressionStatement","src":"4773:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:21","type":""}],"src":"4633:214:21"},{"body":{"nodeType":"YulBlock","src":"4919:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:21"},"nodeType":"YulFunctionCall","src":"4967:79:21"},"nodeType":"YulExpressionStatement","src":"4967:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:21"},"nodeType":"YulFunctionCall","src":"4936:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:21"},"nodeType":"YulFunctionCall","src":"4932:32:21"},"nodeType":"YulIf","src":"4929:119:21"},{"nodeType":"YulBlock","src":"5058:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:21"},"nodeType":"YulFunctionCall","src":"5133:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:21"},"nodeType":"YulFunctionCall","src":"5112:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:21","type":""}],"src":"4853:329:21"},{"body":{"nodeType":"YulBlock","src":"5271:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:21"},"nodeType":"YulFunctionCall","src":"5319:79:21"},"nodeType":"YulExpressionStatement","src":"5319:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:21"},"nodeType":"YulFunctionCall","src":"5288:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:21"},"nodeType":"YulFunctionCall","src":"5284:32:21"},"nodeType":"YulIf","src":"5281:119:21"},{"nodeType":"YulBlock","src":"5410:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:21"},"nodeType":"YulFunctionCall","src":"5485:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:21"},"nodeType":"YulFunctionCall","src":"5464:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:21"}]}]},{"nodeType":"YulBlock","src":"5537:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:21"},"nodeType":"YulFunctionCall","src":"5613:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:21"},"nodeType":"YulFunctionCall","src":"5592:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:21","type":""}],"src":"5188:474:21"},{"body":{"nodeType":"YulBlock","src":"5696:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:21"},"nodeType":"YulFunctionCall","src":"5706:88:21"},"nodeType":"YulExpressionStatement","src":"5706:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:21"},"nodeType":"YulFunctionCall","src":"5803:15:21"},"nodeType":"YulExpressionStatement","src":"5803:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:21"},"nodeType":"YulFunctionCall","src":"5827:15:21"},"nodeType":"YulExpressionStatement","src":"5827:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:21"},{"body":{"nodeType":"YulBlock","src":"5905:269:21","statements":[{"nodeType":"YulAssignment","src":"5915:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:21"},"nodeType":"YulFunctionCall","src":"5925:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:21"},"nodeType":"YulFunctionCall","src":"5972:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:21","statements":[{"nodeType":"YulAssignment","src":"6037:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:21"},"nodeType":"YulFunctionCall","src":"6047:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:21"},"nodeType":"YulFunctionCall","src":"5996:26:21"},"nodeType":"YulIf","src":"5993:81:21"},{"body":{"nodeType":"YulBlock","src":"6126:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:21"},"nodeType":"YulFunctionCall","src":"6140:18:21"},"nodeType":"YulExpressionStatement","src":"6140:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:21"},"nodeType":"YulFunctionCall","src":"6110:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:21"},"nodeType":"YulFunctionCall","src":"6087:38:21"},"nodeType":"YulIf","src":"6084:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:21","type":""}],"src":"5854:320:21"},{"body":{"nodeType":"YulBlock","src":"6208:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:21"},"nodeType":"YulFunctionCall","src":"6218:88:21"},"nodeType":"YulExpressionStatement","src":"6218:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:21"},"nodeType":"YulFunctionCall","src":"6315:15:21"},"nodeType":"YulExpressionStatement","src":"6315:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:21"},"nodeType":"YulFunctionCall","src":"6339:15:21"},"nodeType":"YulExpressionStatement","src":"6339:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:21"},{"body":{"nodeType":"YulBlock","src":"6410:147:21","statements":[{"nodeType":"YulAssignment","src":"6420:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:21"},"nodeType":"YulFunctionCall","src":"6425:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:21"}]},{"nodeType":"YulAssignment","src":"6454:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:21"},"nodeType":"YulFunctionCall","src":"6459:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:21"}]},{"nodeType":"YulAssignment","src":"6488:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:21"},"nodeType":"YulFunctionCall","src":"6495:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:21"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:21"},"nodeType":"YulFunctionCall","src":"6530:18:21"},"nodeType":"YulExpressionStatement","src":"6530:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:21"},"nodeType":"YulFunctionCall","src":"6517:10:21"},"nodeType":"YulIf","src":"6514:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:21","type":""}],"src":"6366:191:21"},{"body":{"nodeType":"YulBlock","src":"6669:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:21"},"nodeType":"YulFunctionCall","src":"6687:14:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:21"},"nodeType":"YulFunctionCall","src":"6680:58:21"},"nodeType":"YulExpressionStatement","src":"6680:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:21"},"nodeType":"YulFunctionCall","src":"6755:15:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:21"},"nodeType":"YulFunctionCall","src":"6748:32:21"},"nodeType":"YulExpressionStatement","src":"6748:32:21"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:21","type":""}],"src":"6563:224:21"},{"body":{"nodeType":"YulBlock","src":"6939:220:21","statements":[{"nodeType":"YulAssignment","src":"6949:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:21"},"nodeType":"YulFunctionCall","src":"6956:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:21"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:21"},"nodeType":"YulFunctionCall","src":"7032:93:21"},"nodeType":"YulExpressionStatement","src":"7032:93:21"},{"nodeType":"YulAssignment","src":"7134:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:21"},"nodeType":"YulFunctionCall","src":"7141:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:21"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:21","type":""}],"src":"6793:366:21"},{"body":{"nodeType":"YulBlock","src":"7336:248:21","statements":[{"nodeType":"YulAssignment","src":"7346:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:21"},"nodeType":"YulFunctionCall","src":"7354:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:21"},"nodeType":"YulFunctionCall","src":"7389:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:21"},"nodeType":"YulFunctionCall","src":"7408:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:21"},"nodeType":"YulFunctionCall","src":"7382:47:21"},"nodeType":"YulExpressionStatement","src":"7382:47:21"},{"nodeType":"YulAssignment","src":"7438:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:21"},"nodeType":"YulFunctionCall","src":"7446:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:21","type":""}],"src":"7165:419:21"},{"body":{"nodeType":"YulBlock","src":"7696:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:21"},"nodeType":"YulFunctionCall","src":"7714:14:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:21"},"nodeType":"YulFunctionCall","src":"7707:58:21"},"nodeType":"YulExpressionStatement","src":"7707:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:21"},"nodeType":"YulFunctionCall","src":"7782:15:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:21"},"nodeType":"YulFunctionCall","src":"7775:31:21"},"nodeType":"YulExpressionStatement","src":"7775:31:21"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:21","type":""}],"src":"7590:223:21"},{"body":{"nodeType":"YulBlock","src":"7965:220:21","statements":[{"nodeType":"YulAssignment","src":"7975:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:21"},"nodeType":"YulFunctionCall","src":"7982:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:21"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:21"},"nodeType":"YulFunctionCall","src":"8058:93:21"},"nodeType":"YulExpressionStatement","src":"8058:93:21"},{"nodeType":"YulAssignment","src":"8160:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:21"},"nodeType":"YulFunctionCall","src":"8167:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:21"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:21","type":""}],"src":"7819:366:21"},{"body":{"nodeType":"YulBlock","src":"8362:248:21","statements":[{"nodeType":"YulAssignment","src":"8372:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:21"},"nodeType":"YulFunctionCall","src":"8380:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:21"},"nodeType":"YulFunctionCall","src":"8415:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:21"},"nodeType":"YulFunctionCall","src":"8434:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:21"},"nodeType":"YulFunctionCall","src":"8408:47:21"},"nodeType":"YulExpressionStatement","src":"8408:47:21"},{"nodeType":"YulAssignment","src":"8464:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:21"},"nodeType":"YulFunctionCall","src":"8472:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:21","type":""}],"src":"8191:419:21"},{"body":{"nodeType":"YulBlock","src":"8722:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:21"},"nodeType":"YulFunctionCall","src":"8740:14:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:21"},"nodeType":"YulFunctionCall","src":"8733:58:21"},"nodeType":"YulExpressionStatement","src":"8733:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:21"},"nodeType":"YulFunctionCall","src":"8808:15:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:21"},"nodeType":"YulFunctionCall","src":"8801:29:21"},"nodeType":"YulExpressionStatement","src":"8801:29:21"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:21","type":""}],"src":"8616:221:21"},{"body":{"nodeType":"YulBlock","src":"8989:220:21","statements":[{"nodeType":"YulAssignment","src":"8999:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:21"},"nodeType":"YulFunctionCall","src":"9006:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:21"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:21"},"nodeType":"YulFunctionCall","src":"9082:93:21"},"nodeType":"YulExpressionStatement","src":"9082:93:21"},{"nodeType":"YulAssignment","src":"9184:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:21"},"nodeType":"YulFunctionCall","src":"9191:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:21"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:21","type":""}],"src":"8843:366:21"},{"body":{"nodeType":"YulBlock","src":"9386:248:21","statements":[{"nodeType":"YulAssignment","src":"9396:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:21"},"nodeType":"YulFunctionCall","src":"9404:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:21"},"nodeType":"YulFunctionCall","src":"9439:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:21"},"nodeType":"YulFunctionCall","src":"9458:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:21"},"nodeType":"YulFunctionCall","src":"9432:47:21"},"nodeType":"YulExpressionStatement","src":"9432:47:21"},{"nodeType":"YulAssignment","src":"9488:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:21"},"nodeType":"YulFunctionCall","src":"9496:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:21","type":""}],"src":"9215:419:21"},{"body":{"nodeType":"YulBlock","src":"9746:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:21"},"nodeType":"YulFunctionCall","src":"9764:14:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:21"},"nodeType":"YulFunctionCall","src":"9757:55:21"},"nodeType":"YulExpressionStatement","src":"9757:55:21"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:21","type":""}],"src":"9640:179:21"},{"body":{"nodeType":"YulBlock","src":"9971:220:21","statements":[{"nodeType":"YulAssignment","src":"9981:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:21"},"nodeType":"YulFunctionCall","src":"9988:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:21"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:21"},"nodeType":"YulFunctionCall","src":"10064:93:21"},"nodeType":"YulExpressionStatement","src":"10064:93:21"},{"nodeType":"YulAssignment","src":"10166:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:21"},"nodeType":"YulFunctionCall","src":"10173:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:21"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:21","type":""}],"src":"9825:366:21"},{"body":{"nodeType":"YulBlock","src":"10368:248:21","statements":[{"nodeType":"YulAssignment","src":"10378:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:21"},"nodeType":"YulFunctionCall","src":"10386:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:21"},"nodeType":"YulFunctionCall","src":"10421:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:21"},"nodeType":"YulFunctionCall","src":"10440:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:21"},"nodeType":"YulFunctionCall","src":"10414:47:21"},"nodeType":"YulExpressionStatement","src":"10414:47:21"},{"nodeType":"YulAssignment","src":"10470:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:21"},"nodeType":"YulFunctionCall","src":"10478:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:21","type":""}],"src":"10197:419:21"},{"body":{"nodeType":"YulBlock","src":"10728:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:21"},"nodeType":"YulFunctionCall","src":"10746:14:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:21"},"nodeType":"YulFunctionCall","src":"10739:58:21"},"nodeType":"YulExpressionStatement","src":"10739:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:21"},"nodeType":"YulFunctionCall","src":"10814:15:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:21"},"nodeType":"YulFunctionCall","src":"10807:32:21"},"nodeType":"YulExpressionStatement","src":"10807:32:21"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:21","type":""}],"src":"10622:224:21"},{"body":{"nodeType":"YulBlock","src":"10998:220:21","statements":[{"nodeType":"YulAssignment","src":"11008:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:21"},"nodeType":"YulFunctionCall","src":"11015:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:21"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:21"},"nodeType":"YulFunctionCall","src":"11091:93:21"},"nodeType":"YulExpressionStatement","src":"11091:93:21"},{"nodeType":"YulAssignment","src":"11193:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:21"},"nodeType":"YulFunctionCall","src":"11200:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:21"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:21","type":""}],"src":"10852:366:21"},{"body":{"nodeType":"YulBlock","src":"11395:248:21","statements":[{"nodeType":"YulAssignment","src":"11405:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:21"},"nodeType":"YulFunctionCall","src":"11413:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:21"},"nodeType":"YulFunctionCall","src":"11448:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:21"},"nodeType":"YulFunctionCall","src":"11467:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:21"},"nodeType":"YulFunctionCall","src":"11441:47:21"},"nodeType":"YulExpressionStatement","src":"11441:47:21"},{"nodeType":"YulAssignment","src":"11497:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:21"},"nodeType":"YulFunctionCall","src":"11505:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:21","type":""}],"src":"11224:419:21"},{"body":{"nodeType":"YulBlock","src":"11755:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:21"},"nodeType":"YulFunctionCall","src":"11773:14:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:21"},"nodeType":"YulFunctionCall","src":"11766:58:21"},"nodeType":"YulExpressionStatement","src":"11766:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:21"},"nodeType":"YulFunctionCall","src":"11841:15:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:21"},"nodeType":"YulFunctionCall","src":"11834:30:21"},"nodeType":"YulExpressionStatement","src":"11834:30:21"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:21","type":""}],"src":"11649:222:21"},{"body":{"nodeType":"YulBlock","src":"12023:220:21","statements":[{"nodeType":"YulAssignment","src":"12033:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:21"},"nodeType":"YulFunctionCall","src":"12040:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:21"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:21"},"nodeType":"YulFunctionCall","src":"12116:93:21"},"nodeType":"YulExpressionStatement","src":"12116:93:21"},{"nodeType":"YulAssignment","src":"12218:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:21"},"nodeType":"YulFunctionCall","src":"12225:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:21"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:21","type":""}],"src":"11877:366:21"},{"body":{"nodeType":"YulBlock","src":"12420:248:21","statements":[{"nodeType":"YulAssignment","src":"12430:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:21"},"nodeType":"YulFunctionCall","src":"12438:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:21"},"nodeType":"YulFunctionCall","src":"12473:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:21"},"nodeType":"YulFunctionCall","src":"12492:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:21"},"nodeType":"YulFunctionCall","src":"12466:47:21"},"nodeType":"YulExpressionStatement","src":"12466:47:21"},{"nodeType":"YulAssignment","src":"12522:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:21"},"nodeType":"YulFunctionCall","src":"12530:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:21","type":""}],"src":"12249:419:21"},{"body":{"nodeType":"YulBlock","src":"12780:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:21"},"nodeType":"YulFunctionCall","src":"12798:14:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:21"},"nodeType":"YulFunctionCall","src":"12791:58:21"},"nodeType":"YulExpressionStatement","src":"12791:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:21"},"nodeType":"YulFunctionCall","src":"12866:15:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:21"},"nodeType":"YulFunctionCall","src":"12859:33:21"},"nodeType":"YulExpressionStatement","src":"12859:33:21"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:21","type":""}],"src":"12674:225:21"},{"body":{"nodeType":"YulBlock","src":"13051:220:21","statements":[{"nodeType":"YulAssignment","src":"13061:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:21"},"nodeType":"YulFunctionCall","src":"13068:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:21"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:21"},"nodeType":"YulFunctionCall","src":"13144:93:21"},"nodeType":"YulExpressionStatement","src":"13144:93:21"},{"nodeType":"YulAssignment","src":"13246:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:21"},"nodeType":"YulFunctionCall","src":"13253:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:21"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:21","type":""}],"src":"12905:366:21"},{"body":{"nodeType":"YulBlock","src":"13448:248:21","statements":[{"nodeType":"YulAssignment","src":"13458:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:21"},"nodeType":"YulFunctionCall","src":"13466:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:21"},"nodeType":"YulFunctionCall","src":"13501:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:21"},"nodeType":"YulFunctionCall","src":"13520:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:21"},"nodeType":"YulFunctionCall","src":"13494:47:21"},"nodeType":"YulExpressionStatement","src":"13494:47:21"},{"nodeType":"YulAssignment","src":"13550:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:21"},"nodeType":"YulFunctionCall","src":"13558:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:21","type":""}],"src":"13277:419:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220619c4ffddc4f87a8ed18d5b89f17cfaaf232bed23549cde8a6ff534322a1dac864736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x9C4F REVERT 0xDC 0x4F DUP8 0xA8 0xED XOR 0xD5 0xB8 SWAP16 OR 0xCF 0xAA CALLCODE ORIGIN 0xBE 0xD2 CALLDATALOAD 0x49 0xCD 0xE8 0xA6 SELFDESTRUCT MSTORE8 NUMBER 0x22 LOG1 0xDA 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1532:11312:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;10457:340:4:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d62dfdcaba135cbc26190bb2cbc792be170c4c531659147f0dc3c72a79058d3964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x2D REVERT 0xCA 0xBA SGT 0x5C 0xBC 0x26 NOT SIGNEXTEND 0xB2 0xCB 0xC7 SWAP3 0xBE OR 0xC 0x4C MSTORE8 AND MSIZE EQ PUSH32 0xDC3C72A79058D3964736F6C6343000812003300000000000000000000000000 ","sourceMap":"424:971:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d62dfdcaba135cbc26190bb2cbc792be170c4c531659147f0dc3c72a79058d3964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x2D REVERT 0xCA 0xBA SGT 0x5C 0xBC 0x26 NOT SIGNEXTEND 0xB2 0xCB 0xC7 SWAP3 0xBE OR 0xC 0x4C MSTORE8 AND MSIZE EQ PUSH32 0xDC3C72A79058D3964736F6C6343000812003300000000000000000000000000 ","sourceMap":"424:971:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122075dfd4a271e9f24704ce847e64e3ad55b2fc42a0c50e815cf43726f38bb683ad64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xDFD4A271E9F24704CE847E64E3AD55B2FC42A0C50E81 0x5C DELEGATECALL CALLDATACOPY 0x26 RETURN DUP12 0xB6 DUP4 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1235:3050:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122075dfd4a271e9f24704ce847e64e3ad55b2fc42a0c50e815cf43726f38bb683ad64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xDFD4A271E9F24704CE847E64E3AD55B2FC42A0C50E81 0x5C DELEGATECALL CALLDATACOPY 0x26 RETURN DUP12 0xB6 DUP4 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1235:3050:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206fc46a07f2d2567fe17f1cb686f3a204b90f6c99ddf2be00b5fbb3ae579b4cc364736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xC46A07F2D2567FE17F1CB686F3A204B9 0xF PUSH13 0x99DDF2BE00B5FBB3AE579B4CC3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1420:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206fc46a07f2d2567fe17f1cb686f3a204b90f6c99ddf2be00b5fbb3ae579b4cc364736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xC46A07F2D2567FE17F1CB686F3A204B9 0xF PUSH13 0x99DDF2BE00B5FBB3AE579B4CC3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1420:2685:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH18 0x9535D4F0927B344373336CD15F417C0ACBE2 0xB5 DUP5 0x4E CREATE 0x22 PUSH8 0xA9D7179C60536473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"369:8761:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH18 0x9535D4F0927B344373336CD15F417C0ACBE2 0xB5 DUP5 0x4E CREATE 0x22 PUSH8 0xA9D7179C60536473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"369:8761:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ","sourceMap":"202:12582:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ","sourceMap":"202:12582:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207cb00a1f8e71130535d0db9059c399fc5e8209de3d146fdef3ab754ea815b15a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB00A1F8E71130535D0DB9059C399FC5E8209DE3D146FDEF3AB754EA815 0xB1 GAS PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"927:34153:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207cb00a1f8e71130535d0db9059c399fc5e8209de3d146fdef3ab754ea815b15a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB00A1F8E71130535D0DB9059C399FC5E8209DE3D146FDEF3AB754EA815 0xB1 GAS PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"927:34153:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ","sourceMap":"215:1047:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ","sourceMap":"215:1047:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/GovernanceToken.sol":{"GovernanceToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_171":{"entryPoint":null,"id":171,"parameterSlots":2,"returnSlots":0},"@_2868":{"entryPoint":null,"id":2868,"parameterSlots":2,"returnSlots":0},"@_5516":{"entryPoint":null,"id":5516,"parameterSlots":0,"returnSlots":0},"@_833":{"entryPoint":null,"id":833,"parameterSlots":1,"returnSlots":0},"@_add_1667":{"entryPoint":1434,"id":1667,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1442":{"entryPoint":2543,"id":1442,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_5536":{"entryPoint":2268,"id":5536,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_712":{"entryPoint":2711,"id":712,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_701":{"entryPoint":2263,"id":701,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2915":{"entryPoint":594,"id":2915,"parameterSlots":0,"returnSlots":1},"@_maxSupply_1357":{"entryPoint":1388,"id":1357,"parameterSlots":0,"returnSlots":1},"@_mint_1389":{"entryPoint":833,"id":1389,"parameterSlots":2,"returnSlots":0},"@_mint_530":{"entryPoint":1023,"id":530,"parameterSlots":2,"returnSlots":0},"@_mint_5553":{"entryPoint":687,"id":5553,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1552":{"entryPoint":2821,"id":1552,"parameterSlots":3,"returnSlots":0},"@_subtract_1681":{"entryPoint":3368,"id":1681,"parameterSlots":2,"returnSlots":1},"@_unsafeAccess_1696":{"entryPoint":2297,"id":1696,"parameterSlots":2,"returnSlots":1},"@_writeCheckpoint_1653":{"entryPoint":1458,"id":1653,"parameterSlots":3,"returnSlots":2},"@clock_1013":{"entryPoint":2318,"id":1013,"parameterSlots":0,"returnSlots":1},"@delegates_1081":{"entryPoint":2716,"id":1081,"parameterSlots":1,"returnSlots":1},"@getStringSlot_2157":{"entryPoint":823,"id":2157,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2011":{"entryPoint":501,"id":2011,"parameterSlots":2,"returnSlots":1},"@toShortString_1913":{"entryPoint":714,"id":1913,"parameterSlots":1,"returnSlots":1},"@toUint224_3948":{"entryPoint":2347,"id":3948,"parameterSlots":1,"returnSlots":1},"@toUint32_4548":{"entryPoint":2457,"id":4548,"parameterSlots":1,"returnSlots":1},"@toUint48_4498":{"entryPoint":2623,"id":4498,"parameterSlots":1,"returnSlots":1},"@totalSupply_211":{"entryPoint":1424,"id":211,"parameterSlots":0,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4353,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4267,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":5588,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":4883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":5284,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":5436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":4997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":4370,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5627,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4922,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5661,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":4653,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3550,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4642,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3392,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4463,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5117,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5706,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3871,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4333,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4257,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3686,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3832,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":4692,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":3706,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4026,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4480,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3571,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3497,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3996,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3964,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5070,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3450,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3403,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3746,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":4669,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":4524,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3587,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3951,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3804,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":5509,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":4804,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":5205,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":5357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":4956,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3600,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3756,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3799,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15069:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"140:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:21"},"nodeType":"YulFunctionCall","src":"150:88:21"},"nodeType":"YulExpressionStatement","src":"150:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:21"},"nodeType":"YulFunctionCall","src":"247:15:21"},"nodeType":"YulExpressionStatement","src":"247:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:21"},"nodeType":"YulFunctionCall","src":"271:15:21"},"nodeType":"YulExpressionStatement","src":"271:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:21"},{"body":{"nodeType":"YulBlock","src":"326:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:21"},"nodeType":"YulFunctionCall","src":"336:88:21"},"nodeType":"YulExpressionStatement","src":"336:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:21"},"nodeType":"YulFunctionCall","src":"433:15:21"},"nodeType":"YulExpressionStatement","src":"433:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:21"},"nodeType":"YulFunctionCall","src":"457:15:21"},"nodeType":"YulExpressionStatement","src":"457:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:21"},{"body":{"nodeType":"YulBlock","src":"535:269:21","statements":[{"nodeType":"YulAssignment","src":"545:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:21"},"nodeType":"YulFunctionCall","src":"555:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:21"},"nodeType":"YulFunctionCall","src":"602:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:21","statements":[{"nodeType":"YulAssignment","src":"667:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:21"},"nodeType":"YulFunctionCall","src":"677:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:21"},"nodeType":"YulFunctionCall","src":"626:26:21"},"nodeType":"YulIf","src":"623:81:21"},{"body":{"nodeType":"YulBlock","src":"756:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:21"},"nodeType":"YulFunctionCall","src":"770:18:21"},"nodeType":"YulExpressionStatement","src":"770:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:21"},"nodeType":"YulFunctionCall","src":"740:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:21"},"nodeType":"YulFunctionCall","src":"717:38:21"},"nodeType":"YulIf","src":"714:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:21","type":""}],"src":"484:320:21"},{"body":{"nodeType":"YulBlock","src":"864:87:21","statements":[{"nodeType":"YulAssignment","src":"874:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:21"},"nodeType":"YulFunctionCall","src":"895:14:21"},"nodeType":"YulExpressionStatement","src":"895:14:21"},{"nodeType":"YulAssignment","src":"918:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:21"},"nodeType":"YulFunctionCall","src":"926:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:21","type":""}],"src":"810:141:21"},{"body":{"nodeType":"YulBlock","src":"1001:49:21","statements":[{"nodeType":"YulAssignment","src":"1011:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:21"},"nodeType":"YulFunctionCall","src":"1025:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:21"},"nodeType":"YulFunctionCall","src":"1021:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:21","type":""}],"src":"957:93:21"},{"body":{"nodeType":"YulBlock","src":"1109:54:21","statements":[{"nodeType":"YulAssignment","src":"1119:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:21"},"nodeType":"YulFunctionCall","src":"1140:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:21","type":""}],"src":"1056:107:21"},{"body":{"nodeType":"YulBlock","src":"1245:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:21"},"nodeType":"YulFunctionCall","src":"1272:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:21"},"nodeType":"YulFunctionCall","src":"1311:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:21","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:21"},"nodeType":"YulFunctionCall","src":"1429:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:21"}]},{"nodeType":"YulAssignment","src":"1477:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:21"},"nodeType":"YulFunctionCall","src":"1497:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:21"},"nodeType":"YulFunctionCall","src":"1486:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:21"}]},{"nodeType":"YulAssignment","src":"1516:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:21"},"nodeType":"YulFunctionCall","src":"1536:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:21"},"nodeType":"YulFunctionCall","src":"1526:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:21","type":""}],"src":"1169:393:21"},{"body":{"nodeType":"YulBlock","src":"1613:32:21","statements":[{"nodeType":"YulAssignment","src":"1623:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:21","type":""}],"src":"1568:77:21"},{"body":{"nodeType":"YulBlock","src":"1683:28:21","statements":[{"nodeType":"YulAssignment","src":"1693:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:21","type":""}],"src":"1651:60:21"},{"body":{"nodeType":"YulBlock","src":"1777:82:21","statements":[{"nodeType":"YulAssignment","src":"1787:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:21"},"nodeType":"YulFunctionCall","src":"1827:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:21"},"nodeType":"YulFunctionCall","src":"1818:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:21"},"nodeType":"YulFunctionCall","src":"1800:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:21","type":""}],"src":"1717:142:21"},{"body":{"nodeType":"YulBlock","src":"1912:28:21","statements":[{"nodeType":"YulAssignment","src":"1922:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:21","type":""}],"src":"1865:75:21"},{"body":{"nodeType":"YulBlock","src":"2022:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:21"},"nodeType":"YulFunctionCall","src":"2056:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:21"},"nodeType":"YulFunctionCall","src":"2145:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:21"},"nodeType":"YulFunctionCall","src":"2166:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:21"},"nodeType":"YulFunctionCall","src":"2117:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:21"},"nodeType":"YulFunctionCall","src":"2104:105:21"},"nodeType":"YulExpressionStatement","src":"2104:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:21","type":""}],"src":"1946:269:21"},{"body":{"nodeType":"YulBlock","src":"2270:24:21","statements":[{"nodeType":"YulAssignment","src":"2280:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:21","type":""}],"src":"2221:73:21"},{"body":{"nodeType":"YulBlock","src":"2353:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:21"},"nodeType":"YulFunctionCall","src":"2377:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:21"},"nodeType":"YulFunctionCall","src":"2418:65:21"},"nodeType":"YulExpressionStatement","src":"2418:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:21","type":""}],"src":"2300:189:21"},{"body":{"nodeType":"YulBlock","src":"2545:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:21"},"nodeType":"YulFunctionCall","src":"2626:39:21"},"nodeType":"YulExpressionStatement","src":"2626:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:21"},"nodeType":"YulFunctionCall","src":"2562:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:21","statements":[{"nodeType":"YulAssignment","src":"2579:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:21"},"nodeType":"YulFunctionCall","src":"2588:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:21","statements":[]},"src":"2555:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:21","type":""}],"src":"2495:186:21"},{"body":{"nodeType":"YulBlock","src":"2766:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:21"},"nodeType":"YulFunctionCall","src":"2822:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:21"},"nodeType":"YulFunctionCall","src":"2906:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:21"},"nodeType":"YulFunctionCall","src":"2892:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:21","statements":[{"nodeType":"YulAssignment","src":"3095:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:21"},"nodeType":"YulFunctionCall","src":"3074:18:21"},"nodeType":"YulIf","src":"3071:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:21"},"nodeType":"YulFunctionCall","src":"3189:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:21"},"nodeType":"YulFunctionCall","src":"3175:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:21"},"nodeType":"YulFunctionCall","src":"3133:80:21"},"nodeType":"YulExpressionStatement","src":"3133:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:21"},"nodeType":"YulFunctionCall","src":"2780:11:21"},"nodeType":"YulIf","src":"2777:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:21","type":""}],"src":"2687:543:21"},{"body":{"nodeType":"YulBlock","src":"3299:54:21","statements":[{"nodeType":"YulAssignment","src":"3309:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:21"},"nodeType":"YulFunctionCall","src":"3330:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:21","type":""}],"src":"3236:117:21"},{"body":{"nodeType":"YulBlock","src":"3410:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:21"},"nodeType":"YulFunctionCall","src":"3465:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:21"},"nodeType":"YulFunctionCall","src":"3480:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:21"},"nodeType":"YulFunctionCall","src":"3436:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:21"},"nodeType":"YulFunctionCall","src":"3432:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:21","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:21"},"nodeType":"YulFunctionCall","src":"3507:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:21","type":""}],"src":"3359:169:21"},{"body":{"nodeType":"YulBlock","src":"3614:214:21","statements":[{"nodeType":"YulAssignment","src":"3747:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:21"},"nodeType":"YulFunctionCall","src":"3755:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:21"}]},{"nodeType":"YulAssignment","src":"3793:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:21"},"nodeType":"YulFunctionCall","src":"3810:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:21"},"nodeType":"YulFunctionCall","src":"3801:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:21","type":""}],"src":"3533:295:21"},{"body":{"nodeType":"YulBlock","src":"3925:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:21"},"nodeType":"YulFunctionCall","src":"3950:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:21"},"nodeType":"YulFunctionCall","src":"4074:18:21"},"nodeType":"YulExpressionStatement","src":"4074:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:21"},"nodeType":"YulFunctionCall","src":"4041:30:21"},"nodeType":"YulIf","src":"4038:56:21"},{"nodeType":"YulVariableDeclaration","src":"4104:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:21"},"nodeType":"YulFunctionCall","src":"4144:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:21"},"nodeType":"YulFunctionCall","src":"4118:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:21"},"nodeType":"YulFunctionCall","src":"4203:67:21"},"nodeType":"YulExpressionStatement","src":"4203:67:21"},{"nodeType":"YulVariableDeclaration","src":"4280:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:21","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:21"},"nodeType":"YulFunctionCall","src":"4413:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:21"},"nodeType":"YulFunctionCall","src":"4401:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:21"},"nodeType":"YulFunctionCall","src":"4451:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:21"},"nodeType":"YulFunctionCall","src":"4608:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:21"},"nodeType":"YulFunctionCall","src":"4602:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:21"},"nodeType":"YulFunctionCall","src":"4587:42:21"},"nodeType":"YulExpressionStatement","src":"4587:42:21"},{"nodeType":"YulAssignment","src":"4646:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:21"},"nodeType":"YulFunctionCall","src":"4656:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:21"}]},{"nodeType":"YulAssignment","src":"4687:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:21"},"nodeType":"YulFunctionCall","src":"4700:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:21"},"nodeType":"YulFunctionCall","src":"4532:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:21","statements":[{"nodeType":"YulAssignment","src":"4549:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:21"},"nodeType":"YulFunctionCall","src":"4554:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:21","statements":[]},"src":"4524:208:21"},{"body":{"nodeType":"YulBlock","src":"4768:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:21"},"nodeType":"YulFunctionCall","src":"4809:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:21"},"nodeType":"YulFunctionCall","src":"4803:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:21"},"nodeType":"YulFunctionCall","src":"4891:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:21"},"nodeType":"YulFunctionCall","src":"4861:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:21"},"nodeType":"YulFunctionCall","src":"4846:64:21"},"nodeType":"YulExpressionStatement","src":"4846:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:21"},"nodeType":"YulFunctionCall","src":"4748:19:21"},"nodeType":"YulIf","src":"4745:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:21"},"nodeType":"YulFunctionCall","src":"4954:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:21"},"nodeType":"YulFunctionCall","src":"4950:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:21"},"nodeType":"YulFunctionCall","src":"4937:36:21"},"nodeType":"YulExpressionStatement","src":"4937:36:21"}]},"nodeType":"YulCase","src":"4365:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:21","statements":[{"nodeType":"YulAssignment","src":"5069:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:21"},"nodeType":"YulFunctionCall","src":"5084:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:21"},"nodeType":"YulFunctionCall","src":"5078:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:21"},"nodeType":"YulIf","src":"5041:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:21"},"nodeType":"YulFunctionCall","src":"5144:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:21"},"nodeType":"YulFunctionCall","src":"5131:81:21"},"nodeType":"YulExpressionStatement","src":"5131:81:21"}]},"nodeType":"YulCase","src":"4992:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:21"},"nodeType":"YulFunctionCall","src":"4342:14:21"},"nodeType":"YulSwitch","src":"4335:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:21","type":""}],"src":"3833:1395:21"},{"body":{"nodeType":"YulBlock","src":"5279:32:21","statements":[{"nodeType":"YulAssignment","src":"5289:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5300:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:21","type":""}],"src":"5234:77:21"},{"body":{"nodeType":"YulBlock","src":"5382:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5399:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5422:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5404:17:21"},"nodeType":"YulFunctionCall","src":"5404:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:21"},"nodeType":"YulFunctionCall","src":"5392:37:21"},"nodeType":"YulExpressionStatement","src":"5392:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5370:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5377:3:21","type":""}],"src":"5317:118:21"},{"body":{"nodeType":"YulBlock","src":"5506:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5523:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5546:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5528:17:21"},"nodeType":"YulFunctionCall","src":"5528:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5516:6:21"},"nodeType":"YulFunctionCall","src":"5516:37:21"},"nodeType":"YulExpressionStatement","src":"5516:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5494:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5501:3:21","type":""}],"src":"5441:118:21"},{"body":{"nodeType":"YulBlock","src":"5610:81:21","statements":[{"nodeType":"YulAssignment","src":"5620:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5635:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5642:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:21"},"nodeType":"YulFunctionCall","src":"5631:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5620:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5592:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5602:7:21","type":""}],"src":"5565:126:21"},{"body":{"nodeType":"YulBlock","src":"5742:51:21","statements":[{"nodeType":"YulAssignment","src":"5752:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5781:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5763:17:21"},"nodeType":"YulFunctionCall","src":"5763:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5752:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5734:7:21","type":""}],"src":"5697:96:21"},{"body":{"nodeType":"YulBlock","src":"5864:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5881:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5904:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5886:17:21"},"nodeType":"YulFunctionCall","src":"5886:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5874:6:21"},"nodeType":"YulFunctionCall","src":"5874:37:21"},"nodeType":"YulExpressionStatement","src":"5874:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5852:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5859:3:21","type":""}],"src":"5799:118:21"},{"body":{"nodeType":"YulBlock","src":"6133:454:21","statements":[{"nodeType":"YulAssignment","src":"6143:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6155:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6166:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6151:3:21"},"nodeType":"YulFunctionCall","src":"6151:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6143:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6224:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6248:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:21"},"nodeType":"YulFunctionCall","src":"6233:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6180:43:21"},"nodeType":"YulFunctionCall","src":"6180:71:21"},"nodeType":"YulExpressionStatement","src":"6180:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6305:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6318:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6329:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:21"},"nodeType":"YulFunctionCall","src":"6314:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6261:43:21"},"nodeType":"YulFunctionCall","src":"6261:72:21"},"nodeType":"YulExpressionStatement","src":"6261:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6387:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:21"},"nodeType":"YulFunctionCall","src":"6396:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6343:43:21"},"nodeType":"YulFunctionCall","src":"6343:72:21"},"nodeType":"YulExpressionStatement","src":"6343:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6469:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:21"},"nodeType":"YulFunctionCall","src":"6478:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6425:43:21"},"nodeType":"YulFunctionCall","src":"6425:72:21"},"nodeType":"YulExpressionStatement","src":"6425:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6551:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6575:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:21"},"nodeType":"YulFunctionCall","src":"6560:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6507:43:21"},"nodeType":"YulFunctionCall","src":"6507:73:21"},"nodeType":"YulExpressionStatement","src":"6507:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6085:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6093:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6101:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6109:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6117:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6128:4:21","type":""}],"src":"5923:664:21"},{"body":{"nodeType":"YulBlock","src":"6689:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6706:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6711:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:21"},"nodeType":"YulFunctionCall","src":"6699:19:21"},"nodeType":"YulExpressionStatement","src":"6699:19:21"},{"nodeType":"YulAssignment","src":"6727:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6746:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:21"},"nodeType":"YulFunctionCall","src":"6742:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6727:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6661:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"6666:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6677:11:21","type":""}],"src":"6593:169:21"},{"body":{"nodeType":"YulBlock","src":"6830:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6840:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6849:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6844:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6909:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6934:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"6939:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:21"},"nodeType":"YulFunctionCall","src":"6930:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6953:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"6958:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:21"},"nodeType":"YulFunctionCall","src":"6949:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6943:5:21"},"nodeType":"YulFunctionCall","src":"6943:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:21"},"nodeType":"YulFunctionCall","src":"6923:39:21"},"nodeType":"YulExpressionStatement","src":"6923:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6870:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"6873:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6867:2:21"},"nodeType":"YulFunctionCall","src":"6867:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6881:19:21","statements":[{"nodeType":"YulAssignment","src":"6883:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6892:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"6895:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:21"},"nodeType":"YulFunctionCall","src":"6888:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6883:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"6863:3:21","statements":[]},"src":"6859:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6992:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6997:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:21"},"nodeType":"YulFunctionCall","src":"6988:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:21"},"nodeType":"YulFunctionCall","src":"6981:27:21"},"nodeType":"YulExpressionStatement","src":"6981:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6812:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6817:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"6822:6:21","type":""}],"src":"6768:246:21"},{"body":{"nodeType":"YulBlock","src":"7068:54:21","statements":[{"nodeType":"YulAssignment","src":"7078:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7096:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:21"},"nodeType":"YulFunctionCall","src":"7092:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7108:3:21"},"nodeType":"YulFunctionCall","src":"7108:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7088:3:21"},"nodeType":"YulFunctionCall","src":"7088:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7078:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7061:6:21","type":""}],"src":"7020:102:21"},{"body":{"nodeType":"YulBlock","src":"7220:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7230:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7277:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7244:32:21"},"nodeType":"YulFunctionCall","src":"7244:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7234:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7292:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7363:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7299:58:21"},"nodeType":"YulFunctionCall","src":"7299:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7292:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7418:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:21"},"nodeType":"YulFunctionCall","src":"7414:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"7432:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7437:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7379:34:21"},"nodeType":"YulFunctionCall","src":"7379:65:21"},"nodeType":"YulExpressionStatement","src":"7379:65:21"},{"nodeType":"YulAssignment","src":"7453:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7464:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7491:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7469:21:21"},"nodeType":"YulFunctionCall","src":"7469:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7460:3:21"},"nodeType":"YulFunctionCall","src":"7460:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7453:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7201:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7208:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7216:3:21","type":""}],"src":"7128:377:21"},{"body":{"nodeType":"YulBlock","src":"7629:195:21","statements":[{"nodeType":"YulAssignment","src":"7639:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7651:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7662:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:21"},"nodeType":"YulFunctionCall","src":"7647:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7639:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7686:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7697:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:21"},"nodeType":"YulFunctionCall","src":"7682:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7705:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7711:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7701:3:21"},"nodeType":"YulFunctionCall","src":"7701:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7675:6:21"},"nodeType":"YulFunctionCall","src":"7675:47:21"},"nodeType":"YulExpressionStatement","src":"7675:47:21"},{"nodeType":"YulAssignment","src":"7731:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7803:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"7812:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7739:63:21"},"nodeType":"YulFunctionCall","src":"7739:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7731:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7601:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7613:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7624:4:21","type":""}],"src":"7511:313:21"},{"body":{"nodeType":"YulBlock","src":"7888:40:21","statements":[{"nodeType":"YulAssignment","src":"7899:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7909:5:21"},"nodeType":"YulFunctionCall","src":"7909:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7899:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7871:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7881:6:21","type":""}],"src":"7830:98:21"},{"body":{"nodeType":"YulBlock","src":"7990:60:21","statements":[{"nodeType":"YulAssignment","src":"8000:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8008:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8000:4:21"}]},{"nodeType":"YulAssignment","src":"8021:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8033:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8038:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:21"},"nodeType":"YulFunctionCall","src":"8029:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8021:4:21"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7977:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7985:4:21","type":""}],"src":"7934:116:21"},{"body":{"nodeType":"YulBlock","src":"8111:99:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8122:42:21","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8159:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8153:5:21"},"nodeType":"YulFunctionCall","src":"8153:10:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8135:17:21"},"nodeType":"YulFunctionCall","src":"8135:29:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8126:5:21","type":""}]},{"nodeType":"YulAssignment","src":"8174:29:21","value":{"name":"value","nodeType":"YulIdentifier","src":"8198:5:21"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8174:11:21"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8091:3:21","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"8099:11:21","type":""}],"src":"8056:154:21"},{"body":{"nodeType":"YulBlock","src":"8306:504:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8317:52:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8363:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8331:31:21"},"nodeType":"YulFunctionCall","src":"8331:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8321:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8378:21:21","value":{"name":"array","nodeType":"YulIdentifier","src":"8394:5:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8382:8:21","type":""}]},{"nodeType":"YulAssignment","src":"8409:52:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8455:5:21"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8421:33:21"},"nodeType":"YulFunctionCall","src":"8421:40:21"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8409:8:21"}]},{"nodeType":"YulAssignment","src":"8471:44:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8506:8:21"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"8480:25:21"},"nodeType":"YulFunctionCall","src":"8480:35:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8471:5:21"}]},{"body":{"nodeType":"YulBlock","src":"8543:260:21","statements":[{"nodeType":"YulAssignment","src":"8557:236:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8587:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8654:1:21","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"8665:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8657:3:21"},"nodeType":"YulFunctionCall","src":"8657:15:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8650:3:21"},"nodeType":"YulFunctionCall","src":"8650:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8695:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8610:18:21"},"nodeType":"YulFunctionCall","src":"8610:169:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8566:3:21"},"nodeType":"YulFunctionCall","src":"8566:227:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8557:5:21"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8531:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8528:2:21"},"nodeType":"YulFunctionCall","src":"8528:14:21"},"nodeType":"YulIf","src":"8525:278:21"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8290:5:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8300:5:21","type":""}],"src":"8216:594:21"},{"body":{"nodeType":"YulBlock","src":"8922:129:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8944:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8952:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8940:3:21"},"nodeType":"YulFunctionCall","src":"8940:14:21"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"8956:34:21","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8933:6:21"},"nodeType":"YulFunctionCall","src":"8933:58:21"},"nodeType":"YulExpressionStatement","src":"8933:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9012:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9020:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:21"},"nodeType":"YulFunctionCall","src":"9008:15:21"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"9025:18:21","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:21"},"nodeType":"YulFunctionCall","src":"9001:43:21"},"nodeType":"YulExpressionStatement","src":"9001:43:21"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8914:6:21","type":""}],"src":"8816:235:21"},{"body":{"nodeType":"YulBlock","src":"9203:220:21","statements":[{"nodeType":"YulAssignment","src":"9213:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9279:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9284:2:21","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9220:58:21"},"nodeType":"YulFunctionCall","src":"9220:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9213:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9385:3:21"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"9296:88:21"},"nodeType":"YulFunctionCall","src":"9296:93:21"},"nodeType":"YulExpressionStatement","src":"9296:93:21"},{"nodeType":"YulAssignment","src":"9398:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9409:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9414:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:21"},"nodeType":"YulFunctionCall","src":"9405:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9398:3:21"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9191:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9199:3:21","type":""}],"src":"9057:366:21"},{"body":{"nodeType":"YulBlock","src":"9600:248:21","statements":[{"nodeType":"YulAssignment","src":"9610:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9622:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9633:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9618:3:21"},"nodeType":"YulFunctionCall","src":"9618:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9610:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9657:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9668:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9653:3:21"},"nodeType":"YulFunctionCall","src":"9653:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9676:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9682:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9672:3:21"},"nodeType":"YulFunctionCall","src":"9672:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9646:6:21"},"nodeType":"YulFunctionCall","src":"9646:47:21"},"nodeType":"YulExpressionStatement","src":"9646:47:21"},{"nodeType":"YulAssignment","src":"9702:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9836:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9710:124:21"},"nodeType":"YulFunctionCall","src":"9710:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9580:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9595:4:21","type":""}],"src":"9429:419:21"},{"body":{"nodeType":"YulBlock","src":"9960:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9982:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9990:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9978:3:21"},"nodeType":"YulFunctionCall","src":"9978:14:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9994:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9971:6:21"},"nodeType":"YulFunctionCall","src":"9971:57:21"},"nodeType":"YulExpressionStatement","src":"9971:57:21"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9952:6:21","type":""}],"src":"9854:181:21"},{"body":{"nodeType":"YulBlock","src":"10187:220:21","statements":[{"nodeType":"YulAssignment","src":"10197:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10263:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10268:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10204:58:21"},"nodeType":"YulFunctionCall","src":"10204:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10197:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10369:3:21"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"10280:88:21"},"nodeType":"YulFunctionCall","src":"10280:93:21"},"nodeType":"YulExpressionStatement","src":"10280:93:21"},{"nodeType":"YulAssignment","src":"10382:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10393:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10398:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10389:3:21"},"nodeType":"YulFunctionCall","src":"10389:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10382:3:21"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10175:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10183:3:21","type":""}],"src":"10041:366:21"},{"body":{"nodeType":"YulBlock","src":"10584:248:21","statements":[{"nodeType":"YulAssignment","src":"10594:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10606:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10617:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10602:3:21"},"nodeType":"YulFunctionCall","src":"10602:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10594:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10641:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10652:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10637:3:21"},"nodeType":"YulFunctionCall","src":"10637:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10660:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10656:3:21"},"nodeType":"YulFunctionCall","src":"10656:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10630:6:21"},"nodeType":"YulFunctionCall","src":"10630:47:21"},"nodeType":"YulExpressionStatement","src":"10630:47:21"},{"nodeType":"YulAssignment","src":"10686:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10820:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10694:124:21"},"nodeType":"YulFunctionCall","src":"10694:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10686:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10564:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10579:4:21","type":""}],"src":"10413:419:21"},{"body":{"nodeType":"YulBlock","src":"10866:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10883:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10886:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10876:6:21"},"nodeType":"YulFunctionCall","src":"10876:88:21"},"nodeType":"YulExpressionStatement","src":"10876:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10980:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10983:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:21"},"nodeType":"YulFunctionCall","src":"10973:15:21"},"nodeType":"YulExpressionStatement","src":"10973:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11004:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11007:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10997:6:21"},"nodeType":"YulFunctionCall","src":"10997:15:21"},"nodeType":"YulExpressionStatement","src":"10997:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10838:180:21"},{"body":{"nodeType":"YulBlock","src":"11068:147:21","statements":[{"nodeType":"YulAssignment","src":"11078:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11101:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11083:17:21"},"nodeType":"YulFunctionCall","src":"11083:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11078:1:21"}]},{"nodeType":"YulAssignment","src":"11112:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11135:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11117:17:21"},"nodeType":"YulFunctionCall","src":"11117:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11112:1:21"}]},{"nodeType":"YulAssignment","src":"11146:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11157:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11160:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11153:3:21"},"nodeType":"YulFunctionCall","src":"11153:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11146:3:21"}]},{"body":{"nodeType":"YulBlock","src":"11186:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11188:16:21"},"nodeType":"YulFunctionCall","src":"11188:18:21"},"nodeType":"YulExpressionStatement","src":"11188:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11178:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"11181:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11175:2:21"},"nodeType":"YulFunctionCall","src":"11175:10:21"},"nodeType":"YulIf","src":"11172:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11055:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11058:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11064:3:21","type":""}],"src":"11024:191:21"},{"body":{"nodeType":"YulBlock","src":"11319:124:21","statements":[{"nodeType":"YulAssignment","src":"11329:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11341:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11352:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11337:3:21"},"nodeType":"YulFunctionCall","src":"11337:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11329:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11409:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11422:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11433:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:21"},"nodeType":"YulFunctionCall","src":"11418:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11365:43:21"},"nodeType":"YulFunctionCall","src":"11365:71:21"},"nodeType":"YulExpressionStatement","src":"11365:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11291:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11303:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11314:4:21","type":""}],"src":"11221:222:21"},{"body":{"nodeType":"YulBlock","src":"11555:120:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11577:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11585:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11573:3:21"},"nodeType":"YulFunctionCall","src":"11573:14:21"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"11589:34:21","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11566:6:21"},"nodeType":"YulFunctionCall","src":"11566:58:21"},"nodeType":"YulExpressionStatement","src":"11566:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11645:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11653:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11641:3:21"},"nodeType":"YulFunctionCall","src":"11641:15:21"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"11658:9:21","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11634:6:21"},"nodeType":"YulFunctionCall","src":"11634:34:21"},"nodeType":"YulExpressionStatement","src":"11634:34:21"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11547:6:21","type":""}],"src":"11449:226:21"},{"body":{"nodeType":"YulBlock","src":"11827:220:21","statements":[{"nodeType":"YulAssignment","src":"11837:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11903:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11908:2:21","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11844:58:21"},"nodeType":"YulFunctionCall","src":"11844:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11837:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12009:3:21"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"11920:88:21"},"nodeType":"YulFunctionCall","src":"11920:93:21"},"nodeType":"YulExpressionStatement","src":"11920:93:21"},{"nodeType":"YulAssignment","src":"12022:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12038:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12029:3:21"},"nodeType":"YulFunctionCall","src":"12029:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12022:3:21"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11815:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11823:3:21","type":""}],"src":"11681:366:21"},{"body":{"nodeType":"YulBlock","src":"12224:248:21","statements":[{"nodeType":"YulAssignment","src":"12234:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12246:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12257:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12242:3:21"},"nodeType":"YulFunctionCall","src":"12242:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12234:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12281:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12292:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12277:3:21"},"nodeType":"YulFunctionCall","src":"12277:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12300:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12306:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12296:3:21"},"nodeType":"YulFunctionCall","src":"12296:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12270:6:21"},"nodeType":"YulFunctionCall","src":"12270:47:21"},"nodeType":"YulExpressionStatement","src":"12270:47:21"},{"nodeType":"YulAssignment","src":"12326:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12460:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12334:124:21"},"nodeType":"YulFunctionCall","src":"12334:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12326:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12204:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12219:4:21","type":""}],"src":"12053:419:21"},{"body":{"nodeType":"YulBlock","src":"12584:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12606:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12614:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12602:3:21"},"nodeType":"YulFunctionCall","src":"12602:14:21"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"12618:34:21","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12595:6:21"},"nodeType":"YulFunctionCall","src":"12595:58:21"},"nodeType":"YulExpressionStatement","src":"12595:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12674:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12682:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12670:3:21"},"nodeType":"YulFunctionCall","src":"12670:15:21"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"12687:8:21","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12663:6:21"},"nodeType":"YulFunctionCall","src":"12663:33:21"},"nodeType":"YulExpressionStatement","src":"12663:33:21"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12576:6:21","type":""}],"src":"12478:225:21"},{"body":{"nodeType":"YulBlock","src":"12855:220:21","statements":[{"nodeType":"YulAssignment","src":"12865:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12931:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12936:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12872:58:21"},"nodeType":"YulFunctionCall","src":"12872:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12865:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13037:3:21"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"12948:88:21"},"nodeType":"YulFunctionCall","src":"12948:93:21"},"nodeType":"YulExpressionStatement","src":"12948:93:21"},{"nodeType":"YulAssignment","src":"13050:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13066:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13057:3:21"},"nodeType":"YulFunctionCall","src":"13057:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13050:3:21"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12843:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12851:3:21","type":""}],"src":"12709:366:21"},{"body":{"nodeType":"YulBlock","src":"13252:248:21","statements":[{"nodeType":"YulAssignment","src":"13262:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13274:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13285:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13270:3:21"},"nodeType":"YulFunctionCall","src":"13270:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13262:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13309:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13320:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13305:3:21"},"nodeType":"YulFunctionCall","src":"13305:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13328:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13334:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13324:3:21"},"nodeType":"YulFunctionCall","src":"13324:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13298:6:21"},"nodeType":"YulFunctionCall","src":"13298:47:21"},"nodeType":"YulExpressionStatement","src":"13298:47:21"},{"nodeType":"YulAssignment","src":"13354:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13488:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13362:124:21"},"nodeType":"YulFunctionCall","src":"13362:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13354:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13232:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13247:4:21","type":""}],"src":"13081:419:21"},{"body":{"nodeType":"YulBlock","src":"13612:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13634:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13642:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13630:3:21"},"nodeType":"YulFunctionCall","src":"13630:14:21"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"13646:34:21","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13623:6:21"},"nodeType":"YulFunctionCall","src":"13623:58:21"},"nodeType":"YulExpressionStatement","src":"13623:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13702:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13710:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13698:3:21"},"nodeType":"YulFunctionCall","src":"13698:15:21"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"13715:8:21","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13691:6:21"},"nodeType":"YulFunctionCall","src":"13691:33:21"},"nodeType":"YulExpressionStatement","src":"13691:33:21"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13604:6:21","type":""}],"src":"13506:225:21"},{"body":{"nodeType":"YulBlock","src":"13883:220:21","statements":[{"nodeType":"YulAssignment","src":"13893:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13959:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13964:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13900:58:21"},"nodeType":"YulFunctionCall","src":"13900:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13893:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14065:3:21"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"13976:88:21"},"nodeType":"YulFunctionCall","src":"13976:93:21"},"nodeType":"YulExpressionStatement","src":"13976:93:21"},{"nodeType":"YulAssignment","src":"14078:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14089:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14094:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14085:3:21"},"nodeType":"YulFunctionCall","src":"14085:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14078:3:21"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13871:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13879:3:21","type":""}],"src":"13737:366:21"},{"body":{"nodeType":"YulBlock","src":"14280:248:21","statements":[{"nodeType":"YulAssignment","src":"14290:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14302:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14313:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14298:3:21"},"nodeType":"YulFunctionCall","src":"14298:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14290:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14337:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14348:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14333:3:21"},"nodeType":"YulFunctionCall","src":"14333:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14356:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14362:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14352:3:21"},"nodeType":"YulFunctionCall","src":"14352:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14326:6:21"},"nodeType":"YulFunctionCall","src":"14326:47:21"},"nodeType":"YulExpressionStatement","src":"14326:47:21"},{"nodeType":"YulAssignment","src":"14382:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14516:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14390:124:21"},"nodeType":"YulFunctionCall","src":"14390:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14382:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14260:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14275:4:21","type":""}],"src":"14109:419:21"},{"body":{"nodeType":"YulBlock","src":"14660:206:21","statements":[{"nodeType":"YulAssignment","src":"14670:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14682:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14693:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14678:3:21"},"nodeType":"YulFunctionCall","src":"14678:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14670:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14750:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14763:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14774:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14759:3:21"},"nodeType":"YulFunctionCall","src":"14759:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14706:43:21"},"nodeType":"YulFunctionCall","src":"14706:71:21"},"nodeType":"YulExpressionStatement","src":"14706:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14831:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14844:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14855:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14840:3:21"},"nodeType":"YulFunctionCall","src":"14840:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14787:43:21"},"nodeType":"YulFunctionCall","src":"14787:72:21"},"nodeType":"YulExpressionStatement","src":"14787:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14624:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14636:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14644:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14655:4:21","type":""}],"src":"14534:332:21"},{"body":{"nodeType":"YulBlock","src":"14917:149:21","statements":[{"nodeType":"YulAssignment","src":"14927:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14950:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14932:17:21"},"nodeType":"YulFunctionCall","src":"14932:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14927:1:21"}]},{"nodeType":"YulAssignment","src":"14961:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14984:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14966:17:21"},"nodeType":"YulFunctionCall","src":"14966:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14961:1:21"}]},{"nodeType":"YulAssignment","src":"14995:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15007:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15010:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15003:3:21"},"nodeType":"YulFunctionCall","src":"15003:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14995:4:21"}]},{"body":{"nodeType":"YulBlock","src":"15037:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15039:16:21"},"nodeType":"YulFunctionCall","src":"15039:18:21"},"nodeType":"YulExpressionStatement","src":"15039:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15028:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"15034:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15025:2:21"},"nodeType":"YulFunctionCall","src":"15025:11:21"},"nodeType":"YulIf","src":"15022:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14903:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14906:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14912:4:21","type":""}],"src":"14872:194:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F7665726E616E6365546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F7665726E616E6365546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4754000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x10B SWAP2 SWAP1 PUSH3 0xFBA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x11D SWAP2 SWAP1 PUSH3 0xFBA JUMP JUMPDEST POP POP POP PUSH3 0x13B PUSH1 0x5 DUP4 PUSH3 0x1F5 PUSH1 0x20 SHL PUSH3 0x1100 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x15E PUSH1 0x6 DUP3 PUSH3 0x1F5 PUSH1 0x20 SHL PUSH3 0x1100 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x19D PUSH3 0x252 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1EF CALLER PUSH1 0xC SLOAD PUSH3 0x2AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1685 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x21B JUMPI PUSH3 0x213 DUP4 PUSH3 0x2CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x24C JUMP JUMPDEST DUP3 PUSH3 0x232 DUP4 PUSH3 0x337 PUSH1 0x20 SHL PUSH3 0x1144 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x243 SWAP2 SWAP1 PUSH3 0xFBA JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x294 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2C6 DUP3 DUP3 PUSH3 0x341 PUSH1 0x20 SHL PUSH3 0x114E OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x31A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x311 SWAP2 SWAP1 PUSH3 0x11FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x328 SWAP1 PUSH3 0x1254 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x358 DUP3 DUP3 PUSH3 0x3FF PUSH1 0x20 SHL PUSH3 0x11DB OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x368 PUSH3 0x56C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x396 PUSH3 0x590 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3D1 SWAP1 PUSH3 0x133A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3F9 PUSH1 0xB PUSH3 0x59A PUSH1 0x20 SHL PUSH3 0x1331 OR DUP4 PUSH3 0x5B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x468 SWAP1 PUSH3 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x485 PUSH1 0x0 DUP4 DUP4 PUSH3 0x8D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x499 SWAP2 SWAP1 PUSH3 0x13FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x54C SWAP2 SWAP1 PUSH3 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x568 PUSH1 0x0 DUP4 DUP4 PUSH3 0x8DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x5AA SWAP2 SWAP1 PUSH3 0x13FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH3 0x682 JUMPI PUSH3 0x5DD DUP8 PUSH1 0x1 DUP5 SUB PUSH3 0x8F9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH3 0x6F1 DUP5 DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH3 0x724 JUMPI POP PUSH3 0x70F PUSH3 0x90E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0x7AC JUMPI PUSH3 0x740 DUP4 PUSH3 0x92B PUSH1 0x20 SHL PUSH3 0x1347 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x755 DUP9 PUSH1 0x1 DUP6 SUB PUSH3 0x8F9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x8CD JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x7E5 PUSH3 0x7CC PUSH3 0x90E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH3 0x999 PUSH1 0x20 SHL PUSH3 0x13B2 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x806 DUP7 PUSH3 0x92B PUSH1 0x20 SHL PUSH3 0x1347 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x8F4 DUP4 DUP4 DUP4 PUSH3 0x9EF PUSH1 0x20 SHL PUSH3 0x1405 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x926 NUMBER PUSH3 0xA3F PUSH1 0x20 SHL PUSH3 0x1430 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x991 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x988 SWAP1 PUSH3 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x9E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9DE SWAP1 PUSH3 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA07 DUP4 DUP4 DUP4 PUSH3 0xA97 PUSH1 0x20 SHL PUSH3 0x1485 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA3A PUSH3 0xA1C DUP5 PUSH3 0xA9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA2D DUP5 PUSH3 0xA9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xB05 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA86 SWAP1 PUSH3 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xB42 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xD23 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xC35 JUMPI PUSH1 0x0 DUP1 PUSH3 0xBDC PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xD28 PUSH1 0x20 SHL PUSH3 0x148A OR DUP6 PUSH3 0x5B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xC2A SWAP3 SWAP2 SWAP1 PUSH3 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xD22 JUMPI PUSH1 0x0 DUP1 PUSH3 0xCC9 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x59A PUSH1 0x20 SHL PUSH3 0x1331 OR DUP6 PUSH3 0x5B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xD17 SWAP3 SWAP2 SWAP1 PUSH3 0x161D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xD38 SWAP2 SWAP1 PUSH3 0x164A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xDC2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xDD8 JUMPI PUSH3 0xDD7 PUSH3 0xD7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xE42 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xE03 JUMP JUMPDEST PUSH3 0xE4E DUP7 DUP4 PUSH3 0xE03 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE9B PUSH3 0xE95 PUSH3 0xE8F DUP5 PUSH3 0xE66 JUMP JUMPDEST PUSH3 0xE70 JUMP JUMPDEST PUSH3 0xE66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEB7 DUP4 PUSH3 0xE7A JUMP JUMPDEST PUSH3 0xECF PUSH3 0xEC6 DUP3 PUSH3 0xEA2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xE10 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xEE6 PUSH3 0xED7 JUMP JUMPDEST PUSH3 0xEF3 DUP2 DUP5 DUP5 PUSH3 0xEAC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF1B JUMPI PUSH3 0xF0F PUSH1 0x0 DUP3 PUSH3 0xEDC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xEF9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xF6A JUMPI PUSH3 0xF34 DUP2 PUSH3 0xDDE JUMP JUMPDEST PUSH3 0xF3F DUP5 PUSH3 0xDF3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xF4F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xF67 PUSH3 0xF5E DUP6 PUSH3 0xDF3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xEF8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF8F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xF6F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFAA DUP4 DUP4 PUSH3 0xF7C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFC5 DUP3 PUSH3 0xD40 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xFE1 JUMPI PUSH3 0xFE0 PUSH3 0xD4B JUMP JUMPDEST JUMPDEST PUSH3 0xFED DUP3 SLOAD PUSH3 0xDA9 JUMP JUMPDEST PUSH3 0xFFA DUP3 DUP3 DUP6 PUSH3 0xF1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1032 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x101D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1029 DUP6 DUP3 PUSH3 0xF9C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1099 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x1042 DUP7 PUSH3 0xDDE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x106C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1045 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x108C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1088 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xF7C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10B6 DUP2 PUSH3 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x10C7 DUP2 PUSH3 0xE66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10FA DUP3 PUSH3 0x10CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x110C DUP2 PUSH3 0x10ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1129 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x10AB JUMP JUMPDEST PUSH3 0x1138 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x10AB JUMP JUMPDEST PUSH3 0x1147 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x10AB JUMP JUMPDEST PUSH3 0x1156 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x10BC JUMP JUMPDEST PUSH3 0x1165 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x1101 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x11A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1183 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11CA DUP3 PUSH3 0xD40 JUMP JUMPDEST PUSH3 0x11D6 DUP2 DUP6 PUSH3 0x116F JUMP JUMPDEST SWAP4 POP PUSH3 0x11E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1180 JUMP JUMPDEST PUSH3 0x11F3 DUP2 PUSH3 0x11AC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x121A DUP2 DUP5 PUSH3 0x11BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x124B DUP3 MLOAD PUSH3 0x10A1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1261 DUP3 PUSH3 0x1222 JUMP JUMPDEST DUP3 PUSH3 0x126D DUP5 PUSH3 0x122D JUMP JUMPDEST SWAP1 POP PUSH3 0x127A DUP2 PUSH3 0x123D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x12BD JUMPI PUSH3 0x12B8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0xE03 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1322 PUSH1 0x30 DUP4 PUSH3 0x116F JUMP JUMPDEST SWAP2 POP PUSH3 0x132F DUP3 PUSH3 0x12C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1355 DUP2 PUSH3 0x1313 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1394 PUSH1 0x1F DUP4 PUSH3 0x116F JUMP JUMPDEST SWAP2 POP PUSH3 0x13A1 DUP3 PUSH3 0x135C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x13C7 DUP2 PUSH3 0x1385 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x140A DUP3 PUSH3 0xE66 JUMP JUMPDEST SWAP2 POP PUSH3 0x1417 DUP4 PUSH3 0xE66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1432 JUMPI PUSH3 0x1431 PUSH3 0x13CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x144F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14B3 PUSH1 0x27 DUP4 PUSH3 0x116F JUMP JUMPDEST SWAP2 POP PUSH3 0x14C0 DUP3 PUSH3 0x1455 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x14E6 DUP2 PUSH3 0x14A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x154B PUSH1 0x26 DUP4 PUSH3 0x116F JUMP JUMPDEST SWAP2 POP PUSH3 0x1558 DUP3 PUSH3 0x14ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x157E DUP2 PUSH3 0x153C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15E3 PUSH1 0x26 DUP4 PUSH3 0x116F JUMP JUMPDEST SWAP2 POP PUSH3 0x15F0 DUP3 PUSH3 0x1585 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1616 DUP2 PUSH3 0x15D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1634 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x10BC JUMP JUMPDEST PUSH3 0x1643 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x10BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1657 DUP3 PUSH3 0xE66 JUMP JUMPDEST SWAP2 POP PUSH3 0x1664 DUP4 PUSH3 0xE66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x167F JUMPI PUSH3 0x167E PUSH3 0x13CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x42BE PUSH3 0x16E0 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x9BF ADD MSTORE PUSH1 0x0 PUSH2 0x98B ADD MSTORE PUSH1 0x0 PUSH2 0x23A8 ADD MSTORE PUSH1 0x0 PUSH2 0x2387 ADD MSTORE PUSH1 0x0 PUSH2 0x1977 ADD MSTORE PUSH1 0x0 PUSH2 0x19CD ADD MSTORE PUSH1 0x0 PUSH2 0x19F6 ADD MSTORE PUSH2 0x42BE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC3CDA520 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x56B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D3 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x455 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x5D641847 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x353 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x2CB JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x2BB2 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x2C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2CAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2E7E JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x2ECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x2FCC JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x30DA JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x318F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5AA SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D6 SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x623 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x623 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x606 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x638 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x645 DUP2 DUP6 DUP6 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x665 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x672 DUP6 DUP3 DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x67D DUP6 DUP6 DUP6 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69C PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CD DUP2 DUP6 DUP6 PUSH2 0x6BE DUP6 DUP10 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E2 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x722 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x773 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x786 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x3325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x883 PUSH2 0x87D PUSH2 0x14A0 JUMP JUMPDEST DUP3 PUSH2 0x1B72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x13B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x9B8 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1C9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9EC PUSH1 0x6 PUSH32 0x0 PUSH2 0x1C9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x3345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA3B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA84 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD8 PUSH1 0xB DUP4 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA NUMBER PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAFE SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB2A SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB77 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB77 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB5A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xC60 JUMPI PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0xC25 JUMPI PUSH2 0xC24 PUSH2 0x3374 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC94 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA2 DUP3 DUP7 PUSH2 0xF69 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF4 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD0B PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xD18 DUP2 DUP6 DUP6 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC8 PUSH2 0xDC0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1D4A JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP PUSH2 0xDD3 DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP7 EQ PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE1E DUP2 DUP9 PUSH2 0x1B72 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE99 DUP13 PUSH2 0x1D8F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEAF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xED2 DUP3 PUSH2 0x1D4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEE2 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5D DUP11 DUP11 DUP11 PUSH2 0x14A8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF8 PUSH2 0x2989 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0x3374 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x111C JUMPI PUSH2 0x1115 DUP4 PUSH2 0x1DED JUMP JUMPDEST SWAP1 POP PUSH2 0x113E JUMP JUMPDEST DUP3 PUSH2 0x1126 DUP4 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x3837 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1158 DUP3 DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x1160 PUSH2 0x1E55 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1186 PUSH2 0x650 JUMP JUMPDEST GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP1 PUSH2 0x397B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D5 PUSH1 0xB PUSH2 0x1331 DUP4 PUSH2 0x1E79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP1 PUSH2 0x39E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1256 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2154 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1268 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x132D PUSH1 0x0 DUP4 DUP4 PUSH2 0x2159 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x133F SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A1 SWAP1 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP1 PUSH2 0x3B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1410 DUP4 DUP4 DUP4 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x142B PUSH2 0x141C DUP5 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x1425 DUP5 PUSH2 0x809 JUMP JUMPDEST DUP4 PUSH2 0x2169 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP1 PUSH2 0x3B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1498 SWAP2 SWAP1 PUSH2 0x3BBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP1 PUSH2 0x3C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157D SWAP1 PUSH2 0x3CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167D DUP5 DUP5 PUSH2 0xF69 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x16F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E0 SWAP1 PUSH2 0x3D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1763 SWAP1 PUSH2 0x3DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP1 PUSH2 0x3E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E6 DUP4 DUP4 DUP4 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x186C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1863 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x196D DUP5 DUP5 DUP5 PUSH2 0x2159 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x19EF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1A1C JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A24 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0x0 PUSH2 0x1A4E DUP5 PUSH2 0x23F8 JUMP JUMPDEST DUP5 PUSH2 0x1A59 SWAP2 SWAP1 PUSH2 0x3BBD JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1A66 DUP9 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1A8E JUMPI DUP1 SWAP2 POP PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x0 PUSH2 0x1AB5 DUP4 DUP4 PUSH2 0x2506 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1AC2 DUP9 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1AEA JUMPI DUP1 SWAP2 POP PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1B46 JUMPI PUSH2 0x1B15 DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B49 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7D DUP4 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B8A DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C86 DUP3 DUP5 DUP4 PUSH2 0x2169 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1CB7 JUMPI PUSH2 0x1CB0 DUP4 PUSH2 0x252C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D44 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1CC3 SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CEF SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5D PUSH2 0x1D57 PUSH2 0x1973 JUMP JUMPDEST DUP4 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D75 DUP8 DUP8 DUP8 DUP8 PUSH2 0x25E1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1D82 DUP2 PUSH2 0x26C3 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1DDC DUP2 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE7 DUP2 PUSH2 0x2829 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x1E3A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E31 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x1E46 SWAP1 PUSH2 0x3F67 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x1F3F JUMPI PUSH2 0x1E9B DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x1FB0 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1FDA JUMPI POP PUSH2 0x1FC5 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x204B JUMPI PUSH2 0x1FE8 DUP4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x1FF5 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x214A JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x206F PUSH2 0x2062 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x13B2 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2083 DUP7 PUSH2 0x1347 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2164 DUP4 DUP4 DUP4 PUSH2 0x1405 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x21A5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x235D JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2283 JUMPI PUSH1 0x0 DUP1 PUSH2 0x222C PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x148A DUP6 PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2278 SWAP3 SWAP2 SWAP1 PUSH2 0x3FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x235C JUMPI PUSH1 0x0 DUP1 PUSH2 0x2305 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1331 DUP6 PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2351 SWAP3 SWAP2 SWAP1 PUSH2 0x3FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x240A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x24EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2417 DUP5 PUSH2 0x283F JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2431 JUMPI PUSH2 0x2430 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x244A JUMPI PUSH2 0x2449 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2463 JUMPI PUSH2 0x2462 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x24AE JUMPI PUSH2 0x24AD PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x24C7 JUMPI PUSH2 0x24C6 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x24E8 DUP2 DUP3 DUP6 DUP2 PUSH2 0x24E2 JUMPI PUSH2 0x24E1 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2920 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x4079 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2524 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2539 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2558 JUMPI PUSH2 0x2557 PUSH2 0x3345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x258A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x261C JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2641 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2663 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26B1 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x26BA JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x26EA JUMPI PUSH2 0x26E9 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2826 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2704 JUMPI PUSH2 0x2703 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2717 JUMPI PUSH2 0x2716 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274E SWAP1 PUSH2 0x416A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x276B JUMPI PUSH2 0x276A PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x277E JUMPI PUSH2 0x277D PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x27BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B5 SWAP1 PUSH2 0x41D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27D2 JUMPI PUSH2 0x27D1 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27E5 JUMPI PUSH2 0x27E4 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x281C SWAP1 PUSH2 0x4268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2861 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x287C JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2897 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28B2 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28CD JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2903 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2917 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x292F JUMPI DUP2 PUSH2 0x2931 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2980 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A01 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29E6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A29 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH2 0x2A33 DUP2 DUP6 PUSH2 0x29D2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A43 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29E3 JUMP JUMPDEST PUSH2 0x2A4C DUP2 PUSH2 0x2A0D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A71 DUP2 DUP5 PUSH2 0x2A1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA9 DUP3 PUSH2 0x2A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB9 DUP2 PUSH2 0x2A9E JUMP JUMPDEST DUP2 EQ PUSH2 0x2AC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AD6 DUP2 PUSH2 0x2AB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEF DUP2 PUSH2 0x2ADC JUMP JUMPDEST DUP2 EQ PUSH2 0x2AFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B0C DUP2 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B29 JUMPI PUSH2 0x2B28 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B37 DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B48 DUP6 DUP3 DUP7 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B67 DUP2 PUSH2 0x2B52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B82 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B91 DUP2 PUSH2 0x2ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BCB JUMPI PUSH2 0x2BCA PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD9 DUP7 DUP3 DUP8 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2BEA DUP7 DUP3 DUP8 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BFB DUP7 DUP3 DUP8 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1B DUP2 PUSH2 0x2C05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C4F DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C94 DUP5 DUP3 DUP6 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA6 DUP2 PUSH2 0x2A9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE0 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D36 DUP2 PUSH2 0x2D01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D71 DUP2 PUSH2 0x2ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D83 DUP4 DUP4 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA7 DUP3 PUSH2 0x2D3C JUMP JUMPDEST PUSH2 0x2DB1 DUP2 DUP6 PUSH2 0x2D47 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DBC DUP4 PUSH2 0x2D58 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DED JUMPI DUP2 MLOAD PUSH2 0x2DD4 DUP9 DUP3 PUSH2 0x2D77 JUMP JUMPDEST SWAP8 POP PUSH2 0x2DDF DUP4 PUSH2 0x2D8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2DC0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2E0F PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2D2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2E21 DUP2 DUP10 PUSH2 0x2A1E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2E35 DUP2 DUP9 PUSH2 0x2A1E JUMP JUMPDEST SWAP1 POP PUSH2 0x2E44 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x2E51 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x2E5E PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2C46 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E70 DUP2 DUP5 PUSH2 0x2D9C JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E94 JUMPI PUSH2 0x2E93 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EA2 DUP5 DUP3 DUP6 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EC6 DUP2 PUSH2 0x2EAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EF0 DUP2 PUSH2 0x2C05 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F0D DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F1C DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP2 EQ PUSH2 0x2F27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F39 DUP2 PUSH2 0x2F13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2F5C JUMPI PUSH2 0x2F5B PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F6A DUP10 DUP3 DUP11 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2F7B DUP10 DUP3 DUP11 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2F8C DUP10 DUP3 DUP11 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2F9D DUP10 DUP3 DUP11 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2FAE DUP10 DUP3 DUP11 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2FBF DUP10 DUP3 DUP11 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2FEB JUMPI PUSH2 0x2FEA PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FF9 DUP11 DUP3 DUP12 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x300A DUP11 DUP3 DUP12 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x301B DUP11 DUP3 DUP12 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x302C DUP11 DUP3 DUP12 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x303D DUP11 DUP3 DUP12 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x304E DUP11 DUP3 DUP12 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x305F DUP11 DUP3 DUP12 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3085 JUMPI PUSH2 0x3084 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3093 DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30A4 DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30B7 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x30C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30D4 DUP2 PUSH2 0x30AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30F1 JUMPI PUSH2 0x30F0 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30FF DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3110 DUP6 DUP3 DUP7 ADD PUSH2 0x30C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3123 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x315A DUP2 PUSH2 0x3129 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3176 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3189 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3151 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3160 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x31F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3204 JUMPI PUSH2 0x3203 PUSH2 0x31AA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3244 DUP3 PUSH2 0x2ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x324F DUP4 PUSH2 0x2ADC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3267 JUMPI PUSH2 0x3266 PUSH2 0x320A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A3 PUSH1 0x19 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x32AE DUP3 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32D2 DUP2 PUSH2 0x3296 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330F PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x331A DUP3 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x333E DUP2 PUSH2 0x3302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FF PUSH1 0x25 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x340A DUP3 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x342E DUP2 PUSH2 0x33F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346B PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3476 DUP3 PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349A DUP2 PUSH2 0x345E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x34B6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x34C3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x34D0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x34DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351C PUSH1 0x19 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3527 DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x354B DUP2 PUSH2 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3588 PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3593 DUP3 PUSH2 0x3552 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B7 DUP2 PUSH2 0x357B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x35D3 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x35E0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x35ED PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x35FA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x3607 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x3614 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3655 PUSH1 0x1E DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3660 DUP3 PUSH2 0x361F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3684 DUP2 PUSH2 0x3648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x36ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x36F7 DUP7 DUP4 PUSH2 0x36B0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3734 PUSH2 0x372F PUSH2 0x372A DUP5 PUSH2 0x2ADC JUMP JUMPDEST PUSH2 0x370F JUMP JUMPDEST PUSH2 0x2ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374E DUP4 PUSH2 0x3719 JUMP JUMPDEST PUSH2 0x3762 PUSH2 0x375A DUP3 PUSH2 0x373B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x36BD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3777 PUSH2 0x376A JUMP JUMPDEST PUSH2 0x3782 DUP2 DUP5 DUP5 PUSH2 0x3745 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37A6 JUMPI PUSH2 0x379B PUSH1 0x0 DUP3 PUSH2 0x376F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3788 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x37EB JUMPI PUSH2 0x37BC DUP2 PUSH2 0x368B JUMP JUMPDEST PUSH2 0x37C5 DUP5 PUSH2 0x36A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37D4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x37E8 PUSH2 0x37E0 DUP6 PUSH2 0x36A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3787 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x37F0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3827 DUP4 DUP4 PUSH2 0x37FD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3840 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3859 JUMPI PUSH2 0x3858 PUSH2 0x3345 JUMP JUMPDEST JUMPDEST PUSH2 0x3863 DUP3 SLOAD PUSH2 0x31D9 JUMP JUMPDEST PUSH2 0x386E DUP3 DUP3 DUP6 PUSH2 0x37AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38A1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x388F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3899 DUP6 DUP3 PUSH2 0x381B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x38AF DUP7 PUSH2 0x368B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38D7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x38F4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x38F0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x37FD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3965 PUSH1 0x30 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3970 DUP3 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3994 DUP2 PUSH2 0x3958 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D1 PUSH1 0x1F DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x39DC DUP3 PUSH2 0x399B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A00 DUP2 PUSH2 0x39C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A63 PUSH1 0x27 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A6E DUP3 PUSH2 0x3A07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A92 DUP2 PUSH2 0x3A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF5 PUSH1 0x26 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B00 DUP3 PUSH2 0x3A99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B24 DUP2 PUSH2 0x3AE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B87 PUSH1 0x26 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B92 DUP3 PUSH2 0x3B2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BB6 DUP2 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC8 DUP3 PUSH2 0x2ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD3 DUP4 PUSH2 0x2ADC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3BEB JUMPI PUSH2 0x3BEA PUSH2 0x320A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4D PUSH1 0x24 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C58 DUP3 PUSH2 0x3BF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C7C DUP2 PUSH2 0x3C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDF PUSH1 0x22 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CEA DUP3 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D0E DUP2 PUSH2 0x3CD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4B PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D56 DUP3 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7A DUP2 PUSH2 0x3D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DDD PUSH1 0x25 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DE8 DUP3 PUSH2 0x3D81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E0C DUP2 PUSH2 0x3DD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6F PUSH1 0x23 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E7A DUP3 PUSH2 0x3E13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E9E DUP2 PUSH2 0x3E62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F01 PUSH1 0x26 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F0C DUP3 PUSH2 0x3EA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F30 DUP2 PUSH2 0x3EF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5E DUP3 MLOAD PUSH2 0x2C3C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F72 DUP3 PUSH2 0x3F37 JUMP JUMPDEST DUP3 PUSH2 0x3F7C DUP5 PUSH2 0x3F42 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F87 DUP2 PUSH2 0x3F52 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x3FC7 JUMPI PUSH2 0x3FC2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x36B0 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FE3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x3FF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x400C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x4019 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x4026 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x4033 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x4040 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2C9D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4084 DUP3 PUSH2 0x2ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x408F DUP4 PUSH2 0x2ADC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x409F JUMPI PUSH2 0x409E PUSH2 0x404A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x40BF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x40CC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2C12 JUMP JUMPDEST PUSH2 0x40D9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x40E6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2C46 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4154 PUSH1 0x18 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x415F DUP3 PUSH2 0x411E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4183 DUP2 PUSH2 0x4147 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C0 PUSH1 0x1F DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x41CB DUP3 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41EF DUP2 PUSH2 0x41B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4252 PUSH1 0x22 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x425D DUP3 PUSH2 0x41F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4281 DUP2 PUSH2 0x4245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xE8 PUSH7 0xBC3C0CC20705F2 RETURNDATASIZE PUSH11 0x8A8ADF5B1B46076A527AA3 SWAP11 0xA6 SWAP5 SWAP15 0xDF LOG1 PUSH11 0xC28964736F6C6343000812 STOP CALLER ","sourceMap":"130:782:20:-:0;;;204:25;175:54;;236:143;;;;;;;;;;1817:52:6;;;;;;;;;;;;;;;;;1856:4;3178:431:16;;;;;;;;;;;;;;;;;1980:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;3251:45:16;3282:13;3251:4;:30;;;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;1817:52:6;342:30:20::2;348:10;360:11;;342:5;;;:30;;:::i;:::-;130:782:::0;;2895:341:12;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:16:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;646:113:20:-;729:23;741:2;745:6;729:11;;;;;:23;;:::i;:::-;646:113;;:::o;1689:286:12:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:13:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;7332:285:7:-;7416:28;7428:7;7437:6;7416:11;;;;;:28;;:::i;:::-;7479:12;:10;;;:12;;:::i;:::-;7462:29;;:13;:11;;;:13;;:::i;:::-;:29;;7454:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7555:55;7572:23;7597:4;;;;;7603:6;7555:16;;;:55;;:::i;:::-;;;7332:285;;:::o;8520:535:4:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;;;:49;;:::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;;;:48;;:::i;:::-;8520:535;;:::o;7140:103:7:-;7193:7;7219:17;7212:24;;7140:103;:::o;3255:106:4:-;3316:7;3342:12;;3335:19;;3255:106;:::o;10194:96:7:-;10252:7;10282:1;10278;:5;;;;:::i;:::-;10271:12;;10194:96;;;;:::o;9420:768::-;9590:17;9609;9638:11;9652:5;:12;;;;9638:26;;9699:25;9734:1;9727:3;:8;:59;;9757:29;9771:5;9784:1;9778:3;:7;9757:13;;;:29;;:::i;:::-;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;9749:1;9738:16;;;;;;9752:1;9738:16;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;;;:7;;:::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;;;;;:29;;:::i;:::-;9950;9964:5;9977:1;9971:3;:7;9950:13;;;:29;;:::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;;;:7;;:::i;:::-;10090:26;;:17;;;;;:26;;:::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;;;;;:29;;:::i;:::-;10067:89;;;;;10056:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;12073:91:4:-;;;;:::o;449:191:20:-;590:43;616:4;622:2;626:6;590:25;;;;;:43;;:::i;:::-;449:191;;;:::o;10540:239:7:-;10626:25;10696:10;10693:1;10686:21;10759:3;10752:4;10749:1;10739:18;10735:28;10720:43;;10540:239;;;;:::o;1817:118::-;1872:6;1897:31;1915:12;1897:17;;;;;:31;;:::i;:::-;1890:38;;1817:118;:::o;2836:192:18:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;8036:224:7:-;8143:43;8169:4;8175:2;8179:6;8143:25;;;;;:43;;:::i;:::-;8197:56;8214:15;8224:4;8214:9;;;:15;;:::i;:::-;8231:13;8241:2;8231:9;;;:13;;:::i;:::-;8246:6;8197:16;;;:56;;:::i;:::-;8036:224;;;:::o;14240:187:18:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;12752:90:4:-;;;;:::o;2838:126:7:-;2912:7;2938:10;:19;2949:7;2938:19;;;;;;;;;;;;;;;;;;;;;;;;;2931:26;;2838:126;;;:::o;8817:597::-;8914:3;8907:10;;:3;:10;;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;8966:1;8951:17;;:3;:17;;;8947:221;;8989:17;9008;9029:54;9046:12;:17;9059:3;9046:17;;;;;;;;;;;;;;;9065:9;;;;;9076:6;9029:16;;;:54;;:::i;:::-;8988:95;;;;9127:3;9106:47;;;9132:9;9143;9106:47;;;;;;;:::i;:::-;;;;;;;;8970:198;;8947:221;9201:1;9186:17;;:3;:17;;;9182:216;;9224:17;9243;9264:49;9281:12;:17;9294:3;9281:17;;;;;;;;;;;;;;;9300:4;;;;;9306:6;9264:16;;;:49;;:::i;:::-;9223:90;;;;9357:3;9336:47;;;9362:9;9373;9336:47;;;;;;;:::i;:::-;;;;;;;;9205:193;;9182:216;8903:505;8817:597;;;:::o;10296:101::-;10359:7;10389:1;10385;:5;;;;:::i;:::-;10378:12;;10296:101;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;8816:235::-;8956:34;8952:1;8944:6;8940:14;8933:58;9025:18;9020:2;9012:6;9008:15;9001:43;8816:235;:::o;9057:366::-;9199:3;9220:67;9284:2;9279:3;9220:67;:::i;:::-;9213:74;;9296:93;9385:3;9296:93;:::i;:::-;9414:2;9409:3;9405:12;9398:19;;9057:366;;;:::o;9429:419::-;9595:4;9633:2;9622:9;9618:18;9610:26;;9682:9;9676:4;9672:20;9668:1;9657:9;9653:17;9646:47;9710:131;9836:4;9710:131;:::i;:::-;9702:139;;9429:419;;;:::o;9854:181::-;9994:33;9990:1;9982:6;9978:14;9971:57;9854:181;:::o;10041:366::-;10183:3;10204:67;10268:2;10263:3;10204:67;:::i;:::-;10197:74;;10280:93;10369:3;10280:93;:::i;:::-;10398:2;10393:3;10389:12;10382:19;;10041:366;;;:::o;10413:419::-;10579:4;10617:2;10606:9;10602:18;10594:26;;10666:9;10660:4;10656:20;10652:1;10641:9;10637:17;10630:47;10694:131;10820:4;10694:131;:::i;:::-;10686:139;;10413:419;;;:::o;10838:180::-;10886:77;10883:1;10876:88;10983:4;10980:1;10973:15;11007:4;11004:1;10997:15;11024:191;11064:3;11083:20;11101:1;11083:20;:::i;:::-;11078:25;;11117:20;11135:1;11117:20;:::i;:::-;11112:25;;11160:1;11157;11153:9;11146:16;;11181:3;11178:1;11175:10;11172:36;;;11188:18;;:::i;:::-;11172:36;11024:191;;;;:::o;11221:222::-;11314:4;11352:2;11341:9;11337:18;11329:26;;11365:71;11433:1;11422:9;11418:17;11409:6;11365:71;:::i;:::-;11221:222;;;;:::o;11449:226::-;11589:34;11585:1;11577:6;11573:14;11566:58;11658:9;11653:2;11645:6;11641:15;11634:34;11449:226;:::o;11681:366::-;11823:3;11844:67;11908:2;11903:3;11844:67;:::i;:::-;11837:74;;11920:93;12009:3;11920:93;:::i;:::-;12038:2;12033:3;12029:12;12022:19;;11681:366;;;:::o;12053:419::-;12219:4;12257:2;12246:9;12242:18;12234:26;;12306:9;12300:4;12296:20;12292:1;12281:9;12277:17;12270:47;12334:131;12460:4;12334:131;:::i;:::-;12326:139;;12053:419;;;:::o;12478:225::-;12618:34;12614:1;12606:6;12602:14;12595:58;12687:8;12682:2;12674:6;12670:15;12663:33;12478:225;:::o;12709:366::-;12851:3;12872:67;12936:2;12931:3;12872:67;:::i;:::-;12865:74;;12948:93;13037:3;12948:93;:::i;:::-;13066:2;13061:3;13057:12;13050:19;;12709:366;;;:::o;13081:419::-;13247:4;13285:2;13274:9;13270:18;13262:26;;13334:9;13328:4;13324:20;13320:1;13309:9;13305:17;13298:47;13362:131;13488:4;13362:131;:::i;:::-;13354:139;;13081:419;;;:::o;13506:225::-;13646:34;13642:1;13634:6;13630:14;13623:58;13715:8;13710:2;13702:6;13698:15;13691:33;13506:225;:::o;13737:366::-;13879:3;13900:67;13964:2;13959:3;13900:67;:::i;:::-;13893:74;;13976:93;14065:3;13976:93;:::i;:::-;14094:2;14089:3;14085:12;14078:19;;13737:366;;;:::o;14109:419::-;14275:4;14313:2;14302:9;14298:18;14290:26;;14362:9;14356:4;14352:20;14348:1;14337:9;14333:17;14326:47;14390:131;14516:4;14390:131;:::i;:::-;14382:139;;14109:419;;;:::o;14534:332::-;14655:4;14693:2;14682:9;14678:18;14670:26;;14706:71;14774:1;14763:9;14759:17;14750:6;14706:71;:::i;:::-;14787:72;14855:2;14844:9;14840:18;14831:6;14787:72;:::i;:::-;14534:332;;;;;:::o;14872:194::-;14912:4;14932:20;14950:1;14932:20;:::i;:::-;14927:25;;14966:20;14984:1;14966:20;:::i;:::-;14961:25;;15010:1;15007;15003:9;14995:17;;15034:1;15028:4;15025:11;15022:37;;;15039:18;;:::i;:::-;15022:37;14872:194;;;;:::o;130:782:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_1032":{"entryPoint":1915,"id":1032,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_933":{"entryPoint":1682,"id":933,"parameterSlots":0,"returnSlots":1},"@_add_1667":{"entryPoint":4913,"id":1667,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1442":{"entryPoint":5125,"id":1442,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_5536":{"entryPoint":8537,"id":5536,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_712":{"entryPoint":5253,"id":712,"parameterSlots":3,"returnSlots":0},"@_approve_647":{"entryPoint":5288,"id":647,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_701":{"entryPoint":8532,"id":701,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2915":{"entryPoint":9058,"id":2915,"parameterSlots":0,"returnSlots":1},"@_checkpointsLookup_1270":{"entryPoint":6698,"id":1270,"parameterSlots":2,"returnSlots":1},"@_delegate_1481":{"entryPoint":7026,"id":1481,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_2894":{"entryPoint":6515,"id":2894,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2931":{"entryPoint":7498,"id":2931,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1357":{"entryPoint":7765,"id":1357,"parameterSlots":0,"returnSlots":1},"@_mint_1389":{"entryPoint":4430,"id":1389,"parameterSlots":2,"returnSlots":0},"@_mint_530":{"entryPoint":4571,"id":530,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1552":{"entryPoint":8553,"id":1552,"parameterSlots":3,"returnSlots":0},"@_msgSender_1770":{"entryPoint":5280,"id":1770,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_690":{"entryPoint":5745,"id":690,"parameterSlots":3,"returnSlots":0},"@_subtract_1681":{"entryPoint":5258,"id":1681,"parameterSlots":2,"returnSlots":1},"@_throwError_2463":{"entryPoint":9923,"id":2463,"parameterSlots":1,"returnSlots":0},"@_transfer_473":{"entryPoint":5885,"id":473,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_1696":{"entryPoint":9457,"id":1696,"parameterSlots":2,"returnSlots":1},"@_useNonce_962":{"entryPoint":7567,"id":962,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_1653":{"entryPoint":7801,"id":1653,"parameterSlots":3,"returnSlots":2},"@allowance_268":{"entryPoint":3945,"id":268,"parameterSlots":2,"returnSlots":1},"@approve_293":{"entryPoint":1581,"id":293,"parameterSlots":2,"returnSlots":1},"@average_3045":{"entryPoint":9478,"id":3045,"parameterSlots":2,"returnSlots":1},"@balanceOf_225":{"entryPoint":2272,"id":225,"parameterSlots":1,"returnSlots":1},"@byteLength_1971":{"entryPoint":10553,"id":1971,"parameterSlots":1,"returnSlots":1},"@checkpoints_1050":{"entryPoint":4080,"id":1050,"parameterSlots":2,"returnSlots":1},"@clock_1013":{"entryPoint":2783,"id":1013,"parameterSlots":0,"returnSlots":1},"@current_1798":{"entryPoint":7308,"id":1798,"parameterSlots":1,"returnSlots":1},"@decimals_201":{"entryPoint":1673,"id":201,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_396":{"entryPoint":3209,"id":396,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1344":{"entryPoint":3363,"id":1344,"parameterSlots":6,"returnSlots":0},"@delegate_1284":{"entryPoint":2162,"id":1284,"parameterSlots":1,"returnSlots":0},"@delegates_1081":{"entryPoint":2057,"id":1081,"parameterSlots":1,"returnSlots":1},"@eip712Domain_2978":{"entryPoint":2424,"id":2978,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_1163":{"entryPoint":2682,"id":1163,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1140":{"entryPoint":1752,"id":1140,"parameterSlots":2,"returnSlots":1},"@getStringSlot_2157":{"entryPoint":4420,"id":2157,"parameterSlots":1,"returnSlots":1},"@getVotes_1113":{"entryPoint":2945,"id":1113,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_355":{"entryPoint":1697,"id":355,"parameterSlots":2,"returnSlots":1},"@increment_1812":{"entryPoint":10281,"id":1812,"parameterSlots":1,"returnSlots":0},"@log2_3517":{"entryPoint":10303,"id":3517,"parameterSlots":1,"returnSlots":1},"@min_3022":{"entryPoint":10528,"id":3022,"parameterSlots":2,"returnSlots":1},"@name_181":{"entryPoint":1435,"id":181,"parameterSlots":0,"returnSlots":1},"@nonces_922":{"entryPoint":2344,"id":922,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1067":{"entryPoint":2188,"id":1067,"parameterSlots":1,"returnSlots":1},"@permit_906":{"entryPoint":3623,"id":906,"parameterSlots":7,"returnSlots":0},"@recover_2710":{"entryPoint":7524,"id":2710,"parameterSlots":4,"returnSlots":1},"@s_maxSupply_5499":{"entryPoint":2182,"id":5499,"parameterSlots":0,"returnSlots":0},"@sqrt_3349":{"entryPoint":9208,"id":3349,"parameterSlots":1,"returnSlots":1},"@symbol_191":{"entryPoint":2799,"id":191,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_2011":{"entryPoint":4352,"id":2011,"parameterSlots":2,"returnSlots":1},"@toShortString_1913":{"entryPoint":7661,"id":1913,"parameterSlots":1,"returnSlots":1},"@toStringWithFallback_2038":{"entryPoint":7322,"id":2038,"parameterSlots":2,"returnSlots":1},"@toString_1939":{"entryPoint":9516,"id":1939,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2754":{"entryPoint":9632,"id":2754,"parameterSlots":2,"returnSlots":1},"@toUint224_3948":{"entryPoint":4935,"id":3948,"parameterSlots":1,"returnSlots":1},"@toUint32_4548":{"entryPoint":5042,"id":4548,"parameterSlots":1,"returnSlots":1},"@toUint48_4498":{"entryPoint":5168,"id":4498,"parameterSlots":1,"returnSlots":1},"@totalSupply_211":{"entryPoint":1616,"id":211,"parameterSlots":0,"returnSlots":1},"@transferFrom_326":{"entryPoint":1626,"id":326,"parameterSlots":3,"returnSlots":1},"@transfer_250":{"entryPoint":3328,"id":250,"parameterSlots":2,"returnSlots":1},"@tryRecover_2677":{"entryPoint":9697,"id":2677,"parameterSlots":4,"returnSlots":2},"abi_decode_t_address":{"entryPoint":10951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":12074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":12485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":12030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12398,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11186,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":12236,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11026,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":12095,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":12506,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":11902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11102,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":11565,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11334,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":16711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":15970,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":13406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":16819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":13583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":15570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":15678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":13691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":16116,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":16965,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":15226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":13896,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":14680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":14934,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack":{"entryPoint":12950,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":15824,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":15080,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":15424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack":{"entryPoint":13058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":13298,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":14788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$980_memory_ptr_to_t_struct$_Checkpoint_$980_memory_ptr_fromStack":{"entryPoint":12640,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":12625,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11624,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11144,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":12570,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":11479,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":11965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":11282,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11770,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11349,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13758,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13473,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":16375,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":16554,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16005,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16854,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13618,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15605,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17000,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13931,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14715,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15859,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15115,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13333,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$980_memory_ptr__to_t_struct$_Checkpoint_$980_memory_ptr__fromStack_reversed":{"entryPoint":12687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16334,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":11494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":11980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":11297,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11608,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":16194,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":13963,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11580,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":16183,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10695,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11663,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11591,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10706,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12857,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":16505,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15293,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14250,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":10910,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11090,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":11521,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11324,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10878,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":12585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10972,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":11463,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":11947,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11269,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14215,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":16231,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":14105,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14391,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10723,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":13984,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":12761,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14363,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":14095,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14333,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12810,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":16458,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16623,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12714,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13172,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13125,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14139,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":16210,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10873,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10765,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14000,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14320,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14191,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":16670,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":15891,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":13365,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":16778,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":13542,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":15491,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":15637,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":13650,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":16037,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":16886,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":15147,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":13855,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":14601,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":14855,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72":{"entryPoint":12909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":15745,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":15001,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":15345,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df":{"entryPoint":13017,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":13219,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":14747,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14013,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14149,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10928,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12051,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10982,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":12462,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":12007,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14186,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47029:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3898:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:21"},"nodeType":"YulFunctionCall","src":"3946:79:21"},"nodeType":"YulExpressionStatement","src":"3946:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:21"},"nodeType":"YulFunctionCall","src":"3915:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:21"},"nodeType":"YulFunctionCall","src":"3911:32:21"},"nodeType":"YulIf","src":"3908:119:21"},{"nodeType":"YulBlock","src":"4037:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:21"},"nodeType":"YulFunctionCall","src":"4112:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:21"},"nodeType":"YulFunctionCall","src":"4091:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:21"}]}]},{"nodeType":"YulBlock","src":"4164:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:21"},"nodeType":"YulFunctionCall","src":"4240:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:21"},"nodeType":"YulFunctionCall","src":"4219:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:21"}]}]},{"nodeType":"YulBlock","src":"4292:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:21"},"nodeType":"YulFunctionCall","src":"4347:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:21","type":""}],"src":"3798:619:21"},{"body":{"nodeType":"YulBlock","src":"4466:43:21","statements":[{"nodeType":"YulAssignment","src":"4476:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:21"},"nodeType":"YulFunctionCall","src":"4487:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:21","type":""}],"src":"4423:86:21"},{"body":{"nodeType":"YulBlock","src":"4576:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:21"},"nodeType":"YulFunctionCall","src":"4598:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:21"},"nodeType":"YulFunctionCall","src":"4586:35:21"},"nodeType":"YulExpressionStatement","src":"4586:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:21","type":""}],"src":"4515:112:21"},{"body":{"nodeType":"YulBlock","src":"4727:120:21","statements":[{"nodeType":"YulAssignment","src":"4737:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:21"},"nodeType":"YulFunctionCall","src":"4745:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:21"},"nodeType":"YulFunctionCall","src":"4822:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:21"},"nodeType":"YulFunctionCall","src":"4773:67:21"},"nodeType":"YulExpressionStatement","src":"4773:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:21","type":""}],"src":"4633:214:21"},{"body":{"nodeType":"YulBlock","src":"4898:32:21","statements":[{"nodeType":"YulAssignment","src":"4908:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:21","type":""}],"src":"4853:77:21"},{"body":{"nodeType":"YulBlock","src":"5001:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:21"},"nodeType":"YulFunctionCall","src":"5023:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:21"},"nodeType":"YulFunctionCall","src":"5011:37:21"},"nodeType":"YulExpressionStatement","src":"5011:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:21","type":""}],"src":"4936:118:21"},{"body":{"nodeType":"YulBlock","src":"5158:124:21","statements":[{"nodeType":"YulAssignment","src":"5168:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:21"},"nodeType":"YulFunctionCall","src":"5176:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:21"},"nodeType":"YulFunctionCall","src":"5257:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:21"},"nodeType":"YulFunctionCall","src":"5204:71:21"},"nodeType":"YulExpressionStatement","src":"5204:71:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:21","type":""}],"src":"5060:222:21"},{"body":{"nodeType":"YulBlock","src":"5354:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:21"},"nodeType":"YulFunctionCall","src":"5402:79:21"},"nodeType":"YulExpressionStatement","src":"5402:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:21"},"nodeType":"YulFunctionCall","src":"5371:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:21"},"nodeType":"YulFunctionCall","src":"5367:32:21"},"nodeType":"YulIf","src":"5364:119:21"},{"nodeType":"YulBlock","src":"5493:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:21"},"nodeType":"YulFunctionCall","src":"5568:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5547:20:21"},"nodeType":"YulFunctionCall","src":"5547:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:21","type":""}],"src":"5288:329:21"},{"body":{"nodeType":"YulBlock","src":"5688:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5728:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5710:17:21"},"nodeType":"YulFunctionCall","src":"5710:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5698:6:21"},"nodeType":"YulFunctionCall","src":"5698:37:21"},"nodeType":"YulExpressionStatement","src":"5698:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5676:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5683:3:21","type":""}],"src":"5623:118:21"},{"body":{"nodeType":"YulBlock","src":"5845:124:21","statements":[{"nodeType":"YulAssignment","src":"5855:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5878:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5863:3:21"},"nodeType":"YulFunctionCall","src":"5863:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5855:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5935:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5959:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:21"},"nodeType":"YulFunctionCall","src":"5944:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5891:43:21"},"nodeType":"YulFunctionCall","src":"5891:71:21"},"nodeType":"YulExpressionStatement","src":"5891:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5817:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5829:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5840:4:21","type":""}],"src":"5747:222:21"},{"body":{"nodeType":"YulBlock","src":"6019:49:21","statements":[{"nodeType":"YulAssignment","src":"6029:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6044:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6051:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6040:3:21"},"nodeType":"YulFunctionCall","src":"6040:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6029:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6001:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6011:7:21","type":""}],"src":"5975:93:21"},{"body":{"nodeType":"YulBlock","src":"6137:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6154:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6176:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6159:16:21"},"nodeType":"YulFunctionCall","src":"6159:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6147:6:21"},"nodeType":"YulFunctionCall","src":"6147:36:21"},"nodeType":"YulExpressionStatement","src":"6147:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6125:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6132:3:21","type":""}],"src":"6074:115:21"},{"body":{"nodeType":"YulBlock","src":"6291:122:21","statements":[{"nodeType":"YulAssignment","src":"6301:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6313:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6324:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6309:3:21"},"nodeType":"YulFunctionCall","src":"6309:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6301:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6379:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6392:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6403:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6388:3:21"},"nodeType":"YulFunctionCall","src":"6388:17:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6337:41:21"},"nodeType":"YulFunctionCall","src":"6337:69:21"},"nodeType":"YulExpressionStatement","src":"6337:69:21"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6263:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6275:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6286:4:21","type":""}],"src":"6195:218:21"},{"body":{"nodeType":"YulBlock","src":"6463:105:21","statements":[{"nodeType":"YulAssignment","src":"6473:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6488:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6495:66:21","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6484:3:21"},"nodeType":"YulFunctionCall","src":"6484:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6473:7:21"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6445:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6455:7:21","type":""}],"src":"6419:149:21"},{"body":{"nodeType":"YulBlock","src":"6637:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6654:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6676:5:21"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6659:16:21"},"nodeType":"YulFunctionCall","src":"6659:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6647:6:21"},"nodeType":"YulFunctionCall","src":"6647:36:21"},"nodeType":"YulExpressionStatement","src":"6647:36:21"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6625:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6632:3:21","type":""}],"src":"6574:115:21"},{"body":{"nodeType":"YulBlock","src":"6769:40:21","statements":[{"nodeType":"YulAssignment","src":"6780:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6796:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6790:5:21"},"nodeType":"YulFunctionCall","src":"6790:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6780:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6752:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6762:6:21","type":""}],"src":"6695:114:21"},{"body":{"nodeType":"YulBlock","src":"6926:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6943:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"6948:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6936:6:21"},"nodeType":"YulFunctionCall","src":"6936:19:21"},"nodeType":"YulExpressionStatement","src":"6936:19:21"},{"nodeType":"YulAssignment","src":"6964:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6983:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6988:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6979:3:21"},"nodeType":"YulFunctionCall","src":"6979:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6964:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6898:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"6903:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6914:11:21","type":""}],"src":"6815:184:21"},{"body":{"nodeType":"YulBlock","src":"7077:60:21","statements":[{"nodeType":"YulAssignment","src":"7087:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7095:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7087:4:21"}]},{"nodeType":"YulAssignment","src":"7108:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7120:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7116:3:21"},"nodeType":"YulFunctionCall","src":"7116:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7108:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7064:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7072:4:21","type":""}],"src":"7005:132:21"},{"body":{"nodeType":"YulBlock","src":"7198:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7215:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7238:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7220:17:21"},"nodeType":"YulFunctionCall","src":"7220:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7208:6:21"},"nodeType":"YulFunctionCall","src":"7208:37:21"},"nodeType":"YulExpressionStatement","src":"7208:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7186:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7193:3:21","type":""}],"src":"7143:108:21"},{"body":{"nodeType":"YulBlock","src":"7337:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7381:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"7389:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7347:33:21"},"nodeType":"YulFunctionCall","src":"7347:46:21"},"nodeType":"YulExpressionStatement","src":"7347:46:21"},{"nodeType":"YulAssignment","src":"7402:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7420:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7416:3:21"},"nodeType":"YulFunctionCall","src":"7416:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7402:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7310:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7318:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7326:10:21","type":""}],"src":"7257:179:21"},{"body":{"nodeType":"YulBlock","src":"7517:38:21","statements":[{"nodeType":"YulAssignment","src":"7527:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7539:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7544:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:21"},"nodeType":"YulFunctionCall","src":"7535:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7527:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7504:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7512:4:21","type":""}],"src":"7442:113:21"},{"body":{"nodeType":"YulBlock","src":"7715:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7725:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7787:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7739:47:21"},"nodeType":"YulFunctionCall","src":"7739:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7729:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7802:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7883:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"7888:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7809:73:21"},"nodeType":"YulFunctionCall","src":"7809:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7802:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"7904:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7969:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7919:49:21"},"nodeType":"YulFunctionCall","src":"7919:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7908:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7984:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7998:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7988:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8074:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8088:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8115:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8109:5:21"},"nodeType":"YulFunctionCall","src":"8109:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8092:13:21","type":""}]},{"nodeType":"YulAssignment","src":"8135:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8186:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"8201:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8142:43:21"},"nodeType":"YulFunctionCall","src":"8142:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8135:3:21"}]},{"nodeType":"YulAssignment","src":"8218:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8281:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8228:52:21"},"nodeType":"YulFunctionCall","src":"8228:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8218:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8036:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"8039:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8033:2:21"},"nodeType":"YulFunctionCall","src":"8033:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8047:18:21","statements":[{"nodeType":"YulAssignment","src":"8049:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8058:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"8061:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8054:3:21"},"nodeType":"YulFunctionCall","src":"8054:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8049:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"8018:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8020:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8029:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8024:1:21","type":""}]}]},"src":"8014:284:21"},{"nodeType":"YulAssignment","src":"8307:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"8314:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8307:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7694:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7701:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7710:3:21","type":""}],"src":"7591:732:21"},{"body":{"nodeType":"YulBlock","src":"8683:861:21","statements":[{"nodeType":"YulAssignment","src":"8693:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8705:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8716:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8701:3:21"},"nodeType":"YulFunctionCall","src":"8701:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8693:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8785:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8796:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8781:3:21"},"nodeType":"YulFunctionCall","src":"8781:17:21"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8730:41:21"},"nodeType":"YulFunctionCall","src":"8730:69:21"},"nodeType":"YulExpressionStatement","src":"8730:69:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8820:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8831:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8816:3:21"},"nodeType":"YulFunctionCall","src":"8816:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8840:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8846:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8836:3:21"},"nodeType":"YulFunctionCall","src":"8836:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8809:6:21"},"nodeType":"YulFunctionCall","src":"8809:48:21"},"nodeType":"YulExpressionStatement","src":"8809:48:21"},{"nodeType":"YulAssignment","src":"8866:86:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8938:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"8947:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:63:21"},"nodeType":"YulFunctionCall","src":"8874:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8866:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8984:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:21"},"nodeType":"YulFunctionCall","src":"8969:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8993:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8999:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8989:3:21"},"nodeType":"YulFunctionCall","src":"8989:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8962:6:21"},"nodeType":"YulFunctionCall","src":"8962:48:21"},"nodeType":"YulExpressionStatement","src":"8962:48:21"},{"nodeType":"YulAssignment","src":"9019:86:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9091:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"9100:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9027:63:21"},"nodeType":"YulFunctionCall","src":"9027:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9019:4:21"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9159:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9172:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9183:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:21"},"nodeType":"YulFunctionCall","src":"9168:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9115:43:21"},"nodeType":"YulFunctionCall","src":"9115:72:21"},"nodeType":"YulExpressionStatement","src":"9115:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9241:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9254:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9265:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9250:3:21"},"nodeType":"YulFunctionCall","src":"9250:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9197:43:21"},"nodeType":"YulFunctionCall","src":"9197:73:21"},"nodeType":"YulExpressionStatement","src":"9197:73:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9324:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9337:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9348:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9333:3:21"},"nodeType":"YulFunctionCall","src":"9333:19:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9280:43:21"},"nodeType":"YulFunctionCall","src":"9280:73:21"},"nodeType":"YulExpressionStatement","src":"9280:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9374:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9385:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9370:3:21"},"nodeType":"YulFunctionCall","src":"9370:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9395:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9401:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9391:3:21"},"nodeType":"YulFunctionCall","src":"9391:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9363:6:21"},"nodeType":"YulFunctionCall","src":"9363:49:21"},"nodeType":"YulExpressionStatement","src":"9363:49:21"},{"nodeType":"YulAssignment","src":"9421:116:21","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9523:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"9532:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9429:93:21"},"nodeType":"YulFunctionCall","src":"9429:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9421:4:21"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8607:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8619:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8627:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8635:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8643:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8651:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8659:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8667:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8678:4:21","type":""}],"src":"8329:1215:21"},{"body":{"nodeType":"YulBlock","src":"9616:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"9662:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9664:77:21"},"nodeType":"YulFunctionCall","src":"9664:79:21"},"nodeType":"YulExpressionStatement","src":"9664:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9637:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9646:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9633:3:21"},"nodeType":"YulFunctionCall","src":"9633:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9658:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9629:3:21"},"nodeType":"YulFunctionCall","src":"9629:32:21"},"nodeType":"YulIf","src":"9626:119:21"},{"nodeType":"YulBlock","src":"9755:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9770:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9784:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9774:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9799:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9834:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9845:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9830:3:21"},"nodeType":"YulFunctionCall","src":"9830:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9854:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9809:20:21"},"nodeType":"YulFunctionCall","src":"9809:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9799:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9586:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9597:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9609:6:21","type":""}],"src":"9550:329:21"},{"body":{"nodeType":"YulBlock","src":"9929:53:21","statements":[{"nodeType":"YulAssignment","src":"9939:37:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9954:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9961:14:21","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9950:3:21"},"nodeType":"YulFunctionCall","src":"9950:26:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9939:7:21"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9911:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9921:7:21","type":""}],"src":"9885:97:21"},{"body":{"nodeType":"YulBlock","src":"10051:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10068:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10090:5:21"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"10073:16:21"},"nodeType":"YulFunctionCall","src":"10073:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:21"},"nodeType":"YulFunctionCall","src":"10061:36:21"},"nodeType":"YulExpressionStatement","src":"10061:36:21"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10039:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10046:3:21","type":""}],"src":"9988:115:21"},{"body":{"nodeType":"YulBlock","src":"10205:122:21","statements":[{"nodeType":"YulAssignment","src":"10215:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:21"},"nodeType":"YulFunctionCall","src":"10223:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10215:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10293:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10317:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10302:3:21"},"nodeType":"YulFunctionCall","src":"10302:17:21"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"10251:41:21"},"nodeType":"YulFunctionCall","src":"10251:69:21"},"nodeType":"YulExpressionStatement","src":"10251:69:21"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10177:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10189:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:21","type":""}],"src":"10109:218:21"},{"body":{"nodeType":"YulBlock","src":"10374:77:21","statements":[{"body":{"nodeType":"YulBlock","src":"10429:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:21"},"nodeType":"YulFunctionCall","src":"10431:12:21"},"nodeType":"YulExpressionStatement","src":"10431:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10397:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10420:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"10404:15:21"},"nodeType":"YulFunctionCall","src":"10404:22:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10394:2:21"},"nodeType":"YulFunctionCall","src":"10394:33:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10387:6:21"},"nodeType":"YulFunctionCall","src":"10387:41:21"},"nodeType":"YulIf","src":"10384:61:21"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10367:5:21","type":""}],"src":"10333:118:21"},{"body":{"nodeType":"YulBlock","src":"10507:85:21","statements":[{"nodeType":"YulAssignment","src":"10517:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10539:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10526:12:21"},"nodeType":"YulFunctionCall","src":"10526:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10517:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10580:5:21"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"10555:24:21"},"nodeType":"YulFunctionCall","src":"10555:31:21"},"nodeType":"YulExpressionStatement","src":"10555:31:21"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10485:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"10493:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10501:5:21","type":""}],"src":"10457:135:21"},{"body":{"nodeType":"YulBlock","src":"10641:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"10698:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10707:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10710:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10700:6:21"},"nodeType":"YulFunctionCall","src":"10700:12:21"},"nodeType":"YulExpressionStatement","src":"10700:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10664:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10689:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10671:17:21"},"nodeType":"YulFunctionCall","src":"10671:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10661:2:21"},"nodeType":"YulFunctionCall","src":"10661:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10654:6:21"},"nodeType":"YulFunctionCall","src":"10654:43:21"},"nodeType":"YulIf","src":"10651:63:21"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10634:5:21","type":""}],"src":"10598:122:21"},{"body":{"nodeType":"YulBlock","src":"10778:87:21","statements":[{"nodeType":"YulAssignment","src":"10788:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10810:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10797:12:21"},"nodeType":"YulFunctionCall","src":"10797:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10788:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10853:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10826:26:21"},"nodeType":"YulFunctionCall","src":"10826:33:21"},"nodeType":"YulExpressionStatement","src":"10826:33:21"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10756:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"10764:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10772:5:21","type":""}],"src":"10726:139:21"},{"body":{"nodeType":"YulBlock","src":"11020:904:21","statements":[{"body":{"nodeType":"YulBlock","src":"11067:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11069:77:21"},"nodeType":"YulFunctionCall","src":"11069:79:21"},"nodeType":"YulExpressionStatement","src":"11069:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11041:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11050:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11037:3:21"},"nodeType":"YulFunctionCall","src":"11037:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11062:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11033:3:21"},"nodeType":"YulFunctionCall","src":"11033:33:21"},"nodeType":"YulIf","src":"11030:120:21"},{"nodeType":"YulBlock","src":"11160:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11175:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11189:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11179:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11204:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11239:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11250:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11235:3:21"},"nodeType":"YulFunctionCall","src":"11235:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11259:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11214:20:21"},"nodeType":"YulFunctionCall","src":"11214:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11204:6:21"}]}]},{"nodeType":"YulBlock","src":"11287:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11302:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11316:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11306:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11332:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11367:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11378:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11363:3:21"},"nodeType":"YulFunctionCall","src":"11363:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11387:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11342:20:21"},"nodeType":"YulFunctionCall","src":"11342:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11332:6:21"}]}]},{"nodeType":"YulBlock","src":"11415:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11430:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11444:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11434:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11460:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11495:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11506:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11491:3:21"},"nodeType":"YulFunctionCall","src":"11491:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11515:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11470:20:21"},"nodeType":"YulFunctionCall","src":"11470:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11460:6:21"}]}]},{"nodeType":"YulBlock","src":"11543:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11558:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11572:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11562:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11588:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11621:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11632:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11617:3:21"},"nodeType":"YulFunctionCall","src":"11617:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11641:7:21"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"11598:18:21"},"nodeType":"YulFunctionCall","src":"11598:51:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11588:6:21"}]}]},{"nodeType":"YulBlock","src":"11669:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11684:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11698:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11688:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11715:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11750:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11761:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11746:3:21"},"nodeType":"YulFunctionCall","src":"11746:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11770:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11725:20:21"},"nodeType":"YulFunctionCall","src":"11725:53:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11715:6:21"}]}]},{"nodeType":"YulBlock","src":"11798:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11813:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11827:3:21","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11817:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11844:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11879:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11890:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11875:3:21"},"nodeType":"YulFunctionCall","src":"11875:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11899:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11854:20:21"},"nodeType":"YulFunctionCall","src":"11854:53:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11844:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10950:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10961:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10973:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10981:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10989:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10997:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11005:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11013:6:21","type":""}],"src":"10871:1053:21"},{"body":{"nodeType":"YulBlock","src":"12096:1033:21","statements":[{"body":{"nodeType":"YulBlock","src":"12143:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12145:77:21"},"nodeType":"YulFunctionCall","src":"12145:79:21"},"nodeType":"YulExpressionStatement","src":"12145:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12117:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12126:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12113:3:21"},"nodeType":"YulFunctionCall","src":"12113:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12138:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12109:3:21"},"nodeType":"YulFunctionCall","src":"12109:33:21"},"nodeType":"YulIf","src":"12106:120:21"},{"nodeType":"YulBlock","src":"12236:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12251:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12265:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12255:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12280:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12315:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12326:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12311:3:21"},"nodeType":"YulFunctionCall","src":"12311:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12335:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12290:20:21"},"nodeType":"YulFunctionCall","src":"12290:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12280:6:21"}]}]},{"nodeType":"YulBlock","src":"12363:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12378:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12392:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12382:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12408:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12443:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12454:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12439:3:21"},"nodeType":"YulFunctionCall","src":"12439:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12463:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12418:20:21"},"nodeType":"YulFunctionCall","src":"12418:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12408:6:21"}]}]},{"nodeType":"YulBlock","src":"12491:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12506:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12520:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12510:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12536:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12571:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12582:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12567:3:21"},"nodeType":"YulFunctionCall","src":"12567:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12591:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12546:20:21"},"nodeType":"YulFunctionCall","src":"12546:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12536:6:21"}]}]},{"nodeType":"YulBlock","src":"12619:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12634:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12648:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12638:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12664:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12699:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12710:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12695:3:21"},"nodeType":"YulFunctionCall","src":"12695:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12719:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12674:20:21"},"nodeType":"YulFunctionCall","src":"12674:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12664:6:21"}]}]},{"nodeType":"YulBlock","src":"12747:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12762:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12776:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12766:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12793:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12826:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12837:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12822:3:21"},"nodeType":"YulFunctionCall","src":"12822:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12846:7:21"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"12803:18:21"},"nodeType":"YulFunctionCall","src":"12803:51:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12793:6:21"}]}]},{"nodeType":"YulBlock","src":"12874:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12889:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12903:3:21","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12893:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12920:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12955:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12966:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12951:3:21"},"nodeType":"YulFunctionCall","src":"12951:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12975:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12930:20:21"},"nodeType":"YulFunctionCall","src":"12930:53:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12920:6:21"}]}]},{"nodeType":"YulBlock","src":"13003:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13018:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13032:3:21","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13022:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13049:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13084:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13095:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13080:3:21"},"nodeType":"YulFunctionCall","src":"13080:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13104:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13059:20:21"},"nodeType":"YulFunctionCall","src":"13059:53:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13049:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12018:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12029:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12041:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12049:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12057:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12065:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12073:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12081:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12089:6:21","type":""}],"src":"11930:1199:21"},{"body":{"nodeType":"YulBlock","src":"13218:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"13264:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13266:77:21"},"nodeType":"YulFunctionCall","src":"13266:79:21"},"nodeType":"YulExpressionStatement","src":"13266:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13239:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13248:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13235:3:21"},"nodeType":"YulFunctionCall","src":"13235:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13260:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13231:3:21"},"nodeType":"YulFunctionCall","src":"13231:32:21"},"nodeType":"YulIf","src":"13228:119:21"},{"nodeType":"YulBlock","src":"13357:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13372:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13386:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13376:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13401:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13436:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13447:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13432:3:21"},"nodeType":"YulFunctionCall","src":"13432:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13456:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13411:20:21"},"nodeType":"YulFunctionCall","src":"13411:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13401:6:21"}]}]},{"nodeType":"YulBlock","src":"13484:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13499:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13513:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13503:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13529:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13564:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13575:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13560:3:21"},"nodeType":"YulFunctionCall","src":"13560:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13584:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13539:20:21"},"nodeType":"YulFunctionCall","src":"13539:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13529:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13180:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13191:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13203:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13211:6:21","type":""}],"src":"13135:474:21"},{"body":{"nodeType":"YulBlock","src":"13657:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"13713:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13722:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13725:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13715:6:21"},"nodeType":"YulFunctionCall","src":"13715:12:21"},"nodeType":"YulExpressionStatement","src":"13715:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13680:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13704:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13687:16:21"},"nodeType":"YulFunctionCall","src":"13687:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13677:2:21"},"nodeType":"YulFunctionCall","src":"13677:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13670:6:21"},"nodeType":"YulFunctionCall","src":"13670:42:21"},"nodeType":"YulIf","src":"13667:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13650:5:21","type":""}],"src":"13615:120:21"},{"body":{"nodeType":"YulBlock","src":"13792:86:21","statements":[{"nodeType":"YulAssignment","src":"13802:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13824:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13811:12:21"},"nodeType":"YulFunctionCall","src":"13811:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13802:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13866:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"13840:25:21"},"nodeType":"YulFunctionCall","src":"13840:32:21"},"nodeType":"YulExpressionStatement","src":"13840:32:21"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13770:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13778:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13786:5:21","type":""}],"src":"13741:137:21"},{"body":{"nodeType":"YulBlock","src":"13966:390:21","statements":[{"body":{"nodeType":"YulBlock","src":"14012:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14014:77:21"},"nodeType":"YulFunctionCall","src":"14014:79:21"},"nodeType":"YulExpressionStatement","src":"14014:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13987:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13996:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13983:3:21"},"nodeType":"YulFunctionCall","src":"13983:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14008:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13979:3:21"},"nodeType":"YulFunctionCall","src":"13979:32:21"},"nodeType":"YulIf","src":"13976:119:21"},{"nodeType":"YulBlock","src":"14105:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14120:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14134:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14124:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14149:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14184:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14195:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14180:3:21"},"nodeType":"YulFunctionCall","src":"14180:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14204:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14159:20:21"},"nodeType":"YulFunctionCall","src":"14159:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14149:6:21"}]}]},{"nodeType":"YulBlock","src":"14232:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14247:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14261:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14251:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14277:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14311:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14322:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:21"},"nodeType":"YulFunctionCall","src":"14307:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14331:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"14287:19:21"},"nodeType":"YulFunctionCall","src":"14287:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14277:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13928:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13939:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13951:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13959:6:21","type":""}],"src":"13884:472:21"},{"body":{"nodeType":"YulBlock","src":"14415:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14432:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14454:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"14437:16:21"},"nodeType":"YulFunctionCall","src":"14437:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14425:6:21"},"nodeType":"YulFunctionCall","src":"14425:36:21"},"nodeType":"YulExpressionStatement","src":"14425:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14403:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14410:3:21","type":""}],"src":"14362:105:21"},{"body":{"nodeType":"YulBlock","src":"14518:97:21","statements":[{"nodeType":"YulAssignment","src":"14528:81:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14543:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14550:58:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14539:3:21"},"nodeType":"YulFunctionCall","src":"14539:70:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14528:7:21"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14500:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14510:7:21","type":""}],"src":"14473:142:21"},{"body":{"nodeType":"YulBlock","src":"14676:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14693:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14716:5:21"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"14698:17:21"},"nodeType":"YulFunctionCall","src":"14698:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14686:6:21"},"nodeType":"YulFunctionCall","src":"14686:37:21"},"nodeType":"YulExpressionStatement","src":"14686:37:21"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14664:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14671:3:21","type":""}],"src":"14621:108:21"},{"body":{"nodeType":"YulBlock","src":"14923:395:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14933:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14949:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14954:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14945:3:21"},"nodeType":"YulFunctionCall","src":"14945:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14937:4:21","type":""}]},{"nodeType":"YulBlock","src":"14969:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15009:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15039:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15046:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15035:3:21"},"nodeType":"YulFunctionCall","src":"15035:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15029:5:21"},"nodeType":"YulFunctionCall","src":"15029:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15013:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15097:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15115:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15120:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15111:3:21"},"nodeType":"YulFunctionCall","src":"15111:14:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"15065:31:21"},"nodeType":"YulFunctionCall","src":"15065:61:21"},"nodeType":"YulExpressionStatement","src":"15065:61:21"}]},{"nodeType":"YulBlock","src":"15146:165:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15182:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15212:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"15219:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15208:3:21"},"nodeType":"YulFunctionCall","src":"15208:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15202:5:21"},"nodeType":"YulFunctionCall","src":"15202:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15186:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15272:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15290:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15295:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15286:3:21"},"nodeType":"YulFunctionCall","src":"15286:14:21"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"15238:33:21"},"nodeType":"YulFunctionCall","src":"15238:63:21"},"nodeType":"YulExpressionStatement","src":"15238:63:21"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$980_memory_ptr_to_t_struct$_Checkpoint_$980_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14910:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14917:3:21","type":""}],"src":"14803:515:21"},{"body":{"nodeType":"YulBlock","src":"15476:178:21","statements":[{"nodeType":"YulAssignment","src":"15486:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15498:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15509:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15494:3:21"},"nodeType":"YulFunctionCall","src":"15494:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15486:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15620:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15633:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15644:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15629:3:21"},"nodeType":"YulFunctionCall","src":"15629:17:21"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$980_memory_ptr_to_t_struct$_Checkpoint_$980_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15522:97:21"},"nodeType":"YulFunctionCall","src":"15522:125:21"},"nodeType":"YulExpressionStatement","src":"15522:125:21"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$980_memory_ptr__to_t_struct$_Checkpoint_$980_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15448:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15460:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15471:4:21","type":""}],"src":"15324:330:21"},{"body":{"nodeType":"YulBlock","src":"15688:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15705:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15708:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15698:6:21"},"nodeType":"YulFunctionCall","src":"15698:88:21"},"nodeType":"YulExpressionStatement","src":"15698:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15802:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15805:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15795:6:21"},"nodeType":"YulFunctionCall","src":"15795:15:21"},"nodeType":"YulExpressionStatement","src":"15795:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15826:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15829:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15819:6:21"},"nodeType":"YulFunctionCall","src":"15819:15:21"},"nodeType":"YulExpressionStatement","src":"15819:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15660:180:21"},{"body":{"nodeType":"YulBlock","src":"15897:269:21","statements":[{"nodeType":"YulAssignment","src":"15907:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15921:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"15927:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15917:3:21"},"nodeType":"YulFunctionCall","src":"15917:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15907:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"15938:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15968:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"15974:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15964:3:21"},"nodeType":"YulFunctionCall","src":"15964:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15942:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16015:51:21","statements":[{"nodeType":"YulAssignment","src":"16029:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16043:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16051:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16039:3:21"},"nodeType":"YulFunctionCall","src":"16039:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16029:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15995:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15988:6:21"},"nodeType":"YulFunctionCall","src":"15988:26:21"},"nodeType":"YulIf","src":"15985:81:21"},{"body":{"nodeType":"YulBlock","src":"16118:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16132:16:21"},"nodeType":"YulFunctionCall","src":"16132:18:21"},"nodeType":"YulExpressionStatement","src":"16132:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16082:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16105:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16113:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16102:2:21"},"nodeType":"YulFunctionCall","src":"16102:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16079:2:21"},"nodeType":"YulFunctionCall","src":"16079:38:21"},"nodeType":"YulIf","src":"16076:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15881:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15890:6:21","type":""}],"src":"15846:320:21"},{"body":{"nodeType":"YulBlock","src":"16200:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16217:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16220:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16210:6:21"},"nodeType":"YulFunctionCall","src":"16210:88:21"},"nodeType":"YulExpressionStatement","src":"16210:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16314:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16317:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16307:6:21"},"nodeType":"YulFunctionCall","src":"16307:15:21"},"nodeType":"YulExpressionStatement","src":"16307:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16338:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16341:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16331:6:21"},"nodeType":"YulFunctionCall","src":"16331:15:21"},"nodeType":"YulExpressionStatement","src":"16331:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16172:180:21"},{"body":{"nodeType":"YulBlock","src":"16402:147:21","statements":[{"nodeType":"YulAssignment","src":"16412:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16435:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16417:17:21"},"nodeType":"YulFunctionCall","src":"16417:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16412:1:21"}]},{"nodeType":"YulAssignment","src":"16446:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16469:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16451:17:21"},"nodeType":"YulFunctionCall","src":"16451:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16446:1:21"}]},{"nodeType":"YulAssignment","src":"16480:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16491:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"16494:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16487:3:21"},"nodeType":"YulFunctionCall","src":"16487:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16480:3:21"}]},{"body":{"nodeType":"YulBlock","src":"16520:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16522:16:21"},"nodeType":"YulFunctionCall","src":"16522:18:21"},"nodeType":"YulExpressionStatement","src":"16522:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16512:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"16515:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16509:2:21"},"nodeType":"YulFunctionCall","src":"16509:10:21"},"nodeType":"YulIf","src":"16506:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16389:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"16392:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16398:3:21","type":""}],"src":"16358:191:21"},{"body":{"nodeType":"YulBlock","src":"16661:69:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16683:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16691:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:21"},"nodeType":"YulFunctionCall","src":"16679:14:21"},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","kind":"string","nodeType":"YulLiteral","src":"16695:27:21","type":"","value":"ERC20Votes: future lookup"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16672:6:21"},"nodeType":"YulFunctionCall","src":"16672:51:21"},"nodeType":"YulExpressionStatement","src":"16672:51:21"}]},"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16653:6:21","type":""}],"src":"16555:175:21"},{"body":{"nodeType":"YulBlock","src":"16882:220:21","statements":[{"nodeType":"YulAssignment","src":"16892:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16958:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16963:2:21","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16899:58:21"},"nodeType":"YulFunctionCall","src":"16899:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16892:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17064:3:21"}],"functionName":{"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulIdentifier","src":"16975:88:21"},"nodeType":"YulFunctionCall","src":"16975:93:21"},"nodeType":"YulExpressionStatement","src":"16975:93:21"},{"nodeType":"YulAssignment","src":"17077:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17088:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17093:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17084:3:21"},"nodeType":"YulFunctionCall","src":"17084:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17077:3:21"}]}]},"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16870:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16878:3:21","type":""}],"src":"16736:366:21"},{"body":{"nodeType":"YulBlock","src":"17279:248:21","statements":[{"nodeType":"YulAssignment","src":"17289:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17301:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17312:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17297:3:21"},"nodeType":"YulFunctionCall","src":"17297:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17289:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17336:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17347:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17332:3:21"},"nodeType":"YulFunctionCall","src":"17332:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17355:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17361:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17351:3:21"},"nodeType":"YulFunctionCall","src":"17351:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17325:6:21"},"nodeType":"YulFunctionCall","src":"17325:47:21"},"nodeType":"YulExpressionStatement","src":"17325:47:21"},{"nodeType":"YulAssignment","src":"17381:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17515:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17389:124:21"},"nodeType":"YulFunctionCall","src":"17389:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17381:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17259:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17274:4:21","type":""}],"src":"17108:419:21"},{"body":{"nodeType":"YulBlock","src":"17639:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17661:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"17669:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17657:3:21"},"nodeType":"YulFunctionCall","src":"17657:14:21"},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","kind":"string","nodeType":"YulLiteral","src":"17673:31:21","type":"","value":"ERC20Votes: broken clock mode"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17650:6:21"},"nodeType":"YulFunctionCall","src":"17650:55:21"},"nodeType":"YulExpressionStatement","src":"17650:55:21"}]},"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17631:6:21","type":""}],"src":"17533:179:21"},{"body":{"nodeType":"YulBlock","src":"17864:220:21","statements":[{"nodeType":"YulAssignment","src":"17874:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17940:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17945:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17881:58:21"},"nodeType":"YulFunctionCall","src":"17881:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17874:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18046:3:21"}],"functionName":{"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulIdentifier","src":"17957:88:21"},"nodeType":"YulFunctionCall","src":"17957:93:21"},"nodeType":"YulExpressionStatement","src":"17957:93:21"},{"nodeType":"YulAssignment","src":"18059:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18070:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18075:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18066:3:21"},"nodeType":"YulFunctionCall","src":"18066:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18059:3:21"}]}]},"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17852:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17860:3:21","type":""}],"src":"17718:366:21"},{"body":{"nodeType":"YulBlock","src":"18261:248:21","statements":[{"nodeType":"YulAssignment","src":"18271:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18283:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18294:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18279:3:21"},"nodeType":"YulFunctionCall","src":"18279:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18271:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18318:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18329:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18314:3:21"},"nodeType":"YulFunctionCall","src":"18314:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18337:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18343:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18333:3:21"},"nodeType":"YulFunctionCall","src":"18333:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18307:6:21"},"nodeType":"YulFunctionCall","src":"18307:47:21"},"nodeType":"YulExpressionStatement","src":"18307:47:21"},{"nodeType":"YulAssignment","src":"18363:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18497:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18371:124:21"},"nodeType":"YulFunctionCall","src":"18371:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18363:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18241:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18256:4:21","type":""}],"src":"18090:419:21"},{"body":{"nodeType":"YulBlock","src":"18543:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18563:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:21"},"nodeType":"YulFunctionCall","src":"18553:88:21"},"nodeType":"YulExpressionStatement","src":"18553:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18657:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18660:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18650:6:21"},"nodeType":"YulFunctionCall","src":"18650:15:21"},"nodeType":"YulExpressionStatement","src":"18650:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18681:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18684:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18674:6:21"},"nodeType":"YulFunctionCall","src":"18674:15:21"},"nodeType":"YulExpressionStatement","src":"18674:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18515:180:21"},{"body":{"nodeType":"YulBlock","src":"18729:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18746:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18749:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18739:6:21"},"nodeType":"YulFunctionCall","src":"18739:88:21"},"nodeType":"YulExpressionStatement","src":"18739:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18843:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18846:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18836:6:21"},"nodeType":"YulFunctionCall","src":"18836:15:21"},"nodeType":"YulExpressionStatement","src":"18836:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18867:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18870:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18860:6:21"},"nodeType":"YulFunctionCall","src":"18860:15:21"},"nodeType":"YulExpressionStatement","src":"18860:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18701:180:21"},{"body":{"nodeType":"YulBlock","src":"18993:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19015:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19023:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19011:3:21"},"nodeType":"YulFunctionCall","src":"19011:14:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"19027:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19004:6:21"},"nodeType":"YulFunctionCall","src":"19004:58:21"},"nodeType":"YulExpressionStatement","src":"19004:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19083:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19091:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19079:3:21"},"nodeType":"YulFunctionCall","src":"19079:15:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"19096:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19072:6:21"},"nodeType":"YulFunctionCall","src":"19072:32:21"},"nodeType":"YulExpressionStatement","src":"19072:32:21"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18985:6:21","type":""}],"src":"18887:224:21"},{"body":{"nodeType":"YulBlock","src":"19263:220:21","statements":[{"nodeType":"YulAssignment","src":"19273:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19339:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19344:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19280:58:21"},"nodeType":"YulFunctionCall","src":"19280:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19273:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19445:3:21"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"19356:88:21"},"nodeType":"YulFunctionCall","src":"19356:93:21"},"nodeType":"YulExpressionStatement","src":"19356:93:21"},{"nodeType":"YulAssignment","src":"19458:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19469:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19474:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19465:3:21"},"nodeType":"YulFunctionCall","src":"19465:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19458:3:21"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19251:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19259:3:21","type":""}],"src":"19117:366:21"},{"body":{"nodeType":"YulBlock","src":"19660:248:21","statements":[{"nodeType":"YulAssignment","src":"19670:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19682:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19693:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19678:3:21"},"nodeType":"YulFunctionCall","src":"19678:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19670:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19717:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19728:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19713:3:21"},"nodeType":"YulFunctionCall","src":"19713:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19736:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19742:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19732:3:21"},"nodeType":"YulFunctionCall","src":"19732:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19706:6:21"},"nodeType":"YulFunctionCall","src":"19706:47:21"},"nodeType":"YulExpressionStatement","src":"19706:47:21"},{"nodeType":"YulAssignment","src":"19762:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19896:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19770:124:21"},"nodeType":"YulFunctionCall","src":"19770:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19762:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19640:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19655:4:21","type":""}],"src":"19489:419:21"},{"body":{"nodeType":"YulBlock","src":"20020:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20042:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20050:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20038:3:21"},"nodeType":"YulFunctionCall","src":"20038:14:21"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"20054:31:21","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20031:6:21"},"nodeType":"YulFunctionCall","src":"20031:55:21"},"nodeType":"YulExpressionStatement","src":"20031:55:21"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20012:6:21","type":""}],"src":"19914:179:21"},{"body":{"nodeType":"YulBlock","src":"20245:220:21","statements":[{"nodeType":"YulAssignment","src":"20255:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20321:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20326:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20262:58:21"},"nodeType":"YulFunctionCall","src":"20262:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20255:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20427:3:21"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"20338:88:21"},"nodeType":"YulFunctionCall","src":"20338:93:21"},"nodeType":"YulExpressionStatement","src":"20338:93:21"},{"nodeType":"YulAssignment","src":"20440:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20451:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20456:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20447:3:21"},"nodeType":"YulFunctionCall","src":"20447:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20440:3:21"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20233:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20241:3:21","type":""}],"src":"20099:366:21"},{"body":{"nodeType":"YulBlock","src":"20642:248:21","statements":[{"nodeType":"YulAssignment","src":"20652:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20664:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20675:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20660:3:21"},"nodeType":"YulFunctionCall","src":"20660:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20652:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20710:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20695:3:21"},"nodeType":"YulFunctionCall","src":"20695:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20718:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20724:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20714:3:21"},"nodeType":"YulFunctionCall","src":"20714:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20688:6:21"},"nodeType":"YulFunctionCall","src":"20688:47:21"},"nodeType":"YulExpressionStatement","src":"20688:47:21"},{"nodeType":"YulAssignment","src":"20744:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20878:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20752:124:21"},"nodeType":"YulFunctionCall","src":"20752:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20744:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20622:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20637:4:21","type":""}],"src":"20471:419:21"},{"body":{"nodeType":"YulBlock","src":"21078:371:21","statements":[{"nodeType":"YulAssignment","src":"21088:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21100:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21111:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21096:3:21"},"nodeType":"YulFunctionCall","src":"21096:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21088:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21169:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21182:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21193:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21178:3:21"},"nodeType":"YulFunctionCall","src":"21178:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21125:43:21"},"nodeType":"YulFunctionCall","src":"21125:71:21"},"nodeType":"YulExpressionStatement","src":"21125:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21250:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21263:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21274:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21259:3:21"},"nodeType":"YulFunctionCall","src":"21259:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21206:43:21"},"nodeType":"YulFunctionCall","src":"21206:72:21"},"nodeType":"YulExpressionStatement","src":"21206:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21332:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21345:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21356:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21341:3:21"},"nodeType":"YulFunctionCall","src":"21341:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21288:43:21"},"nodeType":"YulFunctionCall","src":"21288:72:21"},"nodeType":"YulExpressionStatement","src":"21288:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21414:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21438:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21423:3:21"},"nodeType":"YulFunctionCall","src":"21423:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21370:43:21"},"nodeType":"YulFunctionCall","src":"21370:72:21"},"nodeType":"YulExpressionStatement","src":"21370:72:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21026:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21038:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21046:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21054:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21062:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21073:4:21","type":""}],"src":"20896:553:21"},{"body":{"nodeType":"YulBlock","src":"21561:69:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21583:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21591:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21579:3:21"},"nodeType":"YulFunctionCall","src":"21579:14:21"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"21595:27:21","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21572:6:21"},"nodeType":"YulFunctionCall","src":"21572:51:21"},"nodeType":"YulExpressionStatement","src":"21572:51:21"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21553:6:21","type":""}],"src":"21455:175:21"},{"body":{"nodeType":"YulBlock","src":"21782:220:21","statements":[{"nodeType":"YulAssignment","src":"21792:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21858:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21863:2:21","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21799:58:21"},"nodeType":"YulFunctionCall","src":"21799:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21792:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21964:3:21"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"21875:88:21"},"nodeType":"YulFunctionCall","src":"21875:93:21"},"nodeType":"YulExpressionStatement","src":"21875:93:21"},{"nodeType":"YulAssignment","src":"21977:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21988:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21993:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21984:3:21"},"nodeType":"YulFunctionCall","src":"21984:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21977:3:21"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21770:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21778:3:21","type":""}],"src":"21636:366:21"},{"body":{"nodeType":"YulBlock","src":"22179:248:21","statements":[{"nodeType":"YulAssignment","src":"22189:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22201:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22212:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22197:3:21"},"nodeType":"YulFunctionCall","src":"22197:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22189:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22236:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22247:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22232:3:21"},"nodeType":"YulFunctionCall","src":"22232:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22255:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22261:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22251:3:21"},"nodeType":"YulFunctionCall","src":"22251:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22225:6:21"},"nodeType":"YulFunctionCall","src":"22225:47:21"},"nodeType":"YulExpressionStatement","src":"22225:47:21"},{"nodeType":"YulAssignment","src":"22281:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22415:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22289:124:21"},"nodeType":"YulFunctionCall","src":"22289:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22281:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22159:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22174:4:21","type":""}],"src":"22008:419:21"},{"body":{"nodeType":"YulBlock","src":"22539:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22561:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22569:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22557:3:21"},"nodeType":"YulFunctionCall","src":"22557:14:21"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"22573:31:21","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22550:6:21"},"nodeType":"YulFunctionCall","src":"22550:55:21"},"nodeType":"YulExpressionStatement","src":"22550:55:21"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22531:6:21","type":""}],"src":"22433:179:21"},{"body":{"nodeType":"YulBlock","src":"22764:220:21","statements":[{"nodeType":"YulAssignment","src":"22774:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22840:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22845:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22781:58:21"},"nodeType":"YulFunctionCall","src":"22781:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22774:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22946:3:21"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"22857:88:21"},"nodeType":"YulFunctionCall","src":"22857:93:21"},"nodeType":"YulExpressionStatement","src":"22857:93:21"},{"nodeType":"YulAssignment","src":"22959:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22970:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22975:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22966:3:21"},"nodeType":"YulFunctionCall","src":"22966:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22959:3:21"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22752:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22760:3:21","type":""}],"src":"22618:366:21"},{"body":{"nodeType":"YulBlock","src":"23161:248:21","statements":[{"nodeType":"YulAssignment","src":"23171:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23183:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23194:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23179:3:21"},"nodeType":"YulFunctionCall","src":"23179:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23171:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23218:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23229:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23214:3:21"},"nodeType":"YulFunctionCall","src":"23214:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23237:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23243:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23233:3:21"},"nodeType":"YulFunctionCall","src":"23233:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23207:6:21"},"nodeType":"YulFunctionCall","src":"23207:47:21"},"nodeType":"YulExpressionStatement","src":"23207:47:21"},{"nodeType":"YulAssignment","src":"23263:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23397:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23271:124:21"},"nodeType":"YulFunctionCall","src":"23271:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23263:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23141:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23156:4:21","type":""}],"src":"22990:419:21"},{"body":{"nodeType":"YulBlock","src":"23653:537:21","statements":[{"nodeType":"YulAssignment","src":"23663:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23675:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23686:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23671:3:21"},"nodeType":"YulFunctionCall","src":"23671:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23663:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23744:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23757:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23768:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23753:3:21"},"nodeType":"YulFunctionCall","src":"23753:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23700:43:21"},"nodeType":"YulFunctionCall","src":"23700:71:21"},"nodeType":"YulExpressionStatement","src":"23700:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23825:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23838:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23849:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23834:3:21"},"nodeType":"YulFunctionCall","src":"23834:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23781:43:21"},"nodeType":"YulFunctionCall","src":"23781:72:21"},"nodeType":"YulExpressionStatement","src":"23781:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23907:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23931:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23916:3:21"},"nodeType":"YulFunctionCall","src":"23916:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23863:43:21"},"nodeType":"YulFunctionCall","src":"23863:72:21"},"nodeType":"YulExpressionStatement","src":"23863:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23989:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24002:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24013:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23998:3:21"},"nodeType":"YulFunctionCall","src":"23998:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23945:43:21"},"nodeType":"YulFunctionCall","src":"23945:72:21"},"nodeType":"YulExpressionStatement","src":"23945:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24071:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24084:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24095:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24080:3:21"},"nodeType":"YulFunctionCall","src":"24080:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24027:43:21"},"nodeType":"YulFunctionCall","src":"24027:73:21"},"nodeType":"YulExpressionStatement","src":"24027:73:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"24154:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24167:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24178:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24163:3:21"},"nodeType":"YulFunctionCall","src":"24163:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24110:43:21"},"nodeType":"YulFunctionCall","src":"24110:73:21"},"nodeType":"YulExpressionStatement","src":"24110:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23585:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23597:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23605:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23613:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23621:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23629:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23637:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23648:4:21","type":""}],"src":"23415:775:21"},{"body":{"nodeType":"YulBlock","src":"24302:74:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24324:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24332:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24320:3:21"},"nodeType":"YulFunctionCall","src":"24320:14:21"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"24336:32:21","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24313:6:21"},"nodeType":"YulFunctionCall","src":"24313:56:21"},"nodeType":"YulExpressionStatement","src":"24313:56:21"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24294:6:21","type":""}],"src":"24196:180:21"},{"body":{"nodeType":"YulBlock","src":"24528:220:21","statements":[{"nodeType":"YulAssignment","src":"24538:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24604:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24609:2:21","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24545:58:21"},"nodeType":"YulFunctionCall","src":"24545:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24538:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24710:3:21"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"24621:88:21"},"nodeType":"YulFunctionCall","src":"24621:93:21"},"nodeType":"YulExpressionStatement","src":"24621:93:21"},{"nodeType":"YulAssignment","src":"24723:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24734:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24739:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24730:3:21"},"nodeType":"YulFunctionCall","src":"24730:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24723:3:21"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24516:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24524:3:21","type":""}],"src":"24382:366:21"},{"body":{"nodeType":"YulBlock","src":"24925:248:21","statements":[{"nodeType":"YulAssignment","src":"24935:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24947:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24958:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24943:3:21"},"nodeType":"YulFunctionCall","src":"24943:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24935:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24982:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24993:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24978:3:21"},"nodeType":"YulFunctionCall","src":"24978:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25001:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25007:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24997:3:21"},"nodeType":"YulFunctionCall","src":"24997:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24971:6:21"},"nodeType":"YulFunctionCall","src":"24971:47:21"},"nodeType":"YulExpressionStatement","src":"24971:47:21"},{"nodeType":"YulAssignment","src":"25027:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25161:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25035:124:21"},"nodeType":"YulFunctionCall","src":"25035:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25027:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24905:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24920:4:21","type":""}],"src":"24754:419:21"},{"body":{"nodeType":"YulBlock","src":"25233:87:21","statements":[{"nodeType":"YulAssignment","src":"25243:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"25251:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25243:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25271:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"25274:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25264:6:21"},"nodeType":"YulFunctionCall","src":"25264:14:21"},"nodeType":"YulExpressionStatement","src":"25264:14:21"},{"nodeType":"YulAssignment","src":"25287:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25305:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25308:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"25295:9:21"},"nodeType":"YulFunctionCall","src":"25295:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25287:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25220:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"25228:4:21","type":""}],"src":"25179:141:21"},{"body":{"nodeType":"YulBlock","src":"25370:49:21","statements":[{"nodeType":"YulAssignment","src":"25380:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25398:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"25405:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25394:3:21"},"nodeType":"YulFunctionCall","src":"25394:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"25410:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25390:3:21"},"nodeType":"YulFunctionCall","src":"25390:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25380:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25353:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25363:6:21","type":""}],"src":"25326:93:21"},{"body":{"nodeType":"YulBlock","src":"25478:54:21","statements":[{"nodeType":"YulAssignment","src":"25488:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25513:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"25519:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25509:3:21"},"nodeType":"YulFunctionCall","src":"25509:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25488:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25453:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"25459:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25469:8:21","type":""}],"src":"25425:107:21"},{"body":{"nodeType":"YulBlock","src":"25614:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"25624:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"25645:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"25657:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25641:3:21"},"nodeType":"YulFunctionCall","src":"25641:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"25628:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25668:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25710:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25680:18:21"},"nodeType":"YulFunctionCall","src":"25680:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"25672:4:21","type":""}]},{"nodeType":"YulAssignment","src":"25786:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25817:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"25828:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25798:18:21"},"nodeType":"YulFunctionCall","src":"25798:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25786:8:21"}]},{"nodeType":"YulAssignment","src":"25846:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25859:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"25870:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25866:3:21"},"nodeType":"YulFunctionCall","src":"25866:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25855:3:21"},"nodeType":"YulFunctionCall","src":"25855:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25846:5:21"}]},{"nodeType":"YulAssignment","src":"25885:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25898:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25909:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"25919:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25905:3:21"},"nodeType":"YulFunctionCall","src":"25905:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25895:2:21"},"nodeType":"YulFunctionCall","src":"25895:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25885:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25575:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"25582:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"25594:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25607:6:21","type":""}],"src":"25538:393:21"},{"body":{"nodeType":"YulBlock","src":"25969:28:21","statements":[{"nodeType":"YulAssignment","src":"25979:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"25986:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25979:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25955:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25965:3:21","type":""}],"src":"25937:60:21"},{"body":{"nodeType":"YulBlock","src":"26063:82:21","statements":[{"nodeType":"YulAssignment","src":"26073:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26131:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26113:17:21"},"nodeType":"YulFunctionCall","src":"26113:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"26104:8:21"},"nodeType":"YulFunctionCall","src":"26104:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26086:17:21"},"nodeType":"YulFunctionCall","src":"26086:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"26073:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26043:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"26053:9:21","type":""}],"src":"26003:142:21"},{"body":{"nodeType":"YulBlock","src":"26198:28:21","statements":[{"nodeType":"YulAssignment","src":"26208:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"26215:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26208:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26184:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26194:3:21","type":""}],"src":"26151:75:21"},{"body":{"nodeType":"YulBlock","src":"26308:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"26318:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"26373:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26342:30:21"},"nodeType":"YulFunctionCall","src":"26342:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"26322:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26397:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26437:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"26431:5:21"},"nodeType":"YulFunctionCall","src":"26431:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"26444:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"26476:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"26452:23:21"},"nodeType":"YulFunctionCall","src":"26452:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"26403:27:21"},"nodeType":"YulFunctionCall","src":"26403:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26390:6:21"},"nodeType":"YulFunctionCall","src":"26390:105:21"},"nodeType":"YulExpressionStatement","src":"26390:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26285:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26291:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"26299:7:21","type":""}],"src":"26232:269:21"},{"body":{"nodeType":"YulBlock","src":"26556:24:21","statements":[{"nodeType":"YulAssignment","src":"26566:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"26573:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26566:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26552:3:21","type":""}],"src":"26507:73:21"},{"body":{"nodeType":"YulBlock","src":"26639:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"26649:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"26663:30:21"},"nodeType":"YulFunctionCall","src":"26663:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"26653:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26748:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"26754:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"26762:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26704:43:21"},"nodeType":"YulFunctionCall","src":"26704:65:21"},"nodeType":"YulExpressionStatement","src":"26704:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26625:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26631:6:21","type":""}],"src":"26586:189:21"},{"body":{"nodeType":"YulBlock","src":"26831:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"26898:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26942:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26949:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"26912:29:21"},"nodeType":"YulFunctionCall","src":"26912:39:21"},"nodeType":"YulExpressionStatement","src":"26912:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26851:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"26858:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26848:2:21"},"nodeType":"YulFunctionCall","src":"26848:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26863:26:21","statements":[{"nodeType":"YulAssignment","src":"26865:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26878:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26885:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26874:3:21"},"nodeType":"YulFunctionCall","src":"26874:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"26865:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"26845:2:21","statements":[]},"src":"26841:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"26819:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"26826:3:21","type":""}],"src":"26781:186:21"},{"body":{"nodeType":"YulBlock","src":"27052:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"27078:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"27092:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27140:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"27108:31:21"},"nodeType":"YulFunctionCall","src":"27108:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"27096:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27159:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27182:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27210:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27192:17:21"},"nodeType":"YulFunctionCall","src":"27192:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27178:3:21"},"nodeType":"YulFunctionCall","src":"27178:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"27163:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"27379:27:21","statements":[{"nodeType":"YulAssignment","src":"27381:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"27396:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27381:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27363:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"27375:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27360:2:21"},"nodeType":"YulFunctionCall","src":"27360:18:21"},"nodeType":"YulIf","src":"27357:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27448:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27465:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27493:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27475:17:21"},"nodeType":"YulFunctionCall","src":"27475:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27461:3:21"},"nodeType":"YulFunctionCall","src":"27461:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"27419:28:21"},"nodeType":"YulFunctionCall","src":"27419:80:21"},"nodeType":"YulExpressionStatement","src":"27419:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27069:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27074:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27066:2:21"},"nodeType":"YulFunctionCall","src":"27066:11:21"},"nodeType":"YulIf","src":"27063:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"27028:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"27035:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"27040:10:21","type":""}],"src":"26973:543:21"},{"body":{"nodeType":"YulBlock","src":"27585:54:21","statements":[{"nodeType":"YulAssignment","src":"27595:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27620:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"27626:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"27616:3:21"},"nodeType":"YulFunctionCall","src":"27616:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27595:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27560:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"27566:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27576:8:21","type":""}],"src":"27522:117:21"},{"body":{"nodeType":"YulBlock","src":"27696:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"27706:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27755:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"27758:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27751:3:21"},"nodeType":"YulFunctionCall","src":"27751:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27770:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27766:3:21"},"nodeType":"YulFunctionCall","src":"27766:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"27722:28:21"},"nodeType":"YulFunctionCall","src":"27722:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27718:3:21"},"nodeType":"YulFunctionCall","src":"27718:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27710:4:21","type":""}]},{"nodeType":"YulAssignment","src":"27783:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27797:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"27803:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27793:3:21"},"nodeType":"YulFunctionCall","src":"27793:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27783:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27673:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"27679:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27689:6:21","type":""}],"src":"27645:169:21"},{"body":{"nodeType":"YulBlock","src":"27900:214:21","statements":[{"nodeType":"YulAssignment","src":"28033:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28060:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"28066:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"28041:18:21"},"nodeType":"YulFunctionCall","src":"28041:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28033:4:21"}]},{"nodeType":"YulAssignment","src":"28079:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28090:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28100:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"28103:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28096:3:21"},"nodeType":"YulFunctionCall","src":"28096:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28087:2:21"},"nodeType":"YulFunctionCall","src":"28087:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"28079:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27881:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"27887:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"27895:4:21","type":""}],"src":"27819:295:21"},{"body":{"nodeType":"YulBlock","src":"28211:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28222:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28269:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28236:32:21"},"nodeType":"YulFunctionCall","src":"28236:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"28226:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"28358:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28360:16:21"},"nodeType":"YulFunctionCall","src":"28360:18:21"},"nodeType":"YulExpressionStatement","src":"28360:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28330:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28338:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28327:2:21"},"nodeType":"YulFunctionCall","src":"28327:30:21"},"nodeType":"YulIf","src":"28324:56:21"},{"nodeType":"YulVariableDeclaration","src":"28390:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28436:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28430:5:21"},"nodeType":"YulFunctionCall","src":"28430:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28404:25:21"},"nodeType":"YulFunctionCall","src":"28404:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"28394:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28535:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"28541:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"28549:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"28489:45:21"},"nodeType":"YulFunctionCall","src":"28489:67:21"},"nodeType":"YulExpressionStatement","src":"28489:67:21"},{"nodeType":"YulVariableDeclaration","src":"28566:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28583:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"28570:9:21","type":""}]},{"nodeType":"YulAssignment","src":"28594:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28607:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28594:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28658:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28672:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28691:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28703:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28699:3:21"},"nodeType":"YulFunctionCall","src":"28699:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28687:3:21"},"nodeType":"YulFunctionCall","src":"28687:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"28676:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28723:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28769:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28737:31:21"},"nodeType":"YulFunctionCall","src":"28737:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"28727:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28787:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28796:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28791:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"28855:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28880:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28898:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"28903:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28894:3:21"},"nodeType":"YulFunctionCall","src":"28894:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28888:5:21"},"nodeType":"YulFunctionCall","src":"28888:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28873:6:21"},"nodeType":"YulFunctionCall","src":"28873:42:21"},"nodeType":"YulExpressionStatement","src":"28873:42:21"},{"nodeType":"YulAssignment","src":"28932:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28946:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28954:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28942:3:21"},"nodeType":"YulFunctionCall","src":"28942:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"28932:6:21"}]},{"nodeType":"YulAssignment","src":"28973:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28990:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29001:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28986:3:21"},"nodeType":"YulFunctionCall","src":"28986:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28973:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28821:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"28824:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28818:2:21"},"nodeType":"YulFunctionCall","src":"28818:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28833:21:21","statements":[{"nodeType":"YulAssignment","src":"28835:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28844:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"28847:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28840:3:21"},"nodeType":"YulFunctionCall","src":"28840:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28835:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"28814:3:21","statements":[]},"src":"28810:208:21"},{"body":{"nodeType":"YulBlock","src":"29054:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"29072:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29099:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29104:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29095:3:21"},"nodeType":"YulFunctionCall","src":"29095:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29089:5:21"},"nodeType":"YulFunctionCall","src":"29089:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"29076:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29139:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"29166:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29181:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29189:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29177:3:21"},"nodeType":"YulFunctionCall","src":"29177:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"29147:18:21"},"nodeType":"YulFunctionCall","src":"29147:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29132:6:21"},"nodeType":"YulFunctionCall","src":"29132:64:21"},"nodeType":"YulExpressionStatement","src":"29132:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"29037:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"29046:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29034:2:21"},"nodeType":"YulFunctionCall","src":"29034:19:21"},"nodeType":"YulIf","src":"29031:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29230:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29244:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29252:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29240:3:21"},"nodeType":"YulFunctionCall","src":"29240:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"29256:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29236:3:21"},"nodeType":"YulFunctionCall","src":"29236:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29223:6:21"},"nodeType":"YulFunctionCall","src":"29223:36:21"},"nodeType":"YulExpressionStatement","src":"29223:36:21"}]},"nodeType":"YulCase","src":"28651:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28656:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"29286:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"29300:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"29313:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"29304:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"29337:67:21","statements":[{"nodeType":"YulAssignment","src":"29355:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29374:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29379:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29370:3:21"},"nodeType":"YulFunctionCall","src":"29370:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29364:5:21"},"nodeType":"YulFunctionCall","src":"29364:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29355:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"29330:6:21"},"nodeType":"YulIf","src":"29327:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29424:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29483:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"29490:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"29430:52:21"},"nodeType":"YulFunctionCall","src":"29430:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29417:6:21"},"nodeType":"YulFunctionCall","src":"29417:81:21"},"nodeType":"YulExpressionStatement","src":"29417:81:21"}]},"nodeType":"YulCase","src":"29278:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28631:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28639:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28628:2:21"},"nodeType":"YulFunctionCall","src":"28628:14:21"},"nodeType":"YulSwitch","src":"28621:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28200:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"28206:3:21","type":""}],"src":"28119:1395:21"},{"body":{"nodeType":"YulBlock","src":"29626:129:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29648:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29656:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29644:3:21"},"nodeType":"YulFunctionCall","src":"29644:14:21"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"29660:34:21","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29637:6:21"},"nodeType":"YulFunctionCall","src":"29637:58:21"},"nodeType":"YulExpressionStatement","src":"29637:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29716:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"29724:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29712:3:21"},"nodeType":"YulFunctionCall","src":"29712:15:21"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"29729:18:21","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29705:6:21"},"nodeType":"YulFunctionCall","src":"29705:43:21"},"nodeType":"YulExpressionStatement","src":"29705:43:21"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29618:6:21","type":""}],"src":"29520:235:21"},{"body":{"nodeType":"YulBlock","src":"29907:220:21","statements":[{"nodeType":"YulAssignment","src":"29917:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29983:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29988:2:21","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29924:58:21"},"nodeType":"YulFunctionCall","src":"29924:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29917:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30089:3:21"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"30000:88:21"},"nodeType":"YulFunctionCall","src":"30000:93:21"},"nodeType":"YulExpressionStatement","src":"30000:93:21"},{"nodeType":"YulAssignment","src":"30102:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30113:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30118:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30109:3:21"},"nodeType":"YulFunctionCall","src":"30109:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30102:3:21"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29895:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29903:3:21","type":""}],"src":"29761:366:21"},{"body":{"nodeType":"YulBlock","src":"30304:248:21","statements":[{"nodeType":"YulAssignment","src":"30314:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30326:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30337:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30322:3:21"},"nodeType":"YulFunctionCall","src":"30322:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30314:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30361:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30372:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30357:3:21"},"nodeType":"YulFunctionCall","src":"30357:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30380:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"30386:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30376:3:21"},"nodeType":"YulFunctionCall","src":"30376:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30350:6:21"},"nodeType":"YulFunctionCall","src":"30350:47:21"},"nodeType":"YulExpressionStatement","src":"30350:47:21"},{"nodeType":"YulAssignment","src":"30406:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30540:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30414:124:21"},"nodeType":"YulFunctionCall","src":"30414:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30406:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30284:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30299:4:21","type":""}],"src":"30133:419:21"},{"body":{"nodeType":"YulBlock","src":"30664:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30686:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30694:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30682:3:21"},"nodeType":"YulFunctionCall","src":"30682:14:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"30698:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30675:6:21"},"nodeType":"YulFunctionCall","src":"30675:57:21"},"nodeType":"YulExpressionStatement","src":"30675:57:21"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30656:6:21","type":""}],"src":"30558:181:21"},{"body":{"nodeType":"YulBlock","src":"30891:220:21","statements":[{"nodeType":"YulAssignment","src":"30901:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30967:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"30972:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30908:58:21"},"nodeType":"YulFunctionCall","src":"30908:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30901:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31073:3:21"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"30984:88:21"},"nodeType":"YulFunctionCall","src":"30984:93:21"},"nodeType":"YulExpressionStatement","src":"30984:93:21"},{"nodeType":"YulAssignment","src":"31086:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31097:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"31102:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31093:3:21"},"nodeType":"YulFunctionCall","src":"31093:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31086:3:21"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30879:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30887:3:21","type":""}],"src":"30745:366:21"},{"body":{"nodeType":"YulBlock","src":"31288:248:21","statements":[{"nodeType":"YulAssignment","src":"31298:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31310:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31321:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31306:3:21"},"nodeType":"YulFunctionCall","src":"31306:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31298:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31345:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31356:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31341:3:21"},"nodeType":"YulFunctionCall","src":"31341:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31364:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31370:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31360:3:21"},"nodeType":"YulFunctionCall","src":"31360:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31334:6:21"},"nodeType":"YulFunctionCall","src":"31334:47:21"},"nodeType":"YulExpressionStatement","src":"31334:47:21"},{"nodeType":"YulAssignment","src":"31390:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31524:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31398:124:21"},"nodeType":"YulFunctionCall","src":"31398:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31390:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31268:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31283:4:21","type":""}],"src":"31117:419:21"},{"body":{"nodeType":"YulBlock","src":"31648:120:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31670:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31678:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31666:3:21"},"nodeType":"YulFunctionCall","src":"31666:14:21"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"31682:34:21","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31659:6:21"},"nodeType":"YulFunctionCall","src":"31659:58:21"},"nodeType":"YulExpressionStatement","src":"31659:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31738:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31746:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31734:3:21"},"nodeType":"YulFunctionCall","src":"31734:15:21"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"31751:9:21","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31727:6:21"},"nodeType":"YulFunctionCall","src":"31727:34:21"},"nodeType":"YulExpressionStatement","src":"31727:34:21"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31640:6:21","type":""}],"src":"31542:226:21"},{"body":{"nodeType":"YulBlock","src":"31920:220:21","statements":[{"nodeType":"YulAssignment","src":"31930:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31996:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32001:2:21","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31937:58:21"},"nodeType":"YulFunctionCall","src":"31937:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31930:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32102:3:21"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"32013:88:21"},"nodeType":"YulFunctionCall","src":"32013:93:21"},"nodeType":"YulExpressionStatement","src":"32013:93:21"},{"nodeType":"YulAssignment","src":"32115:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32126:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32131:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32122:3:21"},"nodeType":"YulFunctionCall","src":"32122:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32115:3:21"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31908:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31916:3:21","type":""}],"src":"31774:366:21"},{"body":{"nodeType":"YulBlock","src":"32317:248:21","statements":[{"nodeType":"YulAssignment","src":"32327:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32339:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32350:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32335:3:21"},"nodeType":"YulFunctionCall","src":"32335:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32327:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32374:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32385:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32370:3:21"},"nodeType":"YulFunctionCall","src":"32370:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32393:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"32399:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32389:3:21"},"nodeType":"YulFunctionCall","src":"32389:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32363:6:21"},"nodeType":"YulFunctionCall","src":"32363:47:21"},"nodeType":"YulExpressionStatement","src":"32363:47:21"},{"nodeType":"YulAssignment","src":"32419:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32553:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32427:124:21"},"nodeType":"YulFunctionCall","src":"32427:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32419:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32297:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32312:4:21","type":""}],"src":"32146:419:21"},{"body":{"nodeType":"YulBlock","src":"32677:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32699:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32707:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32695:3:21"},"nodeType":"YulFunctionCall","src":"32695:14:21"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"32711:34:21","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32688:6:21"},"nodeType":"YulFunctionCall","src":"32688:58:21"},"nodeType":"YulExpressionStatement","src":"32688:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32767:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32775:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32763:3:21"},"nodeType":"YulFunctionCall","src":"32763:15:21"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"32780:8:21","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32756:6:21"},"nodeType":"YulFunctionCall","src":"32756:33:21"},"nodeType":"YulExpressionStatement","src":"32756:33:21"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32669:6:21","type":""}],"src":"32571:225:21"},{"body":{"nodeType":"YulBlock","src":"32948:220:21","statements":[{"nodeType":"YulAssignment","src":"32958:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33024:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"33029:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32965:58:21"},"nodeType":"YulFunctionCall","src":"32965:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32958:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33130:3:21"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"33041:88:21"},"nodeType":"YulFunctionCall","src":"33041:93:21"},"nodeType":"YulExpressionStatement","src":"33041:93:21"},{"nodeType":"YulAssignment","src":"33143:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33154:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"33159:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33150:3:21"},"nodeType":"YulFunctionCall","src":"33150:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33143:3:21"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32936:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32944:3:21","type":""}],"src":"32802:366:21"},{"body":{"nodeType":"YulBlock","src":"33345:248:21","statements":[{"nodeType":"YulAssignment","src":"33355:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33367:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33378:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33363:3:21"},"nodeType":"YulFunctionCall","src":"33363:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33355:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33402:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33413:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33398:3:21"},"nodeType":"YulFunctionCall","src":"33398:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33421:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"33427:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33417:3:21"},"nodeType":"YulFunctionCall","src":"33417:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33391:6:21"},"nodeType":"YulFunctionCall","src":"33391:47:21"},"nodeType":"YulExpressionStatement","src":"33391:47:21"},{"nodeType":"YulAssignment","src":"33447:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33581:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33455:124:21"},"nodeType":"YulFunctionCall","src":"33455:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33447:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33325:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33340:4:21","type":""}],"src":"33174:419:21"},{"body":{"nodeType":"YulBlock","src":"33705:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33727:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33735:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33723:3:21"},"nodeType":"YulFunctionCall","src":"33723:14:21"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"33739:34:21","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33716:6:21"},"nodeType":"YulFunctionCall","src":"33716:58:21"},"nodeType":"YulExpressionStatement","src":"33716:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33795:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33803:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33791:3:21"},"nodeType":"YulFunctionCall","src":"33791:15:21"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"33808:8:21","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33784:6:21"},"nodeType":"YulFunctionCall","src":"33784:33:21"},"nodeType":"YulExpressionStatement","src":"33784:33:21"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33697:6:21","type":""}],"src":"33599:225:21"},{"body":{"nodeType":"YulBlock","src":"33976:220:21","statements":[{"nodeType":"YulAssignment","src":"33986:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34052:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"34057:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33993:58:21"},"nodeType":"YulFunctionCall","src":"33993:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33986:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34158:3:21"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"34069:88:21"},"nodeType":"YulFunctionCall","src":"34069:93:21"},"nodeType":"YulExpressionStatement","src":"34069:93:21"},{"nodeType":"YulAssignment","src":"34171:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34182:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"34187:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34178:3:21"},"nodeType":"YulFunctionCall","src":"34178:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34171:3:21"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33964:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33972:3:21","type":""}],"src":"33830:366:21"},{"body":{"nodeType":"YulBlock","src":"34373:248:21","statements":[{"nodeType":"YulAssignment","src":"34383:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34395:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34406:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34391:3:21"},"nodeType":"YulFunctionCall","src":"34391:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34383:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34430:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34441:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34426:3:21"},"nodeType":"YulFunctionCall","src":"34426:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34449:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"34455:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34445:3:21"},"nodeType":"YulFunctionCall","src":"34445:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34419:6:21"},"nodeType":"YulFunctionCall","src":"34419:47:21"},"nodeType":"YulExpressionStatement","src":"34419:47:21"},{"nodeType":"YulAssignment","src":"34475:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34609:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34483:124:21"},"nodeType":"YulFunctionCall","src":"34483:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34475:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34353:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34368:4:21","type":""}],"src":"34202:419:21"},{"body":{"nodeType":"YulBlock","src":"34672:149:21","statements":[{"nodeType":"YulAssignment","src":"34682:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34705:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34687:17:21"},"nodeType":"YulFunctionCall","src":"34687:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34682:1:21"}]},{"nodeType":"YulAssignment","src":"34716:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34739:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34721:17:21"},"nodeType":"YulFunctionCall","src":"34721:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34716:1:21"}]},{"nodeType":"YulAssignment","src":"34750:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34762:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"34765:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34758:3:21"},"nodeType":"YulFunctionCall","src":"34758:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"34750:4:21"}]},{"body":{"nodeType":"YulBlock","src":"34792:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34794:16:21"},"nodeType":"YulFunctionCall","src":"34794:18:21"},"nodeType":"YulExpressionStatement","src":"34794:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"34783:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"34789:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34780:2:21"},"nodeType":"YulFunctionCall","src":"34780:11:21"},"nodeType":"YulIf","src":"34777:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34658:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"34661:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"34667:4:21","type":""}],"src":"34627:194:21"},{"body":{"nodeType":"YulBlock","src":"34933:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34955:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"34963:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34951:3:21"},"nodeType":"YulFunctionCall","src":"34951:14:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"34967:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34944:6:21"},"nodeType":"YulFunctionCall","src":"34944:58:21"},"nodeType":"YulExpressionStatement","src":"34944:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35023:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35031:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35019:3:21"},"nodeType":"YulFunctionCall","src":"35019:15:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"35036:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35012:6:21"},"nodeType":"YulFunctionCall","src":"35012:31:21"},"nodeType":"YulExpressionStatement","src":"35012:31:21"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34925:6:21","type":""}],"src":"34827:223:21"},{"body":{"nodeType":"YulBlock","src":"35202:220:21","statements":[{"nodeType":"YulAssignment","src":"35212:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35278:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"35283:2:21","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35219:58:21"},"nodeType":"YulFunctionCall","src":"35219:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35212:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35384:3:21"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"35295:88:21"},"nodeType":"YulFunctionCall","src":"35295:93:21"},"nodeType":"YulExpressionStatement","src":"35295:93:21"},{"nodeType":"YulAssignment","src":"35397:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35408:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"35413:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35404:3:21"},"nodeType":"YulFunctionCall","src":"35404:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35397:3:21"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35190:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35198:3:21","type":""}],"src":"35056:366:21"},{"body":{"nodeType":"YulBlock","src":"35599:248:21","statements":[{"nodeType":"YulAssignment","src":"35609:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35621:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35632:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35617:3:21"},"nodeType":"YulFunctionCall","src":"35617:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35609:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35656:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35667:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35652:3:21"},"nodeType":"YulFunctionCall","src":"35652:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35675:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"35681:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35671:3:21"},"nodeType":"YulFunctionCall","src":"35671:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35645:6:21"},"nodeType":"YulFunctionCall","src":"35645:47:21"},"nodeType":"YulExpressionStatement","src":"35645:47:21"},{"nodeType":"YulAssignment","src":"35701:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35835:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35709:124:21"},"nodeType":"YulFunctionCall","src":"35709:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35701:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35579:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35594:4:21","type":""}],"src":"35428:419:21"},{"body":{"nodeType":"YulBlock","src":"35959:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35981:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35989:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35977:3:21"},"nodeType":"YulFunctionCall","src":"35977:14:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"35993:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35970:6:21"},"nodeType":"YulFunctionCall","src":"35970:58:21"},"nodeType":"YulExpressionStatement","src":"35970:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36049:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36057:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36045:3:21"},"nodeType":"YulFunctionCall","src":"36045:15:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"36062:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36038:6:21"},"nodeType":"YulFunctionCall","src":"36038:29:21"},"nodeType":"YulExpressionStatement","src":"36038:29:21"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35951:6:21","type":""}],"src":"35853:221:21"},{"body":{"nodeType":"YulBlock","src":"36226:220:21","statements":[{"nodeType":"YulAssignment","src":"36236:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36302:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"36307:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36243:58:21"},"nodeType":"YulFunctionCall","src":"36243:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36236:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36408:3:21"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"36319:88:21"},"nodeType":"YulFunctionCall","src":"36319:93:21"},"nodeType":"YulExpressionStatement","src":"36319:93:21"},{"nodeType":"YulAssignment","src":"36421:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36432:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"36437:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36428:3:21"},"nodeType":"YulFunctionCall","src":"36428:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36421:3:21"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36214:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36222:3:21","type":""}],"src":"36080:366:21"},{"body":{"nodeType":"YulBlock","src":"36623:248:21","statements":[{"nodeType":"YulAssignment","src":"36633:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36645:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36656:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36641:3:21"},"nodeType":"YulFunctionCall","src":"36641:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36633:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36680:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36691:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36676:3:21"},"nodeType":"YulFunctionCall","src":"36676:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36699:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"36705:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36695:3:21"},"nodeType":"YulFunctionCall","src":"36695:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36669:6:21"},"nodeType":"YulFunctionCall","src":"36669:47:21"},"nodeType":"YulExpressionStatement","src":"36669:47:21"},{"nodeType":"YulAssignment","src":"36725:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36859:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36733:124:21"},"nodeType":"YulFunctionCall","src":"36733:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36725:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36603:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36618:4:21","type":""}],"src":"36452:419:21"},{"body":{"nodeType":"YulBlock","src":"36983:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37005:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"37013:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37001:3:21"},"nodeType":"YulFunctionCall","src":"37001:14:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"37017:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36994:6:21"},"nodeType":"YulFunctionCall","src":"36994:55:21"},"nodeType":"YulExpressionStatement","src":"36994:55:21"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36975:6:21","type":""}],"src":"36877:179:21"},{"body":{"nodeType":"YulBlock","src":"37208:220:21","statements":[{"nodeType":"YulAssignment","src":"37218:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37284:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37289:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37225:58:21"},"nodeType":"YulFunctionCall","src":"37225:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37218:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37390:3:21"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"37301:88:21"},"nodeType":"YulFunctionCall","src":"37301:93:21"},"nodeType":"YulExpressionStatement","src":"37301:93:21"},{"nodeType":"YulAssignment","src":"37403:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37414:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37419:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37410:3:21"},"nodeType":"YulFunctionCall","src":"37410:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37403:3:21"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37196:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37204:3:21","type":""}],"src":"37062:366:21"},{"body":{"nodeType":"YulBlock","src":"37605:248:21","statements":[{"nodeType":"YulAssignment","src":"37615:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37627:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37638:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37623:3:21"},"nodeType":"YulFunctionCall","src":"37623:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37615:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37662:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37673:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37658:3:21"},"nodeType":"YulFunctionCall","src":"37658:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37681:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"37687:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37677:3:21"},"nodeType":"YulFunctionCall","src":"37677:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37651:6:21"},"nodeType":"YulFunctionCall","src":"37651:47:21"},"nodeType":"YulExpressionStatement","src":"37651:47:21"},{"nodeType":"YulAssignment","src":"37707:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37841:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37715:124:21"},"nodeType":"YulFunctionCall","src":"37715:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37707:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37585:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37600:4:21","type":""}],"src":"37434:419:21"},{"body":{"nodeType":"YulBlock","src":"37965:118:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37987:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"37995:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37983:3:21"},"nodeType":"YulFunctionCall","src":"37983:14:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"37999:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37976:6:21"},"nodeType":"YulFunctionCall","src":"37976:58:21"},"nodeType":"YulExpressionStatement","src":"37976:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38055:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"38063:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38051:3:21"},"nodeType":"YulFunctionCall","src":"38051:15:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"38068:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38044:6:21"},"nodeType":"YulFunctionCall","src":"38044:32:21"},"nodeType":"YulExpressionStatement","src":"38044:32:21"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37957:6:21","type":""}],"src":"37859:224:21"},{"body":{"nodeType":"YulBlock","src":"38235:220:21","statements":[{"nodeType":"YulAssignment","src":"38245:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38311:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38316:2:21","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38252:58:21"},"nodeType":"YulFunctionCall","src":"38252:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38245:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38417:3:21"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"38328:88:21"},"nodeType":"YulFunctionCall","src":"38328:93:21"},"nodeType":"YulExpressionStatement","src":"38328:93:21"},{"nodeType":"YulAssignment","src":"38430:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38441:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38446:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38437:3:21"},"nodeType":"YulFunctionCall","src":"38437:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38430:3:21"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38223:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38231:3:21","type":""}],"src":"38089:366:21"},{"body":{"nodeType":"YulBlock","src":"38632:248:21","statements":[{"nodeType":"YulAssignment","src":"38642:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38654:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38665:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38650:3:21"},"nodeType":"YulFunctionCall","src":"38650:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38642:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38689:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38700:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38685:3:21"},"nodeType":"YulFunctionCall","src":"38685:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38708:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38714:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38704:3:21"},"nodeType":"YulFunctionCall","src":"38704:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38678:6:21"},"nodeType":"YulFunctionCall","src":"38678:47:21"},"nodeType":"YulExpressionStatement","src":"38678:47:21"},{"nodeType":"YulAssignment","src":"38734:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38868:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38742:124:21"},"nodeType":"YulFunctionCall","src":"38742:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38734:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38612:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38627:4:21","type":""}],"src":"38461:419:21"},{"body":{"nodeType":"YulBlock","src":"38992:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39014:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"39022:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39010:3:21"},"nodeType":"YulFunctionCall","src":"39010:14:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"39026:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39003:6:21"},"nodeType":"YulFunctionCall","src":"39003:58:21"},"nodeType":"YulExpressionStatement","src":"39003:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39082:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"39090:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39078:3:21"},"nodeType":"YulFunctionCall","src":"39078:15:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"39095:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39071:6:21"},"nodeType":"YulFunctionCall","src":"39071:30:21"},"nodeType":"YulExpressionStatement","src":"39071:30:21"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38984:6:21","type":""}],"src":"38886:222:21"},{"body":{"nodeType":"YulBlock","src":"39260:220:21","statements":[{"nodeType":"YulAssignment","src":"39270:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39336:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"39341:2:21","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39277:58:21"},"nodeType":"YulFunctionCall","src":"39277:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39270:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39442:3:21"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"39353:88:21"},"nodeType":"YulFunctionCall","src":"39353:93:21"},"nodeType":"YulExpressionStatement","src":"39353:93:21"},{"nodeType":"YulAssignment","src":"39455:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39466:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"39471:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39462:3:21"},"nodeType":"YulFunctionCall","src":"39462:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39455:3:21"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39248:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39256:3:21","type":""}],"src":"39114:366:21"},{"body":{"nodeType":"YulBlock","src":"39657:248:21","statements":[{"nodeType":"YulAssignment","src":"39667:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39679:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39690:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39675:3:21"},"nodeType":"YulFunctionCall","src":"39675:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39667:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39714:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39725:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39710:3:21"},"nodeType":"YulFunctionCall","src":"39710:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39733:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"39739:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39729:3:21"},"nodeType":"YulFunctionCall","src":"39729:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39703:6:21"},"nodeType":"YulFunctionCall","src":"39703:47:21"},"nodeType":"YulExpressionStatement","src":"39703:47:21"},{"nodeType":"YulAssignment","src":"39759:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39893:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39767:124:21"},"nodeType":"YulFunctionCall","src":"39767:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39759:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39637:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39652:4:21","type":""}],"src":"39486:419:21"},{"body":{"nodeType":"YulBlock","src":"40017:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40039:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"40047:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40035:3:21"},"nodeType":"YulFunctionCall","src":"40035:14:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"40051:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40028:6:21"},"nodeType":"YulFunctionCall","src":"40028:58:21"},"nodeType":"YulExpressionStatement","src":"40028:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40107:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"40115:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40103:3:21"},"nodeType":"YulFunctionCall","src":"40103:15:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"40120:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40096:6:21"},"nodeType":"YulFunctionCall","src":"40096:33:21"},"nodeType":"YulExpressionStatement","src":"40096:33:21"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40009:6:21","type":""}],"src":"39911:225:21"},{"body":{"nodeType":"YulBlock","src":"40288:220:21","statements":[{"nodeType":"YulAssignment","src":"40298:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40364:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40369:2:21","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40305:58:21"},"nodeType":"YulFunctionCall","src":"40305:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40298:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40470:3:21"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"40381:88:21"},"nodeType":"YulFunctionCall","src":"40381:93:21"},"nodeType":"YulExpressionStatement","src":"40381:93:21"},{"nodeType":"YulAssignment","src":"40483:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40494:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40499:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40490:3:21"},"nodeType":"YulFunctionCall","src":"40490:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40483:3:21"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40276:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40284:3:21","type":""}],"src":"40142:366:21"},{"body":{"nodeType":"YulBlock","src":"40685:248:21","statements":[{"nodeType":"YulAssignment","src":"40695:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40718:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40703:3:21"},"nodeType":"YulFunctionCall","src":"40703:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40695:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40742:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40753:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40738:3:21"},"nodeType":"YulFunctionCall","src":"40738:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40761:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"40767:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40757:3:21"},"nodeType":"YulFunctionCall","src":"40757:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40731:6:21"},"nodeType":"YulFunctionCall","src":"40731:47:21"},"nodeType":"YulExpressionStatement","src":"40731:47:21"},{"nodeType":"YulAssignment","src":"40787:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40921:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40795:124:21"},"nodeType":"YulFunctionCall","src":"40795:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40787:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40665:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40680:4:21","type":""}],"src":"40514:419:21"},{"body":{"nodeType":"YulBlock","src":"40997:40:21","statements":[{"nodeType":"YulAssignment","src":"41008:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41024:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41018:5:21"},"nodeType":"YulFunctionCall","src":"41018:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"41008:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40980:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"40990:6:21","type":""}],"src":"40939:98:21"},{"body":{"nodeType":"YulBlock","src":"41099:60:21","statements":[{"nodeType":"YulAssignment","src":"41109:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"41117:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"41109:4:21"}]},{"nodeType":"YulAssignment","src":"41130:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"41142:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"41147:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41138:3:21"},"nodeType":"YulFunctionCall","src":"41138:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"41130:4:21"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"41086:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"41094:4:21","type":""}],"src":"41043:116:21"},{"body":{"nodeType":"YulBlock","src":"41220:99:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41231:42:21","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"41268:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41262:5:21"},"nodeType":"YulFunctionCall","src":"41262:10:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"41244:17:21"},"nodeType":"YulFunctionCall","src":"41244:29:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"41235:5:21","type":""}]},{"nodeType":"YulAssignment","src":"41283:29:21","value":{"name":"value","nodeType":"YulIdentifier","src":"41307:5:21"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"41283:11:21"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"41200:3:21","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"41208:11:21","type":""}],"src":"41165:154:21"},{"body":{"nodeType":"YulBlock","src":"41415:504:21","statements":[{"nodeType":"YulVariableDeclaration","src":"41426:52:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41472:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41440:31:21"},"nodeType":"YulFunctionCall","src":"41440:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41430:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41487:21:21","value":{"name":"array","nodeType":"YulIdentifier","src":"41503:5:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"41491:8:21","type":""}]},{"nodeType":"YulAssignment","src":"41518:52:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41564:5:21"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41530:33:21"},"nodeType":"YulFunctionCall","src":"41530:40:21"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41518:8:21"}]},{"nodeType":"YulAssignment","src":"41580:44:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41615:8:21"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"41589:25:21"},"nodeType":"YulFunctionCall","src":"41589:35:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41580:5:21"}]},{"body":{"nodeType":"YulBlock","src":"41652:260:21","statements":[{"nodeType":"YulAssignment","src":"41666:236:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41696:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41763:1:21","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41770:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"41774:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41766:3:21"},"nodeType":"YulFunctionCall","src":"41766:15:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"41759:3:21"},"nodeType":"YulFunctionCall","src":"41759:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"41804:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"41719:18:21"},"nodeType":"YulFunctionCall","src":"41719:169:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41675:3:21"},"nodeType":"YulFunctionCall","src":"41675:227:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41666:5:21"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"41640:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"41648:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41637:2:21"},"nodeType":"YulFunctionCall","src":"41637:14:21"},"nodeType":"YulIf","src":"41634:278:21"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"41399:5:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41409:5:21","type":""}],"src":"41325:594:21"},{"body":{"nodeType":"YulBlock","src":"42051:206:21","statements":[{"nodeType":"YulAssignment","src":"42061:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42073:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42084:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42069:3:21"},"nodeType":"YulFunctionCall","src":"42069:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42061:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42141:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42154:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42165:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42150:3:21"},"nodeType":"YulFunctionCall","src":"42150:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"42097:43:21"},"nodeType":"YulFunctionCall","src":"42097:71:21"},"nodeType":"YulExpressionStatement","src":"42097:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42222:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42235:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42246:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42231:3:21"},"nodeType":"YulFunctionCall","src":"42231:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"42178:43:21"},"nodeType":"YulFunctionCall","src":"42178:72:21"},"nodeType":"YulExpressionStatement","src":"42178:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42015:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42027:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42035:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42046:4:21","type":""}],"src":"41925:332:21"},{"body":{"nodeType":"YulBlock","src":"42473:454:21","statements":[{"nodeType":"YulAssignment","src":"42483:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42495:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42506:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42491:3:21"},"nodeType":"YulFunctionCall","src":"42491:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42483:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42564:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42577:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42588:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42573:3:21"},"nodeType":"YulFunctionCall","src":"42573:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42520:43:21"},"nodeType":"YulFunctionCall","src":"42520:71:21"},"nodeType":"YulExpressionStatement","src":"42520:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42645:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42658:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42669:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42654:3:21"},"nodeType":"YulFunctionCall","src":"42654:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42601:43:21"},"nodeType":"YulFunctionCall","src":"42601:72:21"},"nodeType":"YulExpressionStatement","src":"42601:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42727:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42740:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42751:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42736:3:21"},"nodeType":"YulFunctionCall","src":"42736:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42683:43:21"},"nodeType":"YulFunctionCall","src":"42683:72:21"},"nodeType":"YulExpressionStatement","src":"42683:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42809:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42822:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42833:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42818:3:21"},"nodeType":"YulFunctionCall","src":"42818:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"42765:43:21"},"nodeType":"YulFunctionCall","src":"42765:72:21"},"nodeType":"YulExpressionStatement","src":"42765:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"42891:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42904:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42915:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42900:3:21"},"nodeType":"YulFunctionCall","src":"42900:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"42847:43:21"},"nodeType":"YulFunctionCall","src":"42847:73:21"},"nodeType":"YulExpressionStatement","src":"42847:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42413:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"42425:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"42433:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42441:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42449:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42457:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42468:4:21","type":""}],"src":"42263:664:21"},{"body":{"nodeType":"YulBlock","src":"42961:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42978:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42981:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42971:6:21"},"nodeType":"YulFunctionCall","src":"42971:88:21"},"nodeType":"YulExpressionStatement","src":"42971:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43075:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43078:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43068:6:21"},"nodeType":"YulFunctionCall","src":"43068:15:21"},"nodeType":"YulExpressionStatement","src":"43068:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43099:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43102:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43092:6:21"},"nodeType":"YulFunctionCall","src":"43092:15:21"},"nodeType":"YulExpressionStatement","src":"43092:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"42933:180:21"},{"body":{"nodeType":"YulBlock","src":"43161:143:21","statements":[{"nodeType":"YulAssignment","src":"43171:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43194:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43176:17:21"},"nodeType":"YulFunctionCall","src":"43176:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43171:1:21"}]},{"nodeType":"YulAssignment","src":"43205:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43228:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43210:17:21"},"nodeType":"YulFunctionCall","src":"43210:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43205:1:21"}]},{"body":{"nodeType":"YulBlock","src":"43252:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43254:16:21"},"nodeType":"YulFunctionCall","src":"43254:18:21"},"nodeType":"YulExpressionStatement","src":"43254:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43249:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43242:6:21"},"nodeType":"YulFunctionCall","src":"43242:9:21"},"nodeType":"YulIf","src":"43239:35:21"},{"nodeType":"YulAssignment","src":"43284:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43293:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"43296:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"43289:3:21"},"nodeType":"YulFunctionCall","src":"43289:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43284:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43150:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"43153:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43159:1:21","type":""}],"src":"43119:185:21"},{"body":{"nodeType":"YulBlock","src":"43488:367:21","statements":[{"nodeType":"YulAssignment","src":"43498:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43510:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43521:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43506:3:21"},"nodeType":"YulFunctionCall","src":"43506:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43498:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43579:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43603:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43588:3:21"},"nodeType":"YulFunctionCall","src":"43588:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"43535:43:21"},"nodeType":"YulFunctionCall","src":"43535:71:21"},"nodeType":"YulExpressionStatement","src":"43535:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43656:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43669:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43680:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43665:3:21"},"nodeType":"YulFunctionCall","src":"43665:18:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"43616:39:21"},"nodeType":"YulFunctionCall","src":"43616:68:21"},"nodeType":"YulExpressionStatement","src":"43616:68:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"43738:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43751:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43762:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43747:3:21"},"nodeType":"YulFunctionCall","src":"43747:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"43694:43:21"},"nodeType":"YulFunctionCall","src":"43694:72:21"},"nodeType":"YulExpressionStatement","src":"43694:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"43820:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43833:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43844:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43829:3:21"},"nodeType":"YulFunctionCall","src":"43829:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"43776:43:21"},"nodeType":"YulFunctionCall","src":"43776:72:21"},"nodeType":"YulExpressionStatement","src":"43776:72:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43436:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43448:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43456:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43464:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43472:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43483:4:21","type":""}],"src":"43310:545:21"},{"body":{"nodeType":"YulBlock","src":"43889:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43906:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43909:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43899:6:21"},"nodeType":"YulFunctionCall","src":"43899:88:21"},"nodeType":"YulExpressionStatement","src":"43899:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44003:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44006:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43996:6:21"},"nodeType":"YulFunctionCall","src":"43996:15:21"},"nodeType":"YulExpressionStatement","src":"43996:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44027:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44030:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44020:6:21"},"nodeType":"YulFunctionCall","src":"44020:15:21"},"nodeType":"YulExpressionStatement","src":"44020:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"43861:180:21"},{"body":{"nodeType":"YulBlock","src":"44153:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44175:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"44183:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44171:3:21"},"nodeType":"YulFunctionCall","src":"44171:14:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"44187:26:21","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44164:6:21"},"nodeType":"YulFunctionCall","src":"44164:50:21"},"nodeType":"YulExpressionStatement","src":"44164:50:21"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44145:6:21","type":""}],"src":"44047:174:21"},{"body":{"nodeType":"YulBlock","src":"44373:220:21","statements":[{"nodeType":"YulAssignment","src":"44383:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44449:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"44454:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44390:58:21"},"nodeType":"YulFunctionCall","src":"44390:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44383:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44555:3:21"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"44466:88:21"},"nodeType":"YulFunctionCall","src":"44466:93:21"},"nodeType":"YulExpressionStatement","src":"44466:93:21"},{"nodeType":"YulAssignment","src":"44568:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44579:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"44584:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44575:3:21"},"nodeType":"YulFunctionCall","src":"44575:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44568:3:21"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44361:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44369:3:21","type":""}],"src":"44227:366:21"},{"body":{"nodeType":"YulBlock","src":"44770:248:21","statements":[{"nodeType":"YulAssignment","src":"44780:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44792:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"44803:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44788:3:21"},"nodeType":"YulFunctionCall","src":"44788:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44780:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44827:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"44838:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44823:3:21"},"nodeType":"YulFunctionCall","src":"44823:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44846:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"44852:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44842:3:21"},"nodeType":"YulFunctionCall","src":"44842:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44816:6:21"},"nodeType":"YulFunctionCall","src":"44816:47:21"},"nodeType":"YulExpressionStatement","src":"44816:47:21"},{"nodeType":"YulAssignment","src":"44872:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45006:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44880:124:21"},"nodeType":"YulFunctionCall","src":"44880:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44872:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44750:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44765:4:21","type":""}],"src":"44599:419:21"},{"body":{"nodeType":"YulBlock","src":"45130:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45152:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"45160:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45148:3:21"},"nodeType":"YulFunctionCall","src":"45148:14:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"45164:33:21","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45141:6:21"},"nodeType":"YulFunctionCall","src":"45141:57:21"},"nodeType":"YulExpressionStatement","src":"45141:57:21"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45122:6:21","type":""}],"src":"45024:181:21"},{"body":{"nodeType":"YulBlock","src":"45357:220:21","statements":[{"nodeType":"YulAssignment","src":"45367:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45433:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"45438:2:21","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45374:58:21"},"nodeType":"YulFunctionCall","src":"45374:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45367:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45539:3:21"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"45450:88:21"},"nodeType":"YulFunctionCall","src":"45450:93:21"},"nodeType":"YulExpressionStatement","src":"45450:93:21"},{"nodeType":"YulAssignment","src":"45552:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45563:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"45568:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45559:3:21"},"nodeType":"YulFunctionCall","src":"45559:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45552:3:21"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45345:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45353:3:21","type":""}],"src":"45211:366:21"},{"body":{"nodeType":"YulBlock","src":"45754:248:21","statements":[{"nodeType":"YulAssignment","src":"45764:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45776:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45787:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45772:3:21"},"nodeType":"YulFunctionCall","src":"45772:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45764:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45811:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45822:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45807:3:21"},"nodeType":"YulFunctionCall","src":"45807:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45830:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"45836:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45826:3:21"},"nodeType":"YulFunctionCall","src":"45826:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45800:6:21"},"nodeType":"YulFunctionCall","src":"45800:47:21"},"nodeType":"YulExpressionStatement","src":"45800:47:21"},{"nodeType":"YulAssignment","src":"45856:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45990:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45864:124:21"},"nodeType":"YulFunctionCall","src":"45864:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45856:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45734:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45749:4:21","type":""}],"src":"45583:419:21"},{"body":{"nodeType":"YulBlock","src":"46114:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46136:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46144:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46132:3:21"},"nodeType":"YulFunctionCall","src":"46132:14:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"46148:34:21","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46125:6:21"},"nodeType":"YulFunctionCall","src":"46125:58:21"},"nodeType":"YulExpressionStatement","src":"46125:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46204:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46212:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46200:3:21"},"nodeType":"YulFunctionCall","src":"46200:15:21"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"46217:4:21","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46193:6:21"},"nodeType":"YulFunctionCall","src":"46193:29:21"},"nodeType":"YulExpressionStatement","src":"46193:29:21"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46106:6:21","type":""}],"src":"46008:221:21"},{"body":{"nodeType":"YulBlock","src":"46381:220:21","statements":[{"nodeType":"YulAssignment","src":"46391:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46457:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"46462:2:21","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46398:58:21"},"nodeType":"YulFunctionCall","src":"46398:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46391:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46563:3:21"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"46474:88:21"},"nodeType":"YulFunctionCall","src":"46474:93:21"},"nodeType":"YulExpressionStatement","src":"46474:93:21"},{"nodeType":"YulAssignment","src":"46576:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46587:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"46592:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46583:3:21"},"nodeType":"YulFunctionCall","src":"46583:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46576:3:21"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46369:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46377:3:21","type":""}],"src":"46235:366:21"},{"body":{"nodeType":"YulBlock","src":"46778:248:21","statements":[{"nodeType":"YulAssignment","src":"46788:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46811:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46796:3:21"},"nodeType":"YulFunctionCall","src":"46796:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46788:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46846:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46831:3:21"},"nodeType":"YulFunctionCall","src":"46831:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46854:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"46860:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46850:3:21"},"nodeType":"YulFunctionCall","src":"46850:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46824:6:21"},"nodeType":"YulFunctionCall","src":"46824:47:21"},"nodeType":"YulExpressionStatement","src":"46824:47:21"},{"nodeType":"YulAssignment","src":"46880:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47014:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46888:124:21"},"nodeType":"YulFunctionCall","src":"46888:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46880:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46758:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46773:4:21","type":""}],"src":"46607:419:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20Votes.Checkpoint -> struct ERC20Votes.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$980_memory_ptr_to_t_struct$_Checkpoint_$980_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$980_memory_ptr__to_t_struct$_Checkpoint_$980_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$980_memory_ptr_to_t_struct$_Checkpoint_$980_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: future lookup\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: broken clock mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2792":[{"length":32,"start":6646}],"2794":[{"length":32,"start":6605}],"2796":[{"length":32,"start":6519}],"2798":[{"length":32,"start":9095}],"2800":[{"length":32,"start":9128}],"2803":[{"length":32,"start":2443}],"2806":[{"length":32,"start":2495}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018e5760003560e01c806370a08231116100de5780639ab24eb011610097578063c3cda52011610071578063c3cda52014610503578063d505accf1461051f578063dd62ed3e1461053b578063f1127ed81461056b5761018e565b80639ab24eb014610473578063a457c2d7146104a3578063a9059cbb146104d35761018e565b806370a08231146103835780637ecebe00146103b357806384b0196e146103e35780638e539e8c1461040757806391ddadf41461043757806395d89b41146104555761018e565b8063395093511161014b578063587cde1e11610125578063587cde1e146102e95780635c19a95c146103195780635d641847146103355780636fcfff45146103535761018e565b8063395093511461026b5780633a46b1a81461029b5780634bf5d7e9146102cb5761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806323b872dd146101ff578063313ce5671461022f5780633644e5151461024d575b600080fd5b61019b61059b565b6040516101a89190612a57565b60405180910390f35b6101cb60048036038101906101c69190612b12565b61062d565b6040516101d89190612b6d565b60405180910390f35b6101e9610650565b6040516101f69190612b97565b60405180910390f35b61021960048036038101906102149190612bb2565b61065a565b6040516102269190612b6d565b60405180910390f35b610237610689565b6040516102449190612c21565b60405180910390f35b610255610692565b6040516102629190612c55565b60405180910390f35b61028560048036038101906102809190612b12565b6106a1565b6040516102929190612b6d565b60405180910390f35b6102b560048036038101906102b09190612b12565b6106d8565b6040516102c29190612b97565b60405180910390f35b6102d361077b565b6040516102e09190612a57565b60405180910390f35b61030360048036038101906102fe9190612c70565b610809565b6040516103109190612cac565b60405180910390f35b610333600480360381019061032e9190612c70565b610872565b005b61033d610886565b60405161034a9190612b97565b60405180910390f35b61036d60048036038101906103689190612c70565b61088c565b60405161037a9190612ce6565b60405180910390f35b61039d60048036038101906103989190612c70565b6108e0565b6040516103aa9190612b97565b60405180910390f35b6103cd60048036038101906103c89190612c70565b610928565b6040516103da9190612b97565b60405180910390f35b6103eb610978565b6040516103fe9796959493929190612dfa565b60405180910390f35b610421600480360381019061041c9190612e7e565b610a7a565b60405161042e9190612b97565b60405180910390f35b61043f610adf565b60405161044c9190612ecc565b60405180910390f35b61045d610aef565b60405161046a9190612a57565b60405180910390f35b61048d60048036038101906104889190612c70565b610b81565b60405161049a9190612b97565b60405180910390f35b6104bd60048036038101906104b89190612b12565b610c89565b6040516104ca9190612b6d565b60405180910390f35b6104ed60048036038101906104e89190612b12565b610d00565b6040516104fa9190612b6d565b60405180910390f35b61051d60048036038101906105189190612f3f565b610d23565b005b61053960048036038101906105349190612fcc565b610e27565b005b6105556004803603810190610550919061306e565b610f69565b6040516105629190612b97565b60405180910390f35b610585600480360381019061058091906130da565b610ff0565b604051610592919061318f565b60405180910390f35b6060600380546105aa906131d9565b80601f01602080910402602001604051908101604052809291908181526020018280546105d6906131d9565b80156106235780601f106105f857610100808354040283529160200191610623565b820191906000526020600020905b81548152906001019060200180831161060657829003601f168201915b5050505050905090565b6000806106386114a0565b90506106458185856114a8565b600191505092915050565b6000600254905090565b6000806106656114a0565b9050610672858285611671565b61067d8585856116fd565b60019150509392505050565b60006012905090565b600061069c611973565b905090565b6000806106ac6114a0565b90506106cd8185856106be8589610f69565b6106c89190613239565b6114a8565b600191505092915050565b60006106e2610adf565b65ffffffffffff16821061072b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610722906132b9565b60405180910390fd5b610773600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611a2a565b905092915050565b606043610786610adf565b65ffffffffffff16146107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590613325565b60405180910390fd5b6040518060400160405280601d81526020017f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000815250905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61088361087d6114a0565b82611b72565b50565b600c5481565b60006108d9600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506113b2565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610971600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c8c565b9050919050565b6000606080600080600060606109b860057f0000000000000000000000000000000000000000000000000000000000000000611c9a90919063ffffffff16565b6109ec60067f0000000000000000000000000000000000000000000000000000000000000000611c9a90919063ffffffff16565b46306000801b600067ffffffffffffffff811115610a0d57610a0c613345565b5b604051908082528060200260200182016040528015610a3b5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000610a84610adf565b65ffffffffffff168210610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac4906132b9565b60405180910390fd5b610ad8600b83611a2a565b9050919050565b6000610aea43611430565b905090565b606060048054610afe906131d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2a906131d9565b8015610b775780601f10610b4c57610100808354040283529160200191610b77565b820191906000526020600020905b815481529060010190602001808311610b5a57829003601f168201915b5050505050905090565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008114610c6057600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001820381548110610c2557610c24613374565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610c63565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600080610c946114a0565b90506000610ca28286610f69565b905083811015610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde90613415565b60405180910390fd5b610cf482868684036114a8565b60019250505092915050565b600080610d0b6114a0565b9050610d188185856116fd565b600191505092915050565b83421115610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d90613481565b60405180910390fd5b6000610dc8610dc07fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610da594939291906134a1565b60405160208183030381529060405280519060200120611d4a565b858585611d64565b9050610dd381611d8f565b8614610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b90613532565b60405180910390fd5b610e1e8188611b72565b50505050505050565b83421115610e6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e619061359e565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e998c611d8f565b89604051602001610eaf969594939291906135be565b6040516020818303038152906040528051906020012090506000610ed282611d4a565b90506000610ee282878787611d64565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f499061366b565b60405180910390fd5b610f5d8a8a8a6114a8565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610ff8612989565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff168154811061104f5761104e613374565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b600060208351101561111c5761111583611ded565b905061113e565b8261112683611144565b60000190816111359190613837565b5060ff60001b90505b92915050565b6000819050919050565b61115882826111db565b611160611e55565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611186610650565b11156111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be9061397b565b60405180910390fd5b6111d5600b61133183611e79565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361124a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611241906139e7565b60405180910390fd5b61125660008383612154565b80600260008282546112689190613239565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113199190612b97565b60405180910390a361132d60008383612159565b5050565b6000818361133f9190613239565b905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80168211156113aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a190613a79565b60405180910390fd5b819050919050565b600063ffffffff80168211156113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f490613b0b565b60405180910390fd5b819050919050565b611410838383611485565b61142b61141c84610809565b61142584610809565b83612169565b505050565b600065ffffffffffff801682111561147d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147490613b9d565b60405180910390fd5b819050919050565b505050565b600081836114989190613bbd565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150e90613c63565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157d90613cf5565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516116649190612b97565b60405180910390a3505050565b600061167d8484610f69565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116f757818110156116e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e090613d61565b60405180910390fd5b6116f684848484036114a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361176c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176390613df3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d290613e85565b60405180910390fd5b6117e6838383612154565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561186c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186390613f17565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161195a9190612b97565b60405180910390a361196d848484612159565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156119ef57507f000000000000000000000000000000000000000000000000000000000000000046145b15611a1c577f00000000000000000000000000000000000000000000000000000000000000009050611a27565b611a24612362565b90505b90565b600080838054905090506000808290506005831115611aa0576000611a4e846123f8565b84611a599190613bbd565b905085611a6688836124f1565b60000160009054906101000a900463ffffffff1663ffffffff161115611a8e57809150611a9e565b600181611a9b9190613239565b92505b505b5b80821015611b00576000611ab58383612506565b905085611ac288836124f1565b60000160009054906101000a900463ffffffff1663ffffffff161115611aea57809150611afa565b600181611af79190613239565b92505b50611aa1565b60008114611b4657611b1586600183036124f1565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611b49565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b6000611b7d83610809565b90506000611b8a846108e0565b905082600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611c86828483612169565b50505050565b600081600001549050919050565b606060ff60001b8314611cb757611cb08361252c565b9050611d44565b818054611cc3906131d9565b80601f0160208091040260200160405190810160405280929190818152602001828054611cef906131d9565b8015611d3c5780601f10611d1157610100808354040283529160200191611d3c565b820191906000526020600020905b815481529060010190602001808311611d1f57829003601f168201915b505050505090505b92915050565b6000611d5d611d57611973565b836125a0565b9050919050565b6000806000611d75878787876125e1565b91509150611d82816126c3565b8192505050949350505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611ddc81611c8c565b9150611de781612829565b50919050565b600080829050601f81511115611e3a57826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401611e319190612a57565b60405180910390fd5b805181611e4690613f67565b60001c1760001b915050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6000806000858054905090506000808214611f3f57611e9b87600184036124f1565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050611f7b565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169350611fb084868863ffffffff16565b9250600082118015611fda5750611fc5610adf565b65ffffffffffff16816000015163ffffffff16145b1561204b57611fe883611347565b611ff588600185036124f1565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555061214a565b86604051806040016040528061206f612062610adf565b65ffffffffffff166113b2565b63ffffffff16815260200161208386611347565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b505050565b612164838383611405565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156121a55750600081115b1561235d57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146122835760008061222c600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061148a85611e79565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612278929190613fce565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461235c57600080612305600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061133185611e79565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612351929190613fce565b60405180910390a250505b5b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016123dd959493929190613ff7565b60405160208183030381529060405280519060200120905090565b600080820361240a57600090506124ec565b600060016124178461283f565b901c6001901b905060018184816124315761243061404a565b5b048201901c9050600181848161244a5761244961404a565b5b048201901c905060018184816124635761246261404a565b5b048201901c9050600181848161247c5761247b61404a565b5b048201901c905060018184816124955761249461404a565b5b048201901c905060018184816124ae576124ad61404a565b5b048201901c905060018184816124c7576124c661404a565b5b048201901c90506124e8818285816124e2576124e161404a565b5b04612920565b9150505b919050565b60008260005281602060002001905092915050565b600060028284186125179190614079565b8284166125249190613239565b905092915050565b6060600061253983612939565b90506000602067ffffffffffffffff81111561255857612557613345565b5b6040519080825280601f01601f19166020018201604052801561258a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561261c5760006003915091506126ba565b60006001878787876040516000815260200160405260405161264194939291906140aa565b6020604051602081039080840390855afa158015612663573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036126b1576000600192509250506126ba565b80600092509250505b94509492505050565b600060048111156126d7576126d66140ef565b5b8160048111156126ea576126e96140ef565b5b03156128265760016004811115612704576127036140ef565b5b816004811115612717576127166140ef565b5b03612757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161274e9061416a565b60405180910390fd5b6002600481111561276b5761276a6140ef565b5b81600481111561277e5761277d6140ef565b5b036127be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b5906141d6565b60405180910390fd5b600360048111156127d2576127d16140ef565b5b8160048111156127e5576127e46140ef565b5b03612825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281c90614268565b60405180910390fd5b5b50565b6001816000016000828254019250508190555050565b600080600090506000608084901c111561286157608083901c92506080810190505b6000604084901c111561287c57604083901c92506040810190505b6000602084901c111561289757602083901c92506020810190505b6000601084901c11156128b257601083901c92506010810190505b6000600884901c11156128cd57600883901c92506008810190505b6000600484901c11156128e857600483901c92506004810190505b6000600284901c111561290357600283901c92506002810190505b6000600184901c1115612917576001810190505b80915050919050565b600081831061292f5781612931565b825b905092915050565b60008060ff8360001c169050601f811115612980576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a015780820151818401526020810190506129e6565b60008484015250505050565b6000601f19601f8301169050919050565b6000612a29826129c7565b612a3381856129d2565b9350612a438185602086016129e3565b612a4c81612a0d565b840191505092915050565b60006020820190508181036000830152612a718184612a1e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612aa982612a7e565b9050919050565b612ab981612a9e565b8114612ac457600080fd5b50565b600081359050612ad681612ab0565b92915050565b6000819050919050565b612aef81612adc565b8114612afa57600080fd5b50565b600081359050612b0c81612ae6565b92915050565b60008060408385031215612b2957612b28612a79565b5b6000612b3785828601612ac7565b9250506020612b4885828601612afd565b9150509250929050565b60008115159050919050565b612b6781612b52565b82525050565b6000602082019050612b826000830184612b5e565b92915050565b612b9181612adc565b82525050565b6000602082019050612bac6000830184612b88565b92915050565b600080600060608486031215612bcb57612bca612a79565b5b6000612bd986828701612ac7565b9350506020612bea86828701612ac7565b9250506040612bfb86828701612afd565b9150509250925092565b600060ff82169050919050565b612c1b81612c05565b82525050565b6000602082019050612c366000830184612c12565b92915050565b6000819050919050565b612c4f81612c3c565b82525050565b6000602082019050612c6a6000830184612c46565b92915050565b600060208284031215612c8657612c85612a79565b5b6000612c9484828501612ac7565b91505092915050565b612ca681612a9e565b82525050565b6000602082019050612cc16000830184612c9d565b92915050565b600063ffffffff82169050919050565b612ce081612cc7565b82525050565b6000602082019050612cfb6000830184612cd7565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b612d3681612d01565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d7181612adc565b82525050565b6000612d838383612d68565b60208301905092915050565b6000602082019050919050565b6000612da782612d3c565b612db18185612d47565b9350612dbc83612d58565b8060005b83811015612ded578151612dd48882612d77565b9750612ddf83612d8f565b925050600181019050612dc0565b5085935050505092915050565b600060e082019050612e0f600083018a612d2d565b8181036020830152612e218189612a1e565b90508181036040830152612e358188612a1e565b9050612e446060830187612b88565b612e516080830186612c9d565b612e5e60a0830185612c46565b81810360c0830152612e708184612d9c565b905098975050505050505050565b600060208284031215612e9457612e93612a79565b5b6000612ea284828501612afd565b91505092915050565b600065ffffffffffff82169050919050565b612ec681612eab565b82525050565b6000602082019050612ee16000830184612ebd565b92915050565b612ef081612c05565b8114612efb57600080fd5b50565b600081359050612f0d81612ee7565b92915050565b612f1c81612c3c565b8114612f2757600080fd5b50565b600081359050612f3981612f13565b92915050565b60008060008060008060c08789031215612f5c57612f5b612a79565b5b6000612f6a89828a01612ac7565b9650506020612f7b89828a01612afd565b9550506040612f8c89828a01612afd565b9450506060612f9d89828a01612efe565b9350506080612fae89828a01612f2a565b92505060a0612fbf89828a01612f2a565b9150509295509295509295565b600080600080600080600060e0888a031215612feb57612fea612a79565b5b6000612ff98a828b01612ac7565b975050602061300a8a828b01612ac7565b965050604061301b8a828b01612afd565b955050606061302c8a828b01612afd565b945050608061303d8a828b01612efe565b93505060a061304e8a828b01612f2a565b92505060c061305f8a828b01612f2a565b91505092959891949750929550565b6000806040838503121561308557613084612a79565b5b600061309385828601612ac7565b92505060206130a485828601612ac7565b9150509250929050565b6130b781612cc7565b81146130c257600080fd5b50565b6000813590506130d4816130ae565b92915050565b600080604083850312156130f1576130f0612a79565b5b60006130ff85828601612ac7565b9250506020613110858286016130c5565b9150509250929050565b61312381612cc7565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61315a81613129565b82525050565b604082016000820151613176600085018261311a565b5060208201516131896020850182613151565b50505050565b60006040820190506131a46000830184613160565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806131f157607f821691505b602082108103613204576132036131aa565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061324482612adc565b915061324f83612adc565b92508282019050808211156132675761326661320a565b5b92915050565b7f4552433230566f7465733a20667574757265206c6f6f6b757000000000000000600082015250565b60006132a36019836129d2565b91506132ae8261326d565b602082019050919050565b600060208201905081810360008301526132d281613296565b9050919050565b7f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465000000600082015250565b600061330f601d836129d2565b915061331a826132d9565b602082019050919050565b6000602082019050818103600083015261333e81613302565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006133ff6025836129d2565b915061340a826133a3565b604082019050919050565b6000602082019050818103600083015261342e816133f2565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b600061346b601d836129d2565b915061347682613435565b602082019050919050565b6000602082019050818103600083015261349a8161345e565b9050919050565b60006080820190506134b66000830187612c46565b6134c36020830186612c9d565b6134d06040830185612b88565b6134dd6060830184612b88565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b600061351c6019836129d2565b9150613527826134e6565b602082019050919050565b6000602082019050818103600083015261354b8161350f565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000613588601d836129d2565b915061359382613552565b602082019050919050565b600060208201905081810360008301526135b78161357b565b9050919050565b600060c0820190506135d36000830189612c46565b6135e06020830188612c9d565b6135ed6040830187612c9d565b6135fa6060830186612b88565b6136076080830185612b88565b61361460a0830184612b88565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b6000613655601e836129d2565b91506136608261361f565b602082019050919050565b6000602082019050818103600083015261368481613648565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026136ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826136b0565b6136f786836136b0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061373461372f61372a84612adc565b61370f565b612adc565b9050919050565b6000819050919050565b61374e83613719565b61376261375a8261373b565b8484546136bd565b825550505050565b600090565b61377761376a565b613782818484613745565b505050565b5b818110156137a65761379b60008261376f565b600181019050613788565b5050565b601f8211156137eb576137bc8161368b565b6137c5846136a0565b810160208510156137d4578190505b6137e86137e0856136a0565b830182613787565b50505b505050565b600082821c905092915050565b600061380e600019846008026137f0565b1980831691505092915050565b600061382783836137fd565b9150826002028217905092915050565b613840826129c7565b67ffffffffffffffff81111561385957613858613345565b5b61386382546131d9565b61386e8282856137aa565b600060209050601f8311600181146138a1576000841561388f578287015190505b613899858261381b565b865550613901565b601f1984166138af8661368b565b60005b828110156138d7578489015182556001820191506020850194506020810190506138b2565b868310156138f457848901516138f0601f8916826137fd565b8355505b6001600288020188555050505b505050505050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b60006139656030836129d2565b915061397082613909565b604082019050919050565b6000602082019050818103600083015261399481613958565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006139d1601f836129d2565b91506139dc8261399b565b602082019050919050565b60006020820190508181036000830152613a00816139c4565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b6000613a636027836129d2565b9150613a6e82613a07565b604082019050919050565b60006020820190508181036000830152613a9281613a56565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b6000613af56026836129d2565b9150613b0082613a99565b604082019050919050565b60006020820190508181036000830152613b2481613ae8565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203460008201527f3820626974730000000000000000000000000000000000000000000000000000602082015250565b6000613b876026836129d2565b9150613b9282613b2b565b604082019050919050565b60006020820190508181036000830152613bb681613b7a565b9050919050565b6000613bc882612adc565b9150613bd383612adc565b9250828203905081811115613beb57613bea61320a565b5b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000613c4d6024836129d2565b9150613c5882613bf1565b604082019050919050565b60006020820190508181036000830152613c7c81613c40565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613cdf6022836129d2565b9150613cea82613c83565b604082019050919050565b60006020820190508181036000830152613d0e81613cd2565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613d4b601d836129d2565b9150613d5682613d15565b602082019050919050565b60006020820190508181036000830152613d7a81613d3e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613ddd6025836129d2565b9150613de882613d81565b604082019050919050565b60006020820190508181036000830152613e0c81613dd0565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613e6f6023836129d2565b9150613e7a82613e13565b604082019050919050565b60006020820190508181036000830152613e9e81613e62565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613f016026836129d2565b9150613f0c82613ea5565b604082019050919050565b60006020820190508181036000830152613f3081613ef4565b9050919050565b600081519050919050565b6000819050602082019050919050565b6000613f5e8251612c3c565b80915050919050565b6000613f7282613f37565b82613f7c84613f42565b9050613f8781613f52565b92506020821015613fc757613fc27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026136b0565b831692505b5050919050565b6000604082019050613fe36000830185612b88565b613ff06020830184612b88565b9392505050565b600060a08201905061400c6000830188612c46565b6140196020830187612c46565b6140266040830186612c46565b6140336060830185612b88565b6140406080830184612c9d565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061408482612adc565b915061408f83612adc565b92508261409f5761409e61404a565b5b828204905092915050565b60006080820190506140bf6000830187612c46565b6140cc6020830186612c12565b6140d96040830185612c46565b6140e66060830184612c46565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006141546018836129d2565b915061415f8261411e565b602082019050919050565b6000602082019050818103600083015261418381614147565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006141c0601f836129d2565b91506141cb8261418a565b602082019050919050565b600060208201905081810360008301526141ef816141b3565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006142526022836129d2565b915061425d826141f6565b604082019050919050565b6000602082019050818103600083015261428181614245565b905091905056fea2646970667358221220bfe866bc3c0cc20705f23d6a8a8adf5b1b46076a527aa39aa6949edfa16ac28964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC3CDA520 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x56B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D3 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x455 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x5D641847 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x353 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x2CB JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x2BB2 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x2C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2CAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2E7E JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x2ECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x2F3F JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x2FCC JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x306E JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x30DA JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x318F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5AA SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D6 SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x623 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x623 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x606 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x638 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x645 DUP2 DUP6 DUP6 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x665 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x672 DUP6 DUP3 DUP6 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x67D DUP6 DUP6 DUP6 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69C PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CD DUP2 DUP6 DUP6 PUSH2 0x6BE DUP6 DUP10 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E2 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x722 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x773 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x786 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x3325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x883 PUSH2 0x87D PUSH2 0x14A0 JUMP JUMPDEST DUP3 PUSH2 0x1B72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x13B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x9B8 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1C9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9EC PUSH1 0x6 PUSH32 0x0 PUSH2 0x1C9A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x3345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA3B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA84 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP1 PUSH2 0x32B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD8 PUSH1 0xB DUP4 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA NUMBER PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAFE SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB2A SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB77 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB77 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB5A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xC60 JUMPI PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0xC25 JUMPI PUSH2 0xC24 PUSH2 0x3374 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC94 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA2 DUP3 DUP7 PUSH2 0xF69 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF4 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD0B PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xD18 DUP2 DUP6 DUP6 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC8 PUSH2 0xDC0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1D4A JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP PUSH2 0xDD3 DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP7 EQ PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE1E DUP2 DUP9 PUSH2 0x1B72 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE61 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE99 DUP13 PUSH2 0x1D8F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEAF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xED2 DUP3 PUSH2 0x1D4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEE2 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5D DUP11 DUP11 DUP11 PUSH2 0x14A8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF8 PUSH2 0x2989 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0x3374 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x111C JUMPI PUSH2 0x1115 DUP4 PUSH2 0x1DED JUMP JUMPDEST SWAP1 POP PUSH2 0x113E JUMP JUMPDEST DUP3 PUSH2 0x1126 DUP4 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x3837 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1158 DUP3 DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x1160 PUSH2 0x1E55 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1186 PUSH2 0x650 JUMP JUMPDEST GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BE SWAP1 PUSH2 0x397B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D5 PUSH1 0xB PUSH2 0x1331 DUP4 PUSH2 0x1E79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP1 PUSH2 0x39E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1256 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2154 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1268 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x132D PUSH1 0x0 DUP4 DUP4 PUSH2 0x2159 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x133F SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A1 SWAP1 PUSH2 0x3A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP1 PUSH2 0x3B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1410 DUP4 DUP4 DUP4 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x142B PUSH2 0x141C DUP5 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x1425 DUP5 PUSH2 0x809 JUMP JUMPDEST DUP4 PUSH2 0x2169 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP1 PUSH2 0x3B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1498 SWAP2 SWAP1 PUSH2 0x3BBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP1 PUSH2 0x3C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157D SWAP1 PUSH2 0x3CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167D DUP5 DUP5 PUSH2 0xF69 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x16F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E0 SWAP1 PUSH2 0x3D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x14A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1763 SWAP1 PUSH2 0x3DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP1 PUSH2 0x3E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E6 DUP4 DUP4 DUP4 PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x186C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1863 SWAP1 PUSH2 0x3F17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x196D DUP5 DUP5 DUP5 PUSH2 0x2159 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x19EF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1A1C JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A24 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0x0 PUSH2 0x1A4E DUP5 PUSH2 0x23F8 JUMP JUMPDEST DUP5 PUSH2 0x1A59 SWAP2 SWAP1 PUSH2 0x3BBD JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1A66 DUP9 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1A8E JUMPI DUP1 SWAP2 POP PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x0 PUSH2 0x1AB5 DUP4 DUP4 PUSH2 0x2506 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1AC2 DUP9 DUP4 PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1AEA JUMPI DUP1 SWAP2 POP PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1B46 JUMPI PUSH2 0x1B15 DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B49 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7D DUP4 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B8A DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C86 DUP3 DUP5 DUP4 PUSH2 0x2169 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1CB7 JUMPI PUSH2 0x1CB0 DUP4 PUSH2 0x252C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D44 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1CC3 SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CEF SWAP1 PUSH2 0x31D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5D PUSH2 0x1D57 PUSH2 0x1973 JUMP JUMPDEST DUP4 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D75 DUP8 DUP8 DUP8 DUP8 PUSH2 0x25E1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1D82 DUP2 PUSH2 0x26C3 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1DDC DUP2 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE7 DUP2 PUSH2 0x2829 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x1E3A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E31 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x1E46 SWAP1 PUSH2 0x3F67 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x1F3F JUMPI PUSH2 0x1E9B DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x1FB0 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1FDA JUMPI POP PUSH2 0x1FC5 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x204B JUMPI PUSH2 0x1FE8 DUP4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x1FF5 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x24F1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x214A JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x206F PUSH2 0x2062 PUSH2 0xADF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x13B2 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2083 DUP7 PUSH2 0x1347 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2164 DUP4 DUP4 DUP4 PUSH2 0x1405 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x21A5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x235D JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2283 JUMPI PUSH1 0x0 DUP1 PUSH2 0x222C PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x148A DUP6 PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2278 SWAP3 SWAP2 SWAP1 PUSH2 0x3FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x235C JUMPI PUSH1 0x0 DUP1 PUSH2 0x2305 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1331 DUP6 PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2351 SWAP3 SWAP2 SWAP1 PUSH2 0x3FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x240A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x24EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2417 DUP5 PUSH2 0x283F JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2431 JUMPI PUSH2 0x2430 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x244A JUMPI PUSH2 0x2449 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2463 JUMPI PUSH2 0x2462 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2495 JUMPI PUSH2 0x2494 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x24AE JUMPI PUSH2 0x24AD PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x24C7 JUMPI PUSH2 0x24C6 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x24E8 DUP2 DUP3 DUP6 DUP2 PUSH2 0x24E2 JUMPI PUSH2 0x24E1 PUSH2 0x404A JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2920 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x4079 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x2524 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2539 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2558 JUMPI PUSH2 0x2557 PUSH2 0x3345 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x258A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x261C JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2641 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2663 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26B1 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x26BA JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x26EA JUMPI PUSH2 0x26E9 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2826 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2704 JUMPI PUSH2 0x2703 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2717 JUMPI PUSH2 0x2716 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274E SWAP1 PUSH2 0x416A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x276B JUMPI PUSH2 0x276A PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x277E JUMPI PUSH2 0x277D PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x27BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B5 SWAP1 PUSH2 0x41D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27D2 JUMPI PUSH2 0x27D1 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27E5 JUMPI PUSH2 0x27E4 PUSH2 0x40EF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2825 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x281C SWAP1 PUSH2 0x4268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2861 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x287C JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2897 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28B2 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28CD JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2903 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2917 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x292F JUMPI DUP2 PUSH2 0x2931 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2980 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A01 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29E6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A29 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH2 0x2A33 DUP2 DUP6 PUSH2 0x29D2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A43 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29E3 JUMP JUMPDEST PUSH2 0x2A4C DUP2 PUSH2 0x2A0D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A71 DUP2 DUP5 PUSH2 0x2A1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA9 DUP3 PUSH2 0x2A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AB9 DUP2 PUSH2 0x2A9E JUMP JUMPDEST DUP2 EQ PUSH2 0x2AC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AD6 DUP2 PUSH2 0x2AB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEF DUP2 PUSH2 0x2ADC JUMP JUMPDEST DUP2 EQ PUSH2 0x2AFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B0C DUP2 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B29 JUMPI PUSH2 0x2B28 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B37 DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B48 DUP6 DUP3 DUP7 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B67 DUP2 PUSH2 0x2B52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B82 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B91 DUP2 PUSH2 0x2ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BCB JUMPI PUSH2 0x2BCA PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD9 DUP7 DUP3 DUP8 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2BEA DUP7 DUP3 DUP8 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2BFB DUP7 DUP3 DUP8 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1B DUP2 PUSH2 0x2C05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C4F DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C94 DUP5 DUP3 DUP6 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA6 DUP2 PUSH2 0x2A9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE0 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CFB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D36 DUP2 PUSH2 0x2D01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D71 DUP2 PUSH2 0x2ADC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D83 DUP4 DUP4 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA7 DUP3 PUSH2 0x2D3C JUMP JUMPDEST PUSH2 0x2DB1 DUP2 DUP6 PUSH2 0x2D47 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DBC DUP4 PUSH2 0x2D58 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DED JUMPI DUP2 MLOAD PUSH2 0x2DD4 DUP9 DUP3 PUSH2 0x2D77 JUMP JUMPDEST SWAP8 POP PUSH2 0x2DDF DUP4 PUSH2 0x2D8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2DC0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2E0F PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2D2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2E21 DUP2 DUP10 PUSH2 0x2A1E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2E35 DUP2 DUP9 PUSH2 0x2A1E JUMP JUMPDEST SWAP1 POP PUSH2 0x2E44 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x2E51 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x2E5E PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2C46 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E70 DUP2 DUP5 PUSH2 0x2D9C JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E94 JUMPI PUSH2 0x2E93 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EA2 DUP5 DUP3 DUP6 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EC6 DUP2 PUSH2 0x2EAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EF0 DUP2 PUSH2 0x2C05 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F0D DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F1C DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP2 EQ PUSH2 0x2F27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F39 DUP2 PUSH2 0x2F13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2F5C JUMPI PUSH2 0x2F5B PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F6A DUP10 DUP3 DUP11 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2F7B DUP10 DUP3 DUP11 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2F8C DUP10 DUP3 DUP11 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2F9D DUP10 DUP3 DUP11 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2FAE DUP10 DUP3 DUP11 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2FBF DUP10 DUP3 DUP11 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2FEB JUMPI PUSH2 0x2FEA PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FF9 DUP11 DUP3 DUP12 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x300A DUP11 DUP3 DUP12 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x301B DUP11 DUP3 DUP12 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x302C DUP11 DUP3 DUP12 ADD PUSH2 0x2AFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x303D DUP11 DUP3 DUP12 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x304E DUP11 DUP3 DUP12 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x305F DUP11 DUP3 DUP12 ADD PUSH2 0x2F2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3085 JUMPI PUSH2 0x3084 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3093 DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30A4 DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30B7 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x30C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30D4 DUP2 PUSH2 0x30AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30F1 JUMPI PUSH2 0x30F0 PUSH2 0x2A79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30FF DUP6 DUP3 DUP7 ADD PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3110 DUP6 DUP3 DUP7 ADD PUSH2 0x30C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3123 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x315A DUP2 PUSH2 0x3129 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3176 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x311A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3189 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3151 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3160 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x31F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3204 JUMPI PUSH2 0x3203 PUSH2 0x31AA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3244 DUP3 PUSH2 0x2ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x324F DUP4 PUSH2 0x2ADC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3267 JUMPI PUSH2 0x3266 PUSH2 0x320A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A3 PUSH1 0x19 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x32AE DUP3 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32D2 DUP2 PUSH2 0x3296 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330F PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x331A DUP3 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x333E DUP2 PUSH2 0x3302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FF PUSH1 0x25 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x340A DUP3 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x342E DUP2 PUSH2 0x33F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346B PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3476 DUP3 PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349A DUP2 PUSH2 0x345E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x34B6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x34C3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x34D0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x34DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351C PUSH1 0x19 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3527 DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x354B DUP2 PUSH2 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3588 PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3593 DUP3 PUSH2 0x3552 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B7 DUP2 PUSH2 0x357B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x35D3 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x35E0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x35ED PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x35FA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x3607 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x3614 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3655 PUSH1 0x1E DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3660 DUP3 PUSH2 0x361F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3684 DUP2 PUSH2 0x3648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x36ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x36B0 JUMP JUMPDEST PUSH2 0x36F7 DUP7 DUP4 PUSH2 0x36B0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3734 PUSH2 0x372F PUSH2 0x372A DUP5 PUSH2 0x2ADC JUMP JUMPDEST PUSH2 0x370F JUMP JUMPDEST PUSH2 0x2ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374E DUP4 PUSH2 0x3719 JUMP JUMPDEST PUSH2 0x3762 PUSH2 0x375A DUP3 PUSH2 0x373B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x36BD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3777 PUSH2 0x376A JUMP JUMPDEST PUSH2 0x3782 DUP2 DUP5 DUP5 PUSH2 0x3745 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37A6 JUMPI PUSH2 0x379B PUSH1 0x0 DUP3 PUSH2 0x376F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3788 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x37EB JUMPI PUSH2 0x37BC DUP2 PUSH2 0x368B JUMP JUMPDEST PUSH2 0x37C5 DUP5 PUSH2 0x36A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37D4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x37E8 PUSH2 0x37E0 DUP6 PUSH2 0x36A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3787 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x37F0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3827 DUP4 DUP4 PUSH2 0x37FD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3840 DUP3 PUSH2 0x29C7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3859 JUMPI PUSH2 0x3858 PUSH2 0x3345 JUMP JUMPDEST JUMPDEST PUSH2 0x3863 DUP3 SLOAD PUSH2 0x31D9 JUMP JUMPDEST PUSH2 0x386E DUP3 DUP3 DUP6 PUSH2 0x37AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38A1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x388F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3899 DUP6 DUP3 PUSH2 0x381B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x38AF DUP7 PUSH2 0x368B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38D7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x38F4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x38F0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x37FD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3965 PUSH1 0x30 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3970 DUP3 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3994 DUP2 PUSH2 0x3958 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39D1 PUSH1 0x1F DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x39DC DUP3 PUSH2 0x399B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A00 DUP2 PUSH2 0x39C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A63 PUSH1 0x27 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A6E DUP3 PUSH2 0x3A07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A92 DUP2 PUSH2 0x3A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF5 PUSH1 0x26 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B00 DUP3 PUSH2 0x3A99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B24 DUP2 PUSH2 0x3AE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B87 PUSH1 0x26 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B92 DUP3 PUSH2 0x3B2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BB6 DUP2 PUSH2 0x3B7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC8 DUP3 PUSH2 0x2ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x3BD3 DUP4 PUSH2 0x2ADC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3BEB JUMPI PUSH2 0x3BEA PUSH2 0x320A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4D PUSH1 0x24 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C58 DUP3 PUSH2 0x3BF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C7C DUP2 PUSH2 0x3C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDF PUSH1 0x22 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CEA DUP3 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D0E DUP2 PUSH2 0x3CD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4B PUSH1 0x1D DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D56 DUP3 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7A DUP2 PUSH2 0x3D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DDD PUSH1 0x25 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DE8 DUP3 PUSH2 0x3D81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E0C DUP2 PUSH2 0x3DD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6F PUSH1 0x23 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E7A DUP3 PUSH2 0x3E13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E9E DUP2 PUSH2 0x3E62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F01 PUSH1 0x26 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F0C DUP3 PUSH2 0x3EA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F30 DUP2 PUSH2 0x3EF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5E DUP3 MLOAD PUSH2 0x2C3C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F72 DUP3 PUSH2 0x3F37 JUMP JUMPDEST DUP3 PUSH2 0x3F7C DUP5 PUSH2 0x3F42 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F87 DUP2 PUSH2 0x3F52 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x3FC7 JUMPI PUSH2 0x3FC2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x36B0 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FE3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x3FF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B88 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x400C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x4019 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x4026 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x4033 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2B88 JUMP JUMPDEST PUSH2 0x4040 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2C9D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4084 DUP3 PUSH2 0x2ADC JUMP JUMPDEST SWAP2 POP PUSH2 0x408F DUP4 PUSH2 0x2ADC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x409F JUMPI PUSH2 0x409E PUSH2 0x404A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x40BF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x40CC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2C12 JUMP JUMPDEST PUSH2 0x40D9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2C46 JUMP JUMPDEST PUSH2 0x40E6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2C46 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4154 PUSH1 0x18 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x415F DUP3 PUSH2 0x411E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4183 DUP2 PUSH2 0x4147 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C0 PUSH1 0x1F DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x41CB DUP3 PUSH2 0x418A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41EF DUP2 PUSH2 0x41B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4252 PUSH1 0x22 DUP4 PUSH2 0x29D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x425D DUP3 PUSH2 0x41F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4281 DUP2 PUSH2 0x4245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xE8 PUSH7 0xBC3C0CC20705F2 RETURNDATASIZE PUSH11 0x8A8ADF5B1B46076A527AA3 SWAP11 0xA6 SWAP5 SWAP15 0xDF LOG1 PUSH11 0xC28964736F6C6343000812 STOP CALLER ","sourceMap":"130:782:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2867:113:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3466:248:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2047:254;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2838:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6275:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;175:54:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2601:149:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2617:126:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5021:633:16;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;3976:239:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1817:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3043:243:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6464:574:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1930:626:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:149:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2378:148:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:4;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;2867:113:6:-;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;5854:234:4:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3466:248:7:-;3562:7;3601;:5;:7::i;:::-;3589:19;;:9;:19;3581:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3655:52;3674:12;:21;3687:7;3674:21;;;;;;;;;;;;;;;3697:9;3655:18;:52::i;:::-;3648:59;;3466:248;;;;:::o;2047:254::-;2107:13;2200:12;2189:7;:5;:7::i;:::-;:23;;;2181:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2256:38;;;;;;;;;;;;;;;;;;;2047:254;:::o;2838:126::-;2912:7;2938:10;:19;2949:7;2938:19;;;;;;;;;;;;;;;;;;;;;;;;;2931:26;;2838:126;;;:::o;6275:112::-;6346:34;6356:12;:10;:12::i;:::-;6370:9;6346;:34::i;:::-;6275:112;:::o;175:54:20:-;;;;:::o;2601:149:7:-;2671:6;2696:47;2714:12;:21;2727:7;2714:21;;;;;;;;;;;;;;;:28;;;;2696:17;:47::i;:::-;2689:54;;2601:149;;;:::o;3419:125:4:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2617:126:6:-;2686:7;2712:24;:7;:14;2720:5;2712:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2705:31;;2617:126;;;:::o;5021:633:16:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;3976:239:7:-;4061:7;4100;:5;:7::i;:::-;4088:19;;:9;:19;4080:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4154:54;4173:23;4198:9;4154:18;:54::i;:::-;4147:61;;3976:239;;;:::o;1817:118::-;1872:6;1897:31;1915:12;1897:17;:31::i;:::-;1890:38;;1817:118;:::o;2369:102:4:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;3043:243:7:-;3116:7;3135:11;3149:12;:21;3162:7;3149:21;;;;;;;;;;;;;;;:28;;;;3135:42;;3225:1;3218:3;:8;:51;;3233:12;:21;3246:7;3233:21;;;;;;;;;;;;;;;3261:1;3255:3;:7;3233:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;3218:51;;;3229:1;3218:51;3211:58;;;;;3043:243;;;:::o;6575:427:4:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;6464:574:7:-;6683:6;6664:15;:25;;6656:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6733:14;6750:169;6777:87;1439:71;6837:9;6848:5;6855:6;6804:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6794:69;;;;;;6777:16;:87::i;:::-;6878:1;6893;6908;6750:13;:169::i;:::-;6733:186;;6946:17;6956:6;6946:9;:17::i;:::-;6937:5;:26;6929:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7003:28;7013:6;7021:9;7003;:28::i;:::-;6646:392;6464:574;;;;;;:::o;1930:626:6:-;2165:8;2146:15;:27;;2138:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2319:8;2249:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;2457:15;;:6;:15;;;2449:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;3987:149:4:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2378:148:7:-;2457:17;;:::i;:::-;2493:12;:21;2506:7;2493:21;;;;;;;;;;;;;;;2515:3;2493:26;;;;;;;;;;:::i;:::-;;;;;;;;;2486:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:148;;;;:::o;2895:341:12:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;:32::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3310:202:13:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;7332:285:7:-;7416:28;7428:7;7437:6;7416:11;:28::i;:::-;7479:12;:10;:12::i;:::-;7462:29;;:13;:11;:13::i;:::-;:29;;7454:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7555:55;7572:23;7597:4;7603:6;7555:16;:55::i;:::-;;;7332:285;;:::o;8520:535:4:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;10194:96:7:-;10252:7;10282:1;10278;:5;;;;:::i;:::-;10271:12;;10194:96;;;;:::o;2836:192:18:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;8036:224:7:-;8143:43;8169:4;8175:2;8179:6;8143:25;:43::i;:::-;8197:56;8214:15;8224:4;8214:9;:15::i;:::-;8231:13;8241:2;8231:9;:13::i;:::-;8246:6;8197:16;:56::i;:::-;8036:224;;;:::o;14240:187:18:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;12752:90:4:-;;;;:::o;10296:101:7:-;10359:7;10389:1;10385;:5;;;;:::i;:::-;10378:12;;10296:101;;;;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;10457:340:4:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;3695:262:16:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;4299:1895:7:-;4396:7;5493:14;5510:5;:12;;;;5493:29;;5533:11;5558:12;5573:6;5558:21;;5603:1;5594:6;:10;5590:242;;;5620:11;5643:17;5653:6;5643:9;:17::i;:::-;5634:6;:26;;;;:::i;:::-;5620:40;;5716:9;5678:25;5692:5;5699:3;5678:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;5674:148;;;5752:3;5745:10;;5674:148;;;5806:1;5800:3;:7;;;;:::i;:::-;5794:13;;5674:148;5606:226;5590:242;5842;5855:4;5849:3;:10;5842:242;;;5875:11;5889:23;5902:3;5907:4;5889:12;:23::i;:::-;5875:37;;5968:9;5930:25;5944:5;5951:3;5930:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;5926:148;;;6004:3;5997:10;;5926:148;;;6058:1;6052:3;:7;;;;:::i;:::-;6046:13;;5926:148;5861:223;5842:242;;;6133:1;6125:4;:9;:52;;6141:30;6155:5;6169:1;6162:4;:8;6141:13;:30::i;:::-;:36;;;;;;;;;;;;6125:52;;;6137:1;6125:52;6118:59;;;;;;;4299:1895;;;;:::o;8431:380::-;8515:23;8541:20;8551:9;8541;:20::i;:::-;8515:46;;8571:24;8598:20;8608:9;8598;:20::i;:::-;8571:47;;8652:9;8628:10;:21;8639:9;8628:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8721:9;8677:54;;8704:15;8677:54;;8693:9;8677:54;;;;;;;;;;;;8742:62;8759:15;8776:9;8787:16;8742;:62::i;:::-;8505:306;;8431:380;;:::o;827:112:11:-;892:7;918;:14;;;911:21;;827:112;;;:::o;3367:268:12:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;4768:165:16:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:15:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;3111:203:6:-;3171:15;3198:30;3231:7;:14;3239:5;3231:14;;;;;;;;;;;;;;;3198:47;;3265:15;:5;:13;:15::i;:::-;3255:25;;3290:17;:5;:15;:17::i;:::-;3188:126;3111:203;;;:::o;1689:286:12:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;7140:103:7:-;7193:7;7219:17;7212:24;;7140:103;:::o;9420:768::-;9590:17;9609;9638:11;9652:5;:12;;;;9638:26;;9699:25;9734:1;9727:3;:8;:59;;9757:29;9771:5;9784:1;9778:3;:7;9757:13;:29::i;:::-;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;9749:1;9738:16;;;;;;9752:1;9738:16;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;:7::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;:29::i;:::-;9950;9964:5;9977:1;9971:3;:7;9950:13;:29::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;:7::i;:::-;10090:26;;:17;:26::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;:29::i;:::-;10067:89;;;;;10056:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;12073:91:4:-;;;;:::o;449:191:20:-;590:43;616:4;622:2;626:6;590:25;:43::i;:::-;449:191;;;:::o;8817:597:7:-;8914:3;8907:10;;:3;:10;;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;8966:1;8951:17;;:3;:17;;;8947:221;;8989:17;9008;9029:54;9046:12;:17;9059:3;9046:17;;;;;;;;;;;;;;;9065:9;9076:6;9029:16;:54::i;:::-;8988:95;;;;9127:3;9106:47;;;9132:9;9143;9106:47;;;;;;;:::i;:::-;;;;;;;;8970:198;;8947:221;9201:1;9186:17;;:3;:17;;;9182:216;;9224:17;9243;9264:49;9281:12;:17;9294:3;9281:17;;;;;;;;;;;;;;;9300:4;9306:6;9264:16;:49::i;:::-;9223:90;;;;9357:3;9336:47;;;9362:9;9373;9336:47;;;;;;;:::i;:::-;;;;;;;;9205:193;;9182:216;8903:505;8817:597;;;:::o;3963:180:16:-;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;6530:1642:17:-;6578:7;6606:1;6601;:6;6597:45;;6630:1;6623:8;;;;6597:45;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;;8132:3;:23::i;:::-;8125:30;;;6530:1642;;;;:::o;10540:239:7:-;10626:25;10696:10;10693:1;10686:21;10759:3;10752:4;10749:1;10739:18;10735:28;10720:43;;10540:239;;;;:::o;805:153:17:-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;2059:405:12:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;8336:397:15:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;945:123:11:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8633:983:17:-;8685:7;8704:14;8721:1;8704:18;;8775:1;8769:3;8760:5;:12;;:16;8756:99;;;8806:3;8796:13;;;;;8837:3;8827:13;;;;8756:99;8886:1;8881:2;8872:5;:11;;:15;8868:96;;;8917:2;8907:12;;;;;8947:2;8937:12;;;;8868:96;8995:1;8990:2;8981:5;:11;;:15;8977:96;;;9026:2;9016:12;;;;;9056:2;9046:12;;;;8977:96;9104:1;9099:2;9090:5;:11;;:15;9086:96;;;9135:2;9125:12;;;;;9165:2;9155:12;;;;9086:96;9212:1;9208;9199:5;:10;;:14;9195:93;;;9243:1;9233:11;;;;;9272:1;9262:11;;;;9195:93;9318:1;9314;9305:5;:10;;:14;9301:93;;;9349:1;9339:11;;;;;9378:1;9368:11;;;;9301:93;9424:1;9420;9411:5;:10;;:14;9407:93;;;9455:1;9445:11;;;;;9484:1;9474:11;;;;9407:93;9530:1;9526;9517:5;:10;;:14;9513:64;;;9561:1;9551:11;;;;9513:64;9603:6;9596:13;;;8633:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;2536:245:12:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5710:24;5728:5;5710:24;:::i;:::-;5705:3;5698:37;5623:118;;:::o;5747:222::-;5840:4;5878:2;5867:9;5863:18;5855:26;;5891:71;5959:1;5948:9;5944:17;5935:6;5891:71;:::i;:::-;5747:222;;;;:::o;5975:93::-;6011:7;6051:10;6044:5;6040:22;6029:33;;5975:93;;;:::o;6074:115::-;6159:23;6176:5;6159:23;:::i;:::-;6154:3;6147:36;6074:115;;:::o;6195:218::-;6286:4;6324:2;6313:9;6309:18;6301:26;;6337:69;6403:1;6392:9;6388:17;6379:6;6337:69;:::i;:::-;6195:218;;;;:::o;6419:149::-;6455:7;6495:66;6488:5;6484:78;6473:89;;6419:149;;;:::o;6574:115::-;6659:23;6676:5;6659:23;:::i;:::-;6654:3;6647:36;6574:115;;:::o;6695:114::-;6762:6;6796:5;6790:12;6780:22;;6695:114;;;:::o;6815:184::-;6914:11;6948:6;6943:3;6936:19;6988:4;6983:3;6979:14;6964:29;;6815:184;;;;:::o;7005:132::-;7072:4;7095:3;7087:11;;7125:4;7120:3;7116:14;7108:22;;7005:132;;;:::o;7143:108::-;7220:24;7238:5;7220:24;:::i;:::-;7215:3;7208:37;7143:108;;:::o;7257:179::-;7326:10;7347:46;7389:3;7381:6;7347:46;:::i;:::-;7425:4;7420:3;7416:14;7402:28;;7257:179;;;;:::o;7442:113::-;7512:4;7544;7539:3;7535:14;7527:22;;7442:113;;;:::o;7591:732::-;7710:3;7739:54;7787:5;7739:54;:::i;:::-;7809:86;7888:6;7883:3;7809:86;:::i;:::-;7802:93;;7919:56;7969:5;7919:56;:::i;:::-;7998:7;8029:1;8014:284;8039:6;8036:1;8033:13;8014:284;;;8115:6;8109:13;8142:63;8201:3;8186:13;8142:63;:::i;:::-;8135:70;;8228:60;8281:6;8228:60;:::i;:::-;8218:70;;8074:224;8061:1;8058;8054:9;8049:14;;8014:284;;;8018:14;8314:3;8307:10;;7715:608;;;7591:732;;;;:::o;8329:1215::-;8678:4;8716:3;8705:9;8701:19;8693:27;;8730:69;8796:1;8785:9;8781:17;8772:6;8730:69;:::i;:::-;8846:9;8840:4;8836:20;8831:2;8820:9;8816:18;8809:48;8874:78;8947:4;8938:6;8874:78;:::i;:::-;8866:86;;8999:9;8993:4;8989:20;8984:2;8973:9;8969:18;8962:48;9027:78;9100:4;9091:6;9027:78;:::i;:::-;9019:86;;9115:72;9183:2;9172:9;9168:18;9159:6;9115:72;:::i;:::-;9197:73;9265:3;9254:9;9250:19;9241:6;9197:73;:::i;:::-;9280;9348:3;9337:9;9333:19;9324:6;9280:73;:::i;:::-;9401:9;9395:4;9391:20;9385:3;9374:9;9370:19;9363:49;9429:108;9532:4;9523:6;9429:108;:::i;:::-;9421:116;;8329:1215;;;;;;;;;;:::o;9550:329::-;9609:6;9658:2;9646:9;9637:7;9633:23;9629:32;9626:119;;;9664:79;;:::i;:::-;9626:119;9784:1;9809:53;9854:7;9845:6;9834:9;9830:22;9809:53;:::i;:::-;9799:63;;9755:117;9550:329;;;;:::o;9885:97::-;9921:7;9961:14;9954:5;9950:26;9939:37;;9885:97;;;:::o;9988:115::-;10073:23;10090:5;10073:23;:::i;:::-;10068:3;10061:36;9988:115;;:::o;10109:218::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:69;10317:1;10306:9;10302:17;10293:6;10251:69;:::i;:::-;10109:218;;;;:::o;10333:118::-;10404:22;10420:5;10404:22;:::i;:::-;10397:5;10394:33;10384:61;;10441:1;10438;10431:12;10384:61;10333:118;:::o;10457:135::-;10501:5;10539:6;10526:20;10517:29;;10555:31;10580:5;10555:31;:::i;:::-;10457:135;;;;:::o;10598:122::-;10671:24;10689:5;10671:24;:::i;:::-;10664:5;10661:35;10651:63;;10710:1;10707;10700:12;10651:63;10598:122;:::o;10726:139::-;10772:5;10810:6;10797:20;10788:29;;10826:33;10853:5;10826:33;:::i;:::-;10726:139;;;;:::o;10871:1053::-;10973:6;10981;10989;10997;11005;11013;11062:3;11050:9;11041:7;11037:23;11033:33;11030:120;;;11069:79;;:::i;:::-;11030:120;11189:1;11214:53;11259:7;11250:6;11239:9;11235:22;11214:53;:::i;:::-;11204:63;;11160:117;11316:2;11342:53;11387:7;11378:6;11367:9;11363:22;11342:53;:::i;:::-;11332:63;;11287:118;11444:2;11470:53;11515:7;11506:6;11495:9;11491:22;11470:53;:::i;:::-;11460:63;;11415:118;11572:2;11598:51;11641:7;11632:6;11621:9;11617:22;11598:51;:::i;:::-;11588:61;;11543:116;11698:3;11725:53;11770:7;11761:6;11750:9;11746:22;11725:53;:::i;:::-;11715:63;;11669:119;11827:3;11854:53;11899:7;11890:6;11879:9;11875:22;11854:53;:::i;:::-;11844:63;;11798:119;10871:1053;;;;;;;;:::o;11930:1199::-;12041:6;12049;12057;12065;12073;12081;12089;12138:3;12126:9;12117:7;12113:23;12109:33;12106:120;;;12145:79;;:::i;:::-;12106:120;12265:1;12290:53;12335:7;12326:6;12315:9;12311:22;12290:53;:::i;:::-;12280:63;;12236:117;12392:2;12418:53;12463:7;12454:6;12443:9;12439:22;12418:53;:::i;:::-;12408:63;;12363:118;12520:2;12546:53;12591:7;12582:6;12571:9;12567:22;12546:53;:::i;:::-;12536:63;;12491:118;12648:2;12674:53;12719:7;12710:6;12699:9;12695:22;12674:53;:::i;:::-;12664:63;;12619:118;12776:3;12803:51;12846:7;12837:6;12826:9;12822:22;12803:51;:::i;:::-;12793:61;;12747:117;12903:3;12930:53;12975:7;12966:6;12955:9;12951:22;12930:53;:::i;:::-;12920:63;;12874:119;13032:3;13059:53;13104:7;13095:6;13084:9;13080:22;13059:53;:::i;:::-;13049:63;;13003:119;11930:1199;;;;;;;;;;:::o;13135:474::-;13203:6;13211;13260:2;13248:9;13239:7;13235:23;13231:32;13228:119;;;13266:79;;:::i;:::-;13228:119;13386:1;13411:53;13456:7;13447:6;13436:9;13432:22;13411:53;:::i;:::-;13401:63;;13357:117;13513:2;13539:53;13584:7;13575:6;13564:9;13560:22;13539:53;:::i;:::-;13529:63;;13484:118;13135:474;;;;;:::o;13615:120::-;13687:23;13704:5;13687:23;:::i;:::-;13680:5;13677:34;13667:62;;13725:1;13722;13715:12;13667:62;13615:120;:::o;13741:137::-;13786:5;13824:6;13811:20;13802:29;;13840:32;13866:5;13840:32;:::i;:::-;13741:137;;;;:::o;13884:472::-;13951:6;13959;14008:2;13996:9;13987:7;13983:23;13979:32;13976:119;;;14014:79;;:::i;:::-;13976:119;14134:1;14159:53;14204:7;14195:6;14184:9;14180:22;14159:53;:::i;:::-;14149:63;;14105:117;14261:2;14287:52;14331:7;14322:6;14311:9;14307:22;14287:52;:::i;:::-;14277:62;;14232:117;13884:472;;;;;:::o;14362:105::-;14437:23;14454:5;14437:23;:::i;:::-;14432:3;14425:36;14362:105;;:::o;14473:142::-;14510:7;14550:58;14543:5;14539:70;14528:81;;14473:142;;;:::o;14621:108::-;14698:24;14716:5;14698:24;:::i;:::-;14693:3;14686:37;14621:108;;:::o;14803:515::-;14954:4;14949:3;14945:14;15046:4;15039:5;15035:16;15029:23;15065:61;15120:4;15115:3;15111:14;15097:12;15065:61;:::i;:::-;14969:167;15219:4;15212:5;15208:16;15202:23;15238:63;15295:4;15290:3;15286:14;15272:12;15238:63;:::i;:::-;15146:165;14923:395;14803:515;;:::o;15324:330::-;15471:4;15509:2;15498:9;15494:18;15486:26;;15522:125;15644:1;15633:9;15629:17;15620:6;15522:125;:::i;:::-;15324:330;;;;:::o;15660:180::-;15708:77;15705:1;15698:88;15805:4;15802:1;15795:15;15829:4;15826:1;15819:15;15846:320;15890:6;15927:1;15921:4;15917:12;15907:22;;15974:1;15968:4;15964:12;15995:18;15985:81;;16051:4;16043:6;16039:17;16029:27;;15985:81;16113:2;16105:6;16102:14;16082:18;16079:38;16076:84;;16132:18;;:::i;:::-;16076:84;15897:269;15846:320;;;:::o;16172:180::-;16220:77;16217:1;16210:88;16317:4;16314:1;16307:15;16341:4;16338:1;16331:15;16358:191;16398:3;16417:20;16435:1;16417:20;:::i;:::-;16412:25;;16451:20;16469:1;16451:20;:::i;:::-;16446:25;;16494:1;16491;16487:9;16480:16;;16515:3;16512:1;16509:10;16506:36;;;16522:18;;:::i;:::-;16506:36;16358:191;;;;:::o;16555:175::-;16695:27;16691:1;16683:6;16679:14;16672:51;16555:175;:::o;16736:366::-;16878:3;16899:67;16963:2;16958:3;16899:67;:::i;:::-;16892:74;;16975:93;17064:3;16975:93;:::i;:::-;17093:2;17088:3;17084:12;17077:19;;16736:366;;;:::o;17108:419::-;17274:4;17312:2;17301:9;17297:18;17289:26;;17361:9;17355:4;17351:20;17347:1;17336:9;17332:17;17325:47;17389:131;17515:4;17389:131;:::i;:::-;17381:139;;17108:419;;;:::o;17533:179::-;17673:31;17669:1;17661:6;17657:14;17650:55;17533:179;:::o;17718:366::-;17860:3;17881:67;17945:2;17940:3;17881:67;:::i;:::-;17874:74;;17957:93;18046:3;17957:93;:::i;:::-;18075:2;18070:3;18066:12;18059:19;;17718:366;;;:::o;18090:419::-;18256:4;18294:2;18283:9;18279:18;18271:26;;18343:9;18337:4;18333:20;18329:1;18318:9;18314:17;18307:47;18371:131;18497:4;18371:131;:::i;:::-;18363:139;;18090:419;;;:::o;18515:180::-;18563:77;18560:1;18553:88;18660:4;18657:1;18650:15;18684:4;18681:1;18674:15;18701:180;18749:77;18746:1;18739:88;18846:4;18843:1;18836:15;18870:4;18867:1;18860:15;18887:224;19027:34;19023:1;19015:6;19011:14;19004:58;19096:7;19091:2;19083:6;19079:15;19072:32;18887:224;:::o;19117:366::-;19259:3;19280:67;19344:2;19339:3;19280:67;:::i;:::-;19273:74;;19356:93;19445:3;19356:93;:::i;:::-;19474:2;19469:3;19465:12;19458:19;;19117:366;;;:::o;19489:419::-;19655:4;19693:2;19682:9;19678:18;19670:26;;19742:9;19736:4;19732:20;19728:1;19717:9;19713:17;19706:47;19770:131;19896:4;19770:131;:::i;:::-;19762:139;;19489:419;;;:::o;19914:179::-;20054:31;20050:1;20042:6;20038:14;20031:55;19914:179;:::o;20099:366::-;20241:3;20262:67;20326:2;20321:3;20262:67;:::i;:::-;20255:74;;20338:93;20427:3;20338:93;:::i;:::-;20456:2;20451:3;20447:12;20440:19;;20099:366;;;:::o;20471:419::-;20637:4;20675:2;20664:9;20660:18;20652:26;;20724:9;20718:4;20714:20;20710:1;20699:9;20695:17;20688:47;20752:131;20878:4;20752:131;:::i;:::-;20744:139;;20471:419;;;:::o;20896:553::-;21073:4;21111:3;21100:9;21096:19;21088:27;;21125:71;21193:1;21182:9;21178:17;21169:6;21125:71;:::i;:::-;21206:72;21274:2;21263:9;21259:18;21250:6;21206:72;:::i;:::-;21288;21356:2;21345:9;21341:18;21332:6;21288:72;:::i;:::-;21370;21438:2;21427:9;21423:18;21414:6;21370:72;:::i;:::-;20896:553;;;;;;;:::o;21455:175::-;21595:27;21591:1;21583:6;21579:14;21572:51;21455:175;:::o;21636:366::-;21778:3;21799:67;21863:2;21858:3;21799:67;:::i;:::-;21792:74;;21875:93;21964:3;21875:93;:::i;:::-;21993:2;21988:3;21984:12;21977:19;;21636:366;;;:::o;22008:419::-;22174:4;22212:2;22201:9;22197:18;22189:26;;22261:9;22255:4;22251:20;22247:1;22236:9;22232:17;22225:47;22289:131;22415:4;22289:131;:::i;:::-;22281:139;;22008:419;;;:::o;22433:179::-;22573:31;22569:1;22561:6;22557:14;22550:55;22433:179;:::o;22618:366::-;22760:3;22781:67;22845:2;22840:3;22781:67;:::i;:::-;22774:74;;22857:93;22946:3;22857:93;:::i;:::-;22975:2;22970:3;22966:12;22959:19;;22618:366;;;:::o;22990:419::-;23156:4;23194:2;23183:9;23179:18;23171:26;;23243:9;23237:4;23233:20;23229:1;23218:9;23214:17;23207:47;23271:131;23397:4;23271:131;:::i;:::-;23263:139;;22990:419;;;:::o;23415:775::-;23648:4;23686:3;23675:9;23671:19;23663:27;;23700:71;23768:1;23757:9;23753:17;23744:6;23700:71;:::i;:::-;23781:72;23849:2;23838:9;23834:18;23825:6;23781:72;:::i;:::-;23863;23931:2;23920:9;23916:18;23907:6;23863:72;:::i;:::-;23945;24013:2;24002:9;23998:18;23989:6;23945:72;:::i;:::-;24027:73;24095:3;24084:9;24080:19;24071:6;24027:73;:::i;:::-;24110;24178:3;24167:9;24163:19;24154:6;24110:73;:::i;:::-;23415:775;;;;;;;;;:::o;24196:180::-;24336:32;24332:1;24324:6;24320:14;24313:56;24196:180;:::o;24382:366::-;24524:3;24545:67;24609:2;24604:3;24545:67;:::i;:::-;24538:74;;24621:93;24710:3;24621:93;:::i;:::-;24739:2;24734:3;24730:12;24723:19;;24382:366;;;:::o;24754:419::-;24920:4;24958:2;24947:9;24943:18;24935:26;;25007:9;25001:4;24997:20;24993:1;24982:9;24978:17;24971:47;25035:131;25161:4;25035:131;:::i;:::-;25027:139;;24754:419;;;:::o;25179:141::-;25228:4;25251:3;25243:11;;25274:3;25271:1;25264:14;25308:4;25305:1;25295:18;25287:26;;25179:141;;;:::o;25326:93::-;25363:6;25410:2;25405;25398:5;25394:14;25390:23;25380:33;;25326:93;;;:::o;25425:107::-;25469:8;25519:5;25513:4;25509:16;25488:37;;25425:107;;;;:::o;25538:393::-;25607:6;25657:1;25645:10;25641:18;25680:97;25710:66;25699:9;25680:97;:::i;:::-;25798:39;25828:8;25817:9;25798:39;:::i;:::-;25786:51;;25870:4;25866:9;25859:5;25855:21;25846:30;;25919:4;25909:8;25905:19;25898:5;25895:30;25885:40;;25614:317;;25538:393;;;;;:::o;25937:60::-;25965:3;25986:5;25979:12;;25937:60;;;:::o;26003:142::-;26053:9;26086:53;26104:34;26113:24;26131:5;26113:24;:::i;:::-;26104:34;:::i;:::-;26086:53;:::i;:::-;26073:66;;26003:142;;;:::o;26151:75::-;26194:3;26215:5;26208:12;;26151:75;;;:::o;26232:269::-;26342:39;26373:7;26342:39;:::i;:::-;26403:91;26452:41;26476:16;26452:41;:::i;:::-;26444:6;26437:4;26431:11;26403:91;:::i;:::-;26397:4;26390:105;26308:193;26232:269;;;:::o;26507:73::-;26552:3;26507:73;:::o;26586:189::-;26663:32;;:::i;:::-;26704:65;26762:6;26754;26748:4;26704:65;:::i;:::-;26639:136;26586:189;;:::o;26781:186::-;26841:120;26858:3;26851:5;26848:14;26841:120;;;26912:39;26949:1;26942:5;26912:39;:::i;:::-;26885:1;26878:5;26874:13;26865:22;;26841:120;;;26781:186;;:::o;26973:543::-;27074:2;27069:3;27066:11;27063:446;;;27108:38;27140:5;27108:38;:::i;:::-;27192:29;27210:10;27192:29;:::i;:::-;27182:8;27178:44;27375:2;27363:10;27360:18;27357:49;;;27396:8;27381:23;;27357:49;27419:80;27475:22;27493:3;27475:22;:::i;:::-;27465:8;27461:37;27448:11;27419:80;:::i;:::-;27078:431;;27063:446;26973:543;;;:::o;27522:117::-;27576:8;27626:5;27620:4;27616:16;27595:37;;27522:117;;;;:::o;27645:169::-;27689:6;27722:51;27770:1;27766:6;27758:5;27755:1;27751:13;27722:51;:::i;:::-;27718:56;27803:4;27797;27793:15;27783:25;;27696:118;27645:169;;;;:::o;27819:295::-;27895:4;28041:29;28066:3;28060:4;28041:29;:::i;:::-;28033:37;;28103:3;28100:1;28096:11;28090:4;28087:21;28079:29;;27819:295;;;;:::o;28119:1395::-;28236:37;28269:3;28236:37;:::i;:::-;28338:18;28330:6;28327:30;28324:56;;;28360:18;;:::i;:::-;28324:56;28404:38;28436:4;28430:11;28404:38;:::i;:::-;28489:67;28549:6;28541;28535:4;28489:67;:::i;:::-;28583:1;28607:4;28594:17;;28639:2;28631:6;28628:14;28656:1;28651:618;;;;29313:1;29330:6;29327:77;;;29379:9;29374:3;29370:19;29364:26;29355:35;;29327:77;29430:67;29490:6;29483:5;29430:67;:::i;:::-;29424:4;29417:81;29286:222;28621:887;;28651:618;28703:4;28699:9;28691:6;28687:22;28737:37;28769:4;28737:37;:::i;:::-;28796:1;28810:208;28824:7;28821:1;28818:14;28810:208;;;28903:9;28898:3;28894:19;28888:26;28880:6;28873:42;28954:1;28946:6;28942:14;28932:24;;29001:2;28990:9;28986:18;28973:31;;28847:4;28844:1;28840:12;28835:17;;28810:208;;;29046:6;29037:7;29034:19;29031:179;;;29104:9;29099:3;29095:19;29089:26;29147:48;29189:4;29181:6;29177:17;29166:9;29147:48;:::i;:::-;29139:6;29132:64;29054:156;29031:179;29256:1;29252;29244:6;29240:14;29236:22;29230:4;29223:36;28658:611;;;28621:887;;28211:1303;;;28119:1395;;:::o;29520:235::-;29660:34;29656:1;29648:6;29644:14;29637:58;29729:18;29724:2;29716:6;29712:15;29705:43;29520:235;:::o;29761:366::-;29903:3;29924:67;29988:2;29983:3;29924:67;:::i;:::-;29917:74;;30000:93;30089:3;30000:93;:::i;:::-;30118:2;30113:3;30109:12;30102:19;;29761:366;;;:::o;30133:419::-;30299:4;30337:2;30326:9;30322:18;30314:26;;30386:9;30380:4;30376:20;30372:1;30361:9;30357:17;30350:47;30414:131;30540:4;30414:131;:::i;:::-;30406:139;;30133:419;;;:::o;30558:181::-;30698:33;30694:1;30686:6;30682:14;30675:57;30558:181;:::o;30745:366::-;30887:3;30908:67;30972:2;30967:3;30908:67;:::i;:::-;30901:74;;30984:93;31073:3;30984:93;:::i;:::-;31102:2;31097:3;31093:12;31086:19;;30745:366;;;:::o;31117:419::-;31283:4;31321:2;31310:9;31306:18;31298:26;;31370:9;31364:4;31360:20;31356:1;31345:9;31341:17;31334:47;31398:131;31524:4;31398:131;:::i;:::-;31390:139;;31117:419;;;:::o;31542:226::-;31682:34;31678:1;31670:6;31666:14;31659:58;31751:9;31746:2;31738:6;31734:15;31727:34;31542:226;:::o;31774:366::-;31916:3;31937:67;32001:2;31996:3;31937:67;:::i;:::-;31930:74;;32013:93;32102:3;32013:93;:::i;:::-;32131:2;32126:3;32122:12;32115:19;;31774:366;;;:::o;32146:419::-;32312:4;32350:2;32339:9;32335:18;32327:26;;32399:9;32393:4;32389:20;32385:1;32374:9;32370:17;32363:47;32427:131;32553:4;32427:131;:::i;:::-;32419:139;;32146:419;;;:::o;32571:225::-;32711:34;32707:1;32699:6;32695:14;32688:58;32780:8;32775:2;32767:6;32763:15;32756:33;32571:225;:::o;32802:366::-;32944:3;32965:67;33029:2;33024:3;32965:67;:::i;:::-;32958:74;;33041:93;33130:3;33041:93;:::i;:::-;33159:2;33154:3;33150:12;33143:19;;32802:366;;;:::o;33174:419::-;33340:4;33378:2;33367:9;33363:18;33355:26;;33427:9;33421:4;33417:20;33413:1;33402:9;33398:17;33391:47;33455:131;33581:4;33455:131;:::i;:::-;33447:139;;33174:419;;;:::o;33599:225::-;33739:34;33735:1;33727:6;33723:14;33716:58;33808:8;33803:2;33795:6;33791:15;33784:33;33599:225;:::o;33830:366::-;33972:3;33993:67;34057:2;34052:3;33993:67;:::i;:::-;33986:74;;34069:93;34158:3;34069:93;:::i;:::-;34187:2;34182:3;34178:12;34171:19;;33830:366;;;:::o;34202:419::-;34368:4;34406:2;34395:9;34391:18;34383:26;;34455:9;34449:4;34445:20;34441:1;34430:9;34426:17;34419:47;34483:131;34609:4;34483:131;:::i;:::-;34475:139;;34202:419;;;:::o;34627:194::-;34667:4;34687:20;34705:1;34687:20;:::i;:::-;34682:25;;34721:20;34739:1;34721:20;:::i;:::-;34716:25;;34765:1;34762;34758:9;34750:17;;34789:1;34783:4;34780:11;34777:37;;;34794:18;;:::i;:::-;34777:37;34627:194;;;;:::o;34827:223::-;34967:34;34963:1;34955:6;34951:14;34944:58;35036:6;35031:2;35023:6;35019:15;35012:31;34827:223;:::o;35056:366::-;35198:3;35219:67;35283:2;35278:3;35219:67;:::i;:::-;35212:74;;35295:93;35384:3;35295:93;:::i;:::-;35413:2;35408:3;35404:12;35397:19;;35056:366;;;:::o;35428:419::-;35594:4;35632:2;35621:9;35617:18;35609:26;;35681:9;35675:4;35671:20;35667:1;35656:9;35652:17;35645:47;35709:131;35835:4;35709:131;:::i;:::-;35701:139;;35428:419;;;:::o;35853:221::-;35993:34;35989:1;35981:6;35977:14;35970:58;36062:4;36057:2;36049:6;36045:15;36038:29;35853:221;:::o;36080:366::-;36222:3;36243:67;36307:2;36302:3;36243:67;:::i;:::-;36236:74;;36319:93;36408:3;36319:93;:::i;:::-;36437:2;36432:3;36428:12;36421:19;;36080:366;;;:::o;36452:419::-;36618:4;36656:2;36645:9;36641:18;36633:26;;36705:9;36699:4;36695:20;36691:1;36680:9;36676:17;36669:47;36733:131;36859:4;36733:131;:::i;:::-;36725:139;;36452:419;;;:::o;36877:179::-;37017:31;37013:1;37005:6;37001:14;36994:55;36877:179;:::o;37062:366::-;37204:3;37225:67;37289:2;37284:3;37225:67;:::i;:::-;37218:74;;37301:93;37390:3;37301:93;:::i;:::-;37419:2;37414:3;37410:12;37403:19;;37062:366;;;:::o;37434:419::-;37600:4;37638:2;37627:9;37623:18;37615:26;;37687:9;37681:4;37677:20;37673:1;37662:9;37658:17;37651:47;37715:131;37841:4;37715:131;:::i;:::-;37707:139;;37434:419;;;:::o;37859:224::-;37999:34;37995:1;37987:6;37983:14;37976:58;38068:7;38063:2;38055:6;38051:15;38044:32;37859:224;:::o;38089:366::-;38231:3;38252:67;38316:2;38311:3;38252:67;:::i;:::-;38245:74;;38328:93;38417:3;38328:93;:::i;:::-;38446:2;38441:3;38437:12;38430:19;;38089:366;;;:::o;38461:419::-;38627:4;38665:2;38654:9;38650:18;38642:26;;38714:9;38708:4;38704:20;38700:1;38689:9;38685:17;38678:47;38742:131;38868:4;38742:131;:::i;:::-;38734:139;;38461:419;;;:::o;38886:222::-;39026:34;39022:1;39014:6;39010:14;39003:58;39095:5;39090:2;39082:6;39078:15;39071:30;38886:222;:::o;39114:366::-;39256:3;39277:67;39341:2;39336:3;39277:67;:::i;:::-;39270:74;;39353:93;39442:3;39353:93;:::i;:::-;39471:2;39466:3;39462:12;39455:19;;39114:366;;;:::o;39486:419::-;39652:4;39690:2;39679:9;39675:18;39667:26;;39739:9;39733:4;39729:20;39725:1;39714:9;39710:17;39703:47;39767:131;39893:4;39767:131;:::i;:::-;39759:139;;39486:419;;;:::o;39911:225::-;40051:34;40047:1;40039:6;40035:14;40028:58;40120:8;40115:2;40107:6;40103:15;40096:33;39911:225;:::o;40142:366::-;40284:3;40305:67;40369:2;40364:3;40305:67;:::i;:::-;40298:74;;40381:93;40470:3;40381:93;:::i;:::-;40499:2;40494:3;40490:12;40483:19;;40142:366;;;:::o;40514:419::-;40680:4;40718:2;40707:9;40703:18;40695:26;;40767:9;40761:4;40757:20;40753:1;40742:9;40738:17;40731:47;40795:131;40921:4;40795:131;:::i;:::-;40787:139;;40514:419;;;:::o;40939:98::-;40990:6;41024:5;41018:12;41008:22;;40939:98;;;:::o;41043:116::-;41094:4;41117:3;41109:11;;41147:4;41142:3;41138:14;41130:22;;41043:116;;;:::o;41165:154::-;41208:11;41244:29;41268:3;41262:10;41244:29;:::i;:::-;41307:5;41283:29;;41220:99;41165:154;;;:::o;41325:594::-;41409:5;41440:38;41472:5;41440:38;:::i;:::-;41503:5;41530:40;41564:5;41530:40;:::i;:::-;41518:52;;41589:35;41615:8;41589:35;:::i;:::-;41580:44;;41648:2;41640:6;41637:14;41634:278;;;41719:169;41804:66;41774:6;41770:2;41766:15;41763:1;41759:23;41719:169;:::i;:::-;41696:5;41675:227;41666:236;;41634:278;41415:504;;41325:594;;;:::o;41925:332::-;42046:4;42084:2;42073:9;42069:18;42061:26;;42097:71;42165:1;42154:9;42150:17;42141:6;42097:71;:::i;:::-;42178:72;42246:2;42235:9;42231:18;42222:6;42178:72;:::i;:::-;41925:332;;;;;:::o;42263:664::-;42468:4;42506:3;42495:9;42491:19;42483:27;;42520:71;42588:1;42577:9;42573:17;42564:6;42520:71;:::i;:::-;42601:72;42669:2;42658:9;42654:18;42645:6;42601:72;:::i;:::-;42683;42751:2;42740:9;42736:18;42727:6;42683:72;:::i;:::-;42765;42833:2;42822:9;42818:18;42809:6;42765:72;:::i;:::-;42847:73;42915:3;42904:9;42900:19;42891:6;42847:73;:::i;:::-;42263:664;;;;;;;;:::o;42933:180::-;42981:77;42978:1;42971:88;43078:4;43075:1;43068:15;43102:4;43099:1;43092:15;43119:185;43159:1;43176:20;43194:1;43176:20;:::i;:::-;43171:25;;43210:20;43228:1;43210:20;:::i;:::-;43205:25;;43249:1;43239:35;;43254:18;;:::i;:::-;43239:35;43296:1;43293;43289:9;43284:14;;43119:185;;;;:::o;43310:545::-;43483:4;43521:3;43510:9;43506:19;43498:27;;43535:71;43603:1;43592:9;43588:17;43579:6;43535:71;:::i;:::-;43616:68;43680:2;43669:9;43665:18;43656:6;43616:68;:::i;:::-;43694:72;43762:2;43751:9;43747:18;43738:6;43694:72;:::i;:::-;43776;43844:2;43833:9;43829:18;43820:6;43776:72;:::i;:::-;43310:545;;;;;;;:::o;43861:180::-;43909:77;43906:1;43899:88;44006:4;44003:1;43996:15;44030:4;44027:1;44020:15;44047:174;44187:26;44183:1;44175:6;44171:14;44164:50;44047:174;:::o;44227:366::-;44369:3;44390:67;44454:2;44449:3;44390:67;:::i;:::-;44383:74;;44466:93;44555:3;44466:93;:::i;:::-;44584:2;44579:3;44575:12;44568:19;;44227:366;;;:::o;44599:419::-;44765:4;44803:2;44792:9;44788:18;44780:26;;44852:9;44846:4;44842:20;44838:1;44827:9;44823:17;44816:47;44880:131;45006:4;44880:131;:::i;:::-;44872:139;;44599:419;;;:::o;45024:181::-;45164:33;45160:1;45152:6;45148:14;45141:57;45024:181;:::o;45211:366::-;45353:3;45374:67;45438:2;45433:3;45374:67;:::i;:::-;45367:74;;45450:93;45539:3;45450:93;:::i;:::-;45568:2;45563:3;45559:12;45552:19;;45211:366;;;:::o;45583:419::-;45749:4;45787:2;45776:9;45772:18;45764:26;;45836:9;45830:4;45826:20;45822:1;45811:9;45807:17;45800:47;45864:131;45990:4;45864:131;:::i;:::-;45856:139;;45583:419;;;:::o;46008:221::-;46148:34;46144:1;46136:6;46132:14;46125:58;46217:4;46212:2;46204:6;46200:15;46193:29;46008:221;:::o;46235:366::-;46377:3;46398:67;46462:2;46457:3;46398:67;:::i;:::-;46391:74;;46474:93;46563:3;46474:93;:::i;:::-;46592:2;46587:3;46583:12;46576:19;;46235:366;;;:::o;46607:419::-;46773:4;46811:2;46800:9;46796:18;46788:26;;46860:9;46854:4;46850:20;46846:1;46835:9;46831:17;46824:47;46888:131;47014:4;46888:131;:::i;:::-;46880:139;;46607:419;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","s_maxSupply()":"5d641847","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceToken.sol\":\"GovernanceToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/GovernanceToken.sol\":{\"keccak256\":\"0x6b013da9c8f2768cb74733ecdfec739312ee4763c24a76ba543aa3b8b2467ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6db5ee6a8f3c58ae76ecfc47e31f8d02d8986609deacc5733c1b14145d8cf1\",\"dweb:/ipfs/Qmd98kymuNCEf2VycGymPadUBzvuFiY9EBD8LarSG5dsQP\"]}},\"version\":1}"}}}}}